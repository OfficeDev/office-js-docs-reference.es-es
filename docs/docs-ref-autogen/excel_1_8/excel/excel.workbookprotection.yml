### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorkbookProtection:class'
    summary: |-
      <span data-ttu-id="d7db9-101">Representa la protección de un objeto Workbook.</span><span class="sxs-lookup"><span data-stu-id="d7db9-101">Represents the protection of a workbook object.</span></span>

      <span data-ttu-id="d7db9-102">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7db9-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorkbookProtection
    fullName: Excel.WorkbookProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorkbookProtection#context:member'
      - 'excel!Excel.WorkbookProtection#load:member(1)'
      - 'excel!Excel.WorkbookProtection#load:member(2)'
      - 'excel!Excel.WorkbookProtection#load:member(3)'
      - 'excel!Excel.WorkbookProtection#protect:member(1)'
      - 'excel!Excel.WorkbookProtection#protected:member'
      - 'excel!Excel.WorkbookProtection#toJSON:member(1)'
      - 'excel!Excel.WorkbookProtection#unprotect:member(1)'
  - uid: 'excel!Excel.WorkbookProtection#context:member'
    summary: <span data-ttu-id="d7db9-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="d7db9-103">The request context associated with the object.</span></span> <span data-ttu-id="d7db9-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="d7db9-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorkbookProtection#load:member(1)'
    summary: <span data-ttu-id="d7db9-105">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d7db9-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7db9-106">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d7db9-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="d7db9-107">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="d7db9-107">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.WorkbookProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorkbookProtection#load:member(2)'
    summary: <span data-ttu-id="d7db9-108">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d7db9-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7db9-109">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d7db9-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d7db9-110">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d7db9-110">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorkbookProtection#load:member(3)'
    summary: <span data-ttu-id="d7db9-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d7db9-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7db9-112">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d7db9-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorkbookProtection;
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d7db9-113">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d7db9-113">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.WorkbookProtection#protect:member(1)'
    summary: |-
      <span data-ttu-id="d7db9-114">Protege un libro.</span><span class="sxs-lookup"><span data-stu-id="d7db9-114">Protects a workbook.</span></span> <span data-ttu-id="d7db9-115">Produce un error si se ha protegido el libro.</span><span class="sxs-lookup"><span data-stu-id="d7db9-115">Fails if the workbook has been protected.</span></span>

      <span data-ttu-id="d7db9-116">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7db9-116">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protect(password)
    fullName: protect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d7db9-117">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d7db9-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect(password);
              }
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="d7db9-118">contraseña de protección del libro.</span><span class="sxs-lookup"><span data-stu-id="d7db9-118">workbook protection password.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorkbookProtection#protected:member'
    summary: |-
      <span data-ttu-id="d7db9-119">Indica si el libro está protegido.</span><span class="sxs-lookup"><span data-stu-id="d7db9-119">Indicates if the workbook is protected.</span></span> <span data-ttu-id="d7db9-120">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d7db9-120">Read-Only.</span></span>

      <span data-ttu-id="d7db9-121">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7db9-121">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorkbookProtection#toJSON:member(1)'
    summary: '<span data-ttu-id="d7db9-122">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d7db9-122">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d7db9-123">.</span><span class="sxs-lookup"><span data-stu-id="d7db9-123"></span></span> <span data-ttu-id="d7db9-124">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d7db9-124"></span></span><!-- --><span data-ttu-id="d7db9-125">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. WorkbookProtection original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.WorkbookProtectionData`</span><span class="sxs-lookup"><span data-stu-id="d7db9-125">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`</span></span><!-- --><span data-ttu-id="d7db9-126">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="d7db9-126">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookProtectionData:interface'
        description: ''
  - uid: 'excel!Excel.WorkbookProtection#unprotect:member(1)'
    summary: |-
      <span data-ttu-id="d7db9-127">Desprotege un libro.</span><span class="sxs-lookup"><span data-stu-id="d7db9-127">Unprotects a workbook.</span></span>

      <span data-ttu-id="d7db9-128">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7db9-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d7db9-129">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d7db9-129">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="d7db9-130">contraseña de protección del libro.</span><span class="sxs-lookup"><span data-stu-id="d7db9-130">workbook protection password.</span></span>
          type:
            - string
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorkbookProtection:class'
    name: Excel.WorkbookProtection
  - uid: 'excel!Excel.Interfaces.WorkbookProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorkbookProtectionLoadOptions
  - uid: 'excel!Excel.Interfaces.WorkbookProtectionData:interface'
    name: Excel.Interfaces.WorkbookProtectionData