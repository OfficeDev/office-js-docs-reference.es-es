### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    summary: |-
      <span data-ttu-id="cfa48-101">Representa el borde de un objeto.</span><span class="sxs-lookup"><span data-stu-id="cfa48-101">Represents the border of an object.</span></span>

      <span data-ttu-id="cfa48-102">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfa48-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeBorder#color:member'
      - 'excel!Excel.ConditionalRangeBorder#context:member'
      - 'excel!Excel.ConditionalRangeBorder#load:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(3)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
      - 'excel!Excel.ConditionalRangeBorder#style:member'
      - 'excel!Excel.ConditionalRangeBorder#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalRangeBorder#color:member'
    summary: |-
      <span data-ttu-id="cfa48-103">Código de color HTML que representa el color de la línea de borde, \#con el formato RRGGBB (por ejemplo, "FFA500") o como un color HTML con nombre (por ejemplo, "naranja").</span><span class="sxs-lookup"><span data-stu-id="cfa48-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="cfa48-104">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfa48-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeBorder#context:member'
    summary: <span data-ttu-id="cfa48-105">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="cfa48-105">The request context associated with the object.</span></span> <span data-ttu-id="cfa48-106">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="cfa48-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(1)'
    summary: <span data-ttu-id="cfa48-107">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cfa48-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfa48-108">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cfa48-108">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeBorderLoadOptions): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="cfa48-109">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="cfa48-109">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeBorderLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(2)'
    summary: <span data-ttu-id="cfa48-110">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cfa48-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfa48-111">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cfa48-111">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="cfa48-112">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="cfa48-112">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(3)'
    summary: <span data-ttu-id="cfa48-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cfa48-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfa48-114">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cfa48-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeBorder;
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="cfa48-115">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="cfa48-115">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(1)'
    summary: '<span data-ttu-id="cfa48-116">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="cfa48-116">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="cfa48-117">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="cfa48-117">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="cfa48-118">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="cfa48-118">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeBorder): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="cfa48-119">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="cfa48-119">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeBorderUpdateData:interface'
        - id: options
          description: <span data-ttu-id="cfa48-120">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cfa48-120">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(2)'
    summary: '<span data-ttu-id="cfa48-121">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="cfa48-121">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeBorder): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeBorder:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
    summary: |-
      <span data-ttu-id="cfa48-122">Valor constante que indica el lado específico del borde.</span><span class="sxs-lookup"><span data-stu-id="cfa48-122">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id="cfa48-123">Consulte Excel. ConditionalRangeBorderIndex para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="cfa48-123">See Excel.ConditionalRangeBorderIndex for details.</span></span> <span data-ttu-id="cfa48-124">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cfa48-124">Read-only.</span></span>

      <span data-ttu-id="cfa48-125">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfa48-125">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#style:member'
    summary: |-
      <span data-ttu-id="cfa48-126">Una de las constantes de estilo de línea que especifica el estilo de línea del borde.</span><span class="sxs-lookup"><span data-stu-id="cfa48-126">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id="cfa48-127">Consulte Excel. BorderLineStyle para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="cfa48-127">See Excel.BorderLineStyle for details.</span></span>

      <span data-ttu-id="cfa48-128">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfa48-128">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#style~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#toJSON:member(1)'
    summary: '<span data-ttu-id="cfa48-129">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cfa48-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cfa48-130">.</span><span class="sxs-lookup"><span data-stu-id="cfa48-130"></span></span> <span data-ttu-id="cfa48-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cfa48-131"></span></span><!-- --><span data-ttu-id="cfa48-132">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. ConditionalRangeBorder original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ConditionalRangeBorderData`</span><span class="sxs-lookup"><span data-stu-id="cfa48-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeBorderData`</span></span><!-- --><span data-ttu-id="cfa48-133">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="cfa48-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeBorderData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeBorderData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    name: Excel.ConditionalRangeBorder
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeBorderLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderUpdateData:interface'
    name: Interfaces.ConditionalRangeBorderUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
    name: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    fullName: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderIndex:enum'
        name: Excel.ConditionalRangeBorderIndex
        fullName: Excel.ConditionalRangeBorderIndex
      - name: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
        fullName: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
  - uid: 'excel!Excel.ConditionalRangeBorder#style~0:complex'
    name: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    fullName: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderLineStyle:enum'
        name: Excel.ConditionalRangeBorderLineStyle
        fullName: Excel.ConditionalRangeBorderLineStyle
      - name: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
        fullName: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderData:interface'
    name: Excel.Interfaces.ConditionalRangeBorderData