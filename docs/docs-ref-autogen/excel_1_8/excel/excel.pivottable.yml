### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTable:class'
    summary: |-
      <span data-ttu-id="2447c-101">Representa una tabla dinámica de Excel.</span><span class="sxs-lookup"><span data-stu-id="2447c-101">Represents an Excel PivotTable.</span></span> <span data-ttu-id="2447c-102">Para obtener más información sobre el modelo de objetos de tabla dinámica, vea [trabajar con tablas dinámicas mediante la API de JavaScript de Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span><span class="sxs-lookup"><span data-stu-id="2447c-102">To learn more about the PivotTable object model, read [Work with PivotTables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span></span><!-- --><span data-ttu-id="2447c-103">.</span><span class="sxs-lookup"><span data-stu-id="2447c-103"></span></span>

      <span data-ttu-id="2447c-104">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTable#columnHierarchies:member'
      - 'excel!Excel.PivotTable#context:member'
      - 'excel!Excel.PivotTable#dataHierarchies:member'
      - 'excel!Excel.PivotTable#delete:member(1)'
      - 'excel!Excel.PivotTable#filterHierarchies:member'
      - 'excel!Excel.PivotTable#hierarchies:member'
      - 'excel!Excel.PivotTable#id:member'
      - 'excel!Excel.PivotTable#layout:member'
      - 'excel!Excel.PivotTable#load:member(1)'
      - 'excel!Excel.PivotTable#load:member(2)'
      - 'excel!Excel.PivotTable#load:member(3)'
      - 'excel!Excel.PivotTable#name:member'
      - 'excel!Excel.PivotTable#refresh:member(1)'
      - 'excel!Excel.PivotTable#rowHierarchies:member'
      - 'excel!Excel.PivotTable#set:member(1)'
      - 'excel!Excel.PivotTable#set:member(2)'
      - 'excel!Excel.PivotTable#toJSON:member(1)'
      - 'excel!Excel.PivotTable#worksheet:member'
  - uid: 'excel!Excel.PivotTable#columnHierarchies:member'
    summary: |-
      <span data-ttu-id="2447c-105">Las jerarquías dinámicas de columna de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-105">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="2447c-106">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2447c-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2447c-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#context:member'
    summary: <span data-ttu-id="2447c-108">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="2447c-108">The request context associated with the object.</span></span> <span data-ttu-id="2447c-109">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="2447c-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTable#dataHierarchies:member'
    summary: |-
      <span data-ttu-id="2447c-110">Las jerarquías dinámicas de datos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-110">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="2447c-111">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2447c-112">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2447c-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#delete:member(1)'
    summary: |-
      <span data-ttu-id="2447c-113">Elimina la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-113">Deletes the PivotTable.</span></span>

      <span data-ttu-id="2447c-114">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2447c-115">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2447c-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#filterHierarchies:member'
    summary: |-
      <span data-ttu-id="2447c-116">Las jerarquías dinámicas de filtro de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-116">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="2447c-117">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.FilterPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2447c-118">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2447c-118">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: 'excel!Excel.PivotTable#hierarchies:member'
    summary: |-
      <span data-ttu-id="2447c-119">Las jerarquías dinámicas de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-119">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="2447c-120">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.PivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#id:member'
    summary: |-
      <span data-ttu-id="2447c-121">ID la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-121">Id of the PivotTable.</span></span> <span data-ttu-id="2447c-122">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2447c-122">Read-only.</span></span>

      <span data-ttu-id="2447c-123">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-123">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#layout:member'
    summary: |-
      <span data-ttu-id="2447c-124">El PivotLayout que describe el diseño y la estructura visual de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-124">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="2447c-125">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2447c-126">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2447c-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: 'excel!Excel.PivotTable#load:member(1)'
    summary: <span data-ttu-id="2447c-127">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2447c-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2447c-128">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2447c-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="2447c-129">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="2447c-129">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
  - uid: 'excel!Excel.PivotTable#load:member(2)'
    summary: <span data-ttu-id="2447c-130">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2447c-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2447c-131">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2447c-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2447c-132">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="2447c-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTable#load:member(3)'
    summary: <span data-ttu-id="2447c-133">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2447c-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2447c-134">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2447c-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotTable;
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="2447c-135">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="2447c-135">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotTable#name:member'
    summary: |-
      <span data-ttu-id="2447c-136">Nombre la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-136">Name of the PivotTable.</span></span>

      <span data-ttu-id="2447c-137">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-137">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#refresh:member(1)'
    summary: |-
      <span data-ttu-id="2447c-138">Actualiza la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-138">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="2447c-139">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-139">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTable#rowHierarchies:member'
    summary: |-
      <span data-ttu-id="2447c-140">Las jerarquías dinámicas de fila de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="2447c-140">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="2447c-141">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#set:member(1)'
    summary: '<span data-ttu-id="2447c-142">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="2447c-142">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="2447c-143">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="2447c-143">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="2447c-144">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="2447c-144">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="2447c-145">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="2447c-145">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
        - id: options
          description: <span data-ttu-id="2447c-146">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2447c-146">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotTable#set:member(2)'
    summary: '<span data-ttu-id="2447c-147">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="2447c-147">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotTable:class'
  - uid: 'excel!Excel.PivotTable#toJSON:member(1)'
    summary: '<span data-ttu-id="2447c-148">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2447c-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2447c-149">.</span><span class="sxs-lookup"><span data-stu-id="2447c-149"></span></span> <span data-ttu-id="2447c-150">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2447c-150"></span></span><!-- --><span data-ttu-id="2447c-151">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. PivotTable original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="2447c-151">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="2447c-152">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="2447c-152">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableData:interface'
        description: ''
  - uid: 'excel!Excel.PivotTable#worksheet:member'
    summary: |-
      <span data-ttu-id="2447c-153">La hoja de cálculo que contiene la tabla dinámica actual.</span><span class="sxs-lookup"><span data-stu-id="2447c-153">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="2447c-154">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2447c-154">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RowColumnPivotHierarchyCollection:class'
    name: Excel.RowColumnPivotHierarchyCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.DataPivotHierarchyCollection:class'
    name: Excel.DataPivotHierarchyCollection
  - uid: 'excel!Excel.FilterPivotHierarchyCollection:class'
    name: Excel.FilterPivotHierarchyCollection
  - uid: 'excel!Excel.PivotHierarchyCollection:class'
    name: Excel.PivotHierarchyCollection
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
    name: Excel.Interfaces.PivotTableLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
    name: Interfaces.PivotTableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.PivotTableData:interface'
    name: Excel.Interfaces.PivotTableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet