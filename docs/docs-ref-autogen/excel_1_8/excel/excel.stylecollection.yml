### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.StyleCollection:class'
    summary: |-
      <span data-ttu-id="0984a-101">Representa una colección de todos los estilos.</span><span class="sxs-lookup"><span data-stu-id="0984a-101">Represents a collection of all the styles.</span></span>

      <span data-ttu-id="0984a-102">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0984a-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.StyleCollection
    fullName: Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.StyleCollection#add:member(1)'
      - 'excel!Excel.StyleCollection#context:member'
      - 'excel!Excel.StyleCollection#getItem:member(1)'
      - 'excel!Excel.StyleCollection#items:member'
      - 'excel!Excel.StyleCollection#load:member(1)'
      - 'excel!Excel.StyleCollection#load:member(2)'
      - 'excel!Excel.StyleCollection#load:member(3)'
      - 'excel!Excel.StyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.StyleCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="0984a-103">Agrega un nuevo estilo a la colección.</span><span class="sxs-lookup"><span data-stu-id="0984a-103">Adds a new style to the collection.</span></span>

      <span data-ttu-id="0984a-104">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0984a-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0984a-105">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="0984a-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="0984a-106">Nombre del estilo que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="0984a-106">Name of the style to be added.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#context:member'
    summary: <span data-ttu-id="0984a-107">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="0984a-107">The request context associated with the object.</span></span> <span data-ttu-id="0984a-108">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="0984a-108">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.StyleCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="0984a-109">Obtiene un estilo por nombre.</span><span class="sxs-lookup"><span data-stu-id="0984a-109">Gets a style by name.</span></span>

      <span data-ttu-id="0984a-110">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0984a-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0984a-111">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="0984a-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="0984a-112">Nombre del estilo que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="0984a-112">Name of the style to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#items:member'
    summary: <span data-ttu-id="0984a-113">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="0984a-113">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'excel!Excel.StyleCollection#items~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(1)'
    summary: '<span data-ttu-id="0984a-114">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="0984a-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0984a-115">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="0984a-115">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="0984a-116">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="0984a-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0984a-117">`load(option?: string | string[]): Excel.StyleCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="0984a-117">`load(option?: string | string[]): Excel.StyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0984a-118">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="0984a-118">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0984a-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="0984a-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="0984a-120">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="0984a-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="0984a-121">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0984a-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0984a-122">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0984a-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0984a-123">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="0984a-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.StyleCollection#load~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(2)'
    summary: <span data-ttu-id="0984a-124">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="0984a-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0984a-125">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="0984a-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0984a-126">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="0984a-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.StyleCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.StyleCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="0984a-127">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0984a-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0984a-128">.</span><span class="sxs-lookup"><span data-stu-id="0984a-128"></span></span> <span data-ttu-id="0984a-129">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0984a-129"></span></span><!-- --><span data-ttu-id="0984a-130">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.StyleCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.StyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="0984a-130">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`</span></span><!-- --><span data-ttu-id="0984a-131">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="0984a-131">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.StyleCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Style:class'
    name: Excel.Style
  - uid: 'excel!Excel.StyleCollection#items~0:complex'
    name: 'Excel.Style[]'
    fullName: 'Excel.Style[]'
    spec.typeScript:
      - uid: 'excel!Excel.Style:class'
        name: Excel.Style
        fullName: Excel.Style
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.StyleCollection:class'
    name: Excel.StyleCollection
  - uid: 'excel!Excel.StyleCollection#load~0:complex'
    name: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.StyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.StyleCollectionLoadOptions
        fullName: Excel.Interfaces.StyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.StyleCollectionData:interface'
    name: Excel.Interfaces.StyleCollectionData