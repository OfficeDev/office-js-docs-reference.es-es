### YamlMime:UniversalReference
items:
  - uid: excel.Excel.NamedItemCollection
    summary: |-
      <span data-ttu-id="3d3e3-101">Una colección de todos los objetos NamedItem que forman parte del libro o la hoja de cálculo, en función de cómo se haya alcanzado.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>

      <span data-ttu-id="3d3e3-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3d3e3-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.NamedItemCollection.context
      - excel.Excel.NamedItemCollection.getItem
      - excel.Excel.NamedItemCollection.items
      - excel.Excel.NamedItemCollection.load
      - excel.Excel.NamedItemCollection.load_1
      - excel.Excel.NamedItemCollection.load_2
      - excel.Excel.NamedItemCollection.toJSON
  - uid: excel.Excel.NamedItemCollection.context
    summary: <span data-ttu-id="3d3e3-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-103">The request context associated with the object.</span></span> <span data-ttu-id="3d3e3-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.NamedItemCollection.getItem
    summary: |-
      <span data-ttu-id="3d3e3-105">Obtiene un objeto NamedItem mediante su nombre.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-105">Gets a NamedItem object using its name.</span></span>

      <span data-ttu-id="3d3e3-106">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3d3e3-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3d3e3-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="3d3e3-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = 'Sheet1';
              var nameditem = ctx.workbook.names.getItem(sheetName);
              nameditem.load('type');
              return ctx.sync().then(function() {
                      console.log(nameditem.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="3d3e3-108">Nombre de Nameditem.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-108">Nameditem name.</span></span>
          type:
            - string
  - uid: excel.Excel.NamedItemCollection.items
    summary: <span data-ttu-id="3d3e3-109">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-109">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type:
          - 'Excel.NamedItem[]'
  - uid: excel.Excel.NamedItemCollection.load
    summary: '<span data-ttu-id="3d3e3-110">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3d3e3-111">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="3d3e3-111">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="3d3e3-112">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="3d3e3-112">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3d3e3-113">`load(option?: string | string[]): Excel.NamedItemCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-113">`load(option?: string | string[]): Excel.NamedItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3d3e3-114">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-114">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3d3e3-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="3d3e3-116">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="3d3e3-117">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3d3e3-118">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3d3e3-119">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.NamedItemCollection.load_1
    summary: <span data-ttu-id="3d3e3-120">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3d3e3-121">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3d3e3-122">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="3d3e3-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var nameditems = ctx.workbook.names;
              nameditems.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < nameditems.items.length; i++)
                  {
                      console.log(nameditems.items[i].name);
                      console.log(nameditems.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3d3e3-123">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.NamedItemCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.NamedItemCollection.toJSON
    summary: '<span data-ttu-id="3d3e3-124">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3d3e3-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3d3e3-125">.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-125"></span></span> <span data-ttu-id="3d3e3-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3d3e3-126"></span></span><!-- --><span data-ttu-id="3d3e3-127">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.NamedItemCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.NamedItemCollectionData`</span><span class="sxs-lookup"><span data-stu-id="3d3e3-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.NamedItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemCollectionData`</span></span><!-- --><span data-ttu-id="3d3e3-128">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="3d3e3-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemCollectionData
        description: ''