### YamlMime:UniversalReference
items:
  - uid: excel.Excel.NamedItem
    summary: |-
      <span data-ttu-id="70d7d-101">Representa un nombre definido para un rango de celdas o un valor.</span><span class="sxs-lookup"><span data-stu-id="70d7d-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="70d7d-102">Los nombres pueden ser objetos con nombre primitivo (como se ve en el tipo siguiente), un objeto de intervalo o una referencia a un rango.</span><span class="sxs-lookup"><span data-stu-id="70d7d-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="70d7d-103">Este objeto puede usarse para obtener un objeto de rango asociado a nombres.</span><span class="sxs-lookup"><span data-stu-id="70d7d-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="70d7d-104">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70d7d-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.NamedItem.context
      - excel.Excel.NamedItem.getRange
      - excel.Excel.NamedItem.load
      - excel.Excel.NamedItem.load_1
      - excel.Excel.NamedItem.load_2
      - excel.Excel.NamedItem.name
      - excel.Excel.NamedItem.set
      - excel.Excel.NamedItem.set_1
      - excel.Excel.NamedItem.toJSON
      - excel.Excel.NamedItem.type
      - excel.Excel.NamedItem.value
      - excel.Excel.NamedItem.visible
  - uid: excel.Excel.NamedItem.context
    summary: <span data-ttu-id="70d7d-105">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="70d7d-105">The request context associated with the object.</span></span> <span data-ttu-id="70d7d-106">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="70d7d-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.NamedItem.getRange
    summary: |-
      <span data-ttu-id="70d7d-107">Devuelve el objeto de rango asociado al nombre.</span><span class="sxs-lookup"><span data-stu-id="70d7d-107">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="70d7d-108">Se produce un error si el tipo del elemento con nombre no es un rango.</span><span class="sxs-lookup"><span data-stu-id="70d7d-108">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="70d7d-109">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70d7d-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="70d7d-110">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="70d7d-110">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.NamedItem.load
    summary: '<span data-ttu-id="70d7d-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="70d7d-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70d7d-112">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="70d7d-112">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="70d7d-113">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="70d7d-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="70d7d-114">`load(option?: string | string[]): Excel.NamedItem`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="70d7d-114">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="70d7d-115">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="70d7d-115">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="70d7d-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="70d7d-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="70d7d-117">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="70d7d-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="70d7d-118">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="70d7d-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="70d7d-119">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="70d7d-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="70d7d-120">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="70d7d-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.NamedItemLoadOptions
  - uid: excel.Excel.NamedItem.load_1
    summary: <span data-ttu-id="70d7d-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="70d7d-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70d7d-122">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="70d7d-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="70d7d-123">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="70d7d-123">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="70d7d-124">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="70d7d-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.NamedItem.load_2
    summary: <span data-ttu-id="70d7d-125">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="70d7d-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70d7d-126">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="70d7d-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="70d7d-127">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="70d7d-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.NamedItem.name
    summary: |-
      <span data-ttu-id="70d7d-128">Nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="70d7d-128">The name of the object.</span></span> <span data-ttu-id="70d7d-129">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="70d7d-129">Read-only.</span></span>

      <span data-ttu-id="70d7d-130">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70d7d-130">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.NamedItem.set
    summary: '<span data-ttu-id="70d7d-131">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="70d7d-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="70d7d-132">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="70d7d-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="70d7d-133">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="70d7d-133">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="70d7d-134">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="70d7d-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: <span data-ttu-id="70d7d-135">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="70d7d-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.NamedItem.set_1
    summary: '<span data-ttu-id="70d7d-136">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="70d7d-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.NamedItem
  - uid: excel.Excel.NamedItem.toJSON
    summary: '<span data-ttu-id="70d7d-137">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="70d7d-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="70d7d-138">.</span><span class="sxs-lookup"><span data-stu-id="70d7d-138"></span></span> <span data-ttu-id="70d7d-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="70d7d-139"></span></span><!-- --><span data-ttu-id="70d7d-140">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. NamedItem original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="70d7d-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="70d7d-141">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="70d7d-141">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemData
        description: ''
  - uid: excel.Excel.NamedItem.type
    summary: |-
      <span data-ttu-id="70d7d-142">Indica el tipo del valor que devuelve la fórmula del nombre.</span><span class="sxs-lookup"><span data-stu-id="70d7d-142">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="70d7d-143">Consulte Excel. NamedItemType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="70d7d-143">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="70d7d-144">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="70d7d-144">Read-only.</span></span>

      <span data-ttu-id="70d7d-145">\[[Conjunto de API: ExcelApi 1,1 para String, integer, Double, Boolean, Range, error; 1,7 para array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70d7d-145">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
  - uid: excel.Excel.NamedItem.value
    summary: |-
      <span data-ttu-id="70d7d-146">Representa el valor calculado por la fórmula del nombre.</span><span class="sxs-lookup"><span data-stu-id="70d7d-146">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="70d7d-147">Para un rango con nombre, devolverá la dirección del rango.</span><span class="sxs-lookup"><span data-stu-id="70d7d-147">For a named range, will return the range address.</span></span> <span data-ttu-id="70d7d-148">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="70d7d-148">Read-only.</span></span>

      <span data-ttu-id="70d7d-149">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70d7d-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: excel.Excel.NamedItem.visible
    summary: |-
      <span data-ttu-id="70d7d-150">Especifica si el objeto es visible o no.</span><span class="sxs-lookup"><span data-stu-id="70d7d-150">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="70d7d-151">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70d7d-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean