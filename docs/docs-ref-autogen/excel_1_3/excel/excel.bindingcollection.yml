### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.BindingCollection:class'
    summary: |-
      <span data-ttu-id="43068-101">Representa la colección de todos los objetos de enlace que forman parte del libro.</span><span class="sxs-lookup"><span data-stu-id="43068-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="43068-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.BindingCollection#add:member(1)'
      - 'excel!Excel.BindingCollection#add:member(2)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(1)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(2)'
      - 'excel!Excel.BindingCollection#context:member'
      - 'excel!Excel.BindingCollection#count:member'
      - 'excel!Excel.BindingCollection#getItem:member(1)'
      - 'excel!Excel.BindingCollection#getItemAt:member(1)'
      - 'excel!Excel.BindingCollection#items:member'
      - 'excel!Excel.BindingCollection#load:member(1)'
      - 'excel!Excel.BindingCollection#load:member(2)'
      - 'excel!Excel.BindingCollection#load:member(3)'
      - 'excel!Excel.BindingCollection#toJSON:member(1)'
  - uid: 'excel!Excel.BindingCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="43068-103">Agregar un enlace nuevo a un intervalo determinado.</span><span class="sxs-lookup"><span data-stu-id="43068-103">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="43068-104">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="43068-p101">Intervalo al que se va a vincular el enlace. Puede ser un objeto de intervalo de Excel o una cadena. Si es una cadena, debe incluir la dirección completa, incluido el nombre de la hoja</span><span class="sxs-lookup"><span data-stu-id="43068-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~0:complex'
        - id: bindingType
          description: <span data-ttu-id="43068-108">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-108">Type of binding.</span></span> <span data-ttu-id="43068-109">Consulte Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="43068-109">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="43068-110">Nombre del enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-110">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#add:member(2)'
    summary: |-
      <span data-ttu-id="43068-111">Agregar un enlace nuevo a un intervalo determinado.</span><span class="sxs-lookup"><span data-stu-id="43068-111">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="43068-112">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="43068-p103">Intervalo al que se va a vincular el enlace. Puede ser un objeto de intervalo de Excel o una cadena. Si es una cadena, debe incluir la dirección completa, incluido el nombre de la hoja</span><span class="sxs-lookup"><span data-stu-id="43068-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~1:complex'
        - id: bindingTypeString
          description: <span data-ttu-id="43068-116">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-116">Type of binding.</span></span> <span data-ttu-id="43068-117">Consulte Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="43068-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="43068-118">Nombre del enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-118">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
    summary: |-
      <span data-ttu-id="43068-119">Agregar un enlace nuevo basándose en un elemento con nombre del libro.</span><span class="sxs-lookup"><span data-stu-id="43068-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="43068-120">Si el elemento con nombre hace referencia a varias áreas, se devolverá el error "InvalidReference".</span><span class="sxs-lookup"><span data-stu-id="43068-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="43068-121">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="43068-122">Nombre desde el que se va a crear el enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-122">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="43068-123">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-123">Type of binding.</span></span> <span data-ttu-id="43068-124">Consulte Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="43068-124">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="43068-125">Nombre del enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-125">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
    summary: |-
      <span data-ttu-id="43068-126">Agregar un enlace nuevo basándose en un elemento con nombre del libro.</span><span class="sxs-lookup"><span data-stu-id="43068-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="43068-127">Si el elemento con nombre hace referencia a varias áreas, se devolverá el error "InvalidReference".</span><span class="sxs-lookup"><span data-stu-id="43068-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="43068-128">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="43068-129">Nombre desde el que se va a crear el enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-129">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="43068-130">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-130">Type of binding.</span></span> <span data-ttu-id="43068-131">Consulte Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="43068-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="43068-132">Nombre del enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-132">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(1)'
    summary: |-
      <span data-ttu-id="43068-133">Agregar un enlace nuevo basándose en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="43068-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="43068-134">Si la selección tiene varias áreas, se devolverá el error "InvalidReference".</span><span class="sxs-lookup"><span data-stu-id="43068-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="43068-135">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="43068-136">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-136">Type of binding.</span></span> <span data-ttu-id="43068-137">Consulte Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="43068-137">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="43068-138">Nombre del enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-138">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(2)'
    summary: |-
      <span data-ttu-id="43068-139">Agregar un enlace nuevo basándose en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="43068-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="43068-140">Si la selección tiene varias áreas, se devolverá el error "InvalidReference".</span><span class="sxs-lookup"><span data-stu-id="43068-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="43068-141">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="43068-142">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-142">Type of binding.</span></span> <span data-ttu-id="43068-143">Consulte Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="43068-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="43068-144">Nombre del enlace.</span><span class="sxs-lookup"><span data-stu-id="43068-144">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#context:member'
    summary: <span data-ttu-id="43068-145">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="43068-145">The request context associated with the object.</span></span> <span data-ttu-id="43068-146">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="43068-146">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.BindingCollection#count:member'
    summary: |-
      <span data-ttu-id="43068-147">Devuelve el número de enlaces incluidos en la colección.</span><span class="sxs-lookup"><span data-stu-id="43068-147">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="43068-148">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="43068-148">Read-only.</span></span>

      <span data-ttu-id="43068-149">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.BindingCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="43068-150">Obtiene un objeto de enlace por identificador.</span><span class="sxs-lookup"><span data-stu-id="43068-150">Gets a binding object by ID.</span></span>

      <span data-ttu-id="43068-151">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="43068-152">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="43068-152">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="43068-153">Identificador del objeto de contenido que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="43068-153">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="43068-154">Obtiene un objeto de enlace según su posición en la matriz de elementos.</span><span class="sxs-lookup"><span data-stu-id="43068-154">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="43068-155">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43068-155">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="43068-156">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="43068-156">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="43068-157">Valor de índice del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="43068-157">Index value of the object to be retrieved.</span></span> <span data-ttu-id="43068-158">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="43068-158">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.BindingCollection#items:member'
    summary: <span data-ttu-id="43068-159">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="43068-159">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'excel!Excel.BindingCollection#items~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(1)'
    summary: '<span data-ttu-id="43068-160">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="43068-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="43068-161">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="43068-161">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="43068-162">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="43068-162">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="43068-163">`load(option?: string | string[]): Excel.BindingCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="43068-163">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="43068-164">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="43068-164">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="43068-165">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="43068-165">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="43068-166">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="43068-166">It is similar to the preceding signature.</span></span> <span data-ttu-id="43068-167">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="43068-167">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="43068-168">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="43068-168">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="43068-169">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="43068-169">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.BindingCollection#load~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(2)'
    summary: <span data-ttu-id="43068-170">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="43068-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="43068-171">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="43068-171">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="43068-172">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="43068-172">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="43068-173">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="43068-173">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.BindingCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.BindingCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="43068-174">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="43068-174">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="43068-175">.</span><span class="sxs-lookup"><span data-stu-id="43068-175"></span></span> <span data-ttu-id="43068-176">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="43068-176"></span></span><!-- --><span data-ttu-id="43068-177">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.BindingCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="43068-177">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="43068-178">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="43068-178">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.BindingCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.BindingType:enum'
    name: Excel.BindingType
  - uid: 'excel!Excel.BindingCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.BindingCollection#items~0:complex'
    name: 'Excel.Binding[]'
    fullName: 'Excel.Binding[]'
    spec.typeScript:
      - uid: 'excel!Excel.Binding:class'
        name: Excel.Binding
        fullName: Excel.Binding
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.BindingCollection#load~0:complex'
    name: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.BindingCollectionLoadOptions:interface'
        name: Excel.Interfaces.BindingCollectionLoadOptions
        fullName: Excel.Interfaces.BindingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.BindingCollectionData:interface'
    name: Excel.Interfaces.BindingCollectionData