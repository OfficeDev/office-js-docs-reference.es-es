### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableColumn
    summary: |-
      <span data-ttu-id="754fb-101">Representa una columna en una tabla.</span><span class="sxs-lookup"><span data-stu-id="754fb-101">Represents a column in a table.</span></span>

      <span data-ttu-id="754fb-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableColumn.context
      - excel.Excel.TableColumn.delete
      - excel.Excel.TableColumn.filter
      - excel.Excel.TableColumn.getDataBodyRange
      - excel.Excel.TableColumn.getHeaderRowRange
      - excel.Excel.TableColumn.getRange
      - excel.Excel.TableColumn.getTotalRowRange
      - excel.Excel.TableColumn.id
      - excel.Excel.TableColumn.index
      - excel.Excel.TableColumn.load
      - excel.Excel.TableColumn.load_1
      - excel.Excel.TableColumn.load_2
      - excel.Excel.TableColumn.name
      - excel.Excel.TableColumn.set
      - excel.Excel.TableColumn.set_1
      - excel.Excel.TableColumn.toJSON
      - excel.Excel.TableColumn.values
  - uid: excel.Excel.TableColumn.context
    summary: <span data-ttu-id="754fb-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="754fb-103">The request context associated with the object.</span></span> <span data-ttu-id="754fb-104">Esto conecta el proceso del complemento con el proceso de la aplicaci√≥n host de Office.</span><span class="sxs-lookup"><span data-stu-id="754fb-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableColumn.delete
    summary: |-
      <span data-ttu-id="754fb-105">Elimina la columna de la tabla.</span><span class="sxs-lookup"><span data-stu-id="754fb-105">Deletes the column from the table.</span></span>

      <span data-ttu-id="754fb-106">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="754fb-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="754fb-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.filter
    summary: |-
      <span data-ttu-id="754fb-108">Recupera el filtro aplicado a la columna.</span><span class="sxs-lookup"><span data-stu-id="754fb-108">Retrieve the filter applied to the column.</span></span> <span data-ttu-id="754fb-109">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="754fb-109">Read-only.</span></span>

      <span data-ttu-id="754fb-110">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
  - uid: excel.Excel.TableColumn.getDataBodyRange
    summary: |-
      <span data-ttu-id="754fb-111">Obtiene el objeto de rango asociado al cuerpo de datos de la columna.</span><span class="sxs-lookup"><span data-stu-id="754fb-111">Gets the range object associated with the data body of the column.</span></span>

      <span data-ttu-id="754fb-112">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="754fb-113">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="754fb-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getHeaderRowRange
    summary: |-
      <span data-ttu-id="754fb-114">Obtiene el objeto de rango asociado a la fila de encabezado de la columna.</span><span class="sxs-lookup"><span data-stu-id="754fb-114">Gets the range object associated with the header row of the column.</span></span>

      <span data-ttu-id="754fb-115">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="754fb-116">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="754fb-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getRange
    summary: |-
      <span data-ttu-id="754fb-117">Obtiene el objeto de rango asociado a toda la columna.</span><span class="sxs-lookup"><span data-stu-id="754fb-117">Gets the range object associated with the entire column.</span></span>

      <span data-ttu-id="754fb-118">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="754fb-119">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="754fb-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getTotalRowRange
    summary: |-
      <span data-ttu-id="754fb-120">Obtiene el objeto de rango asociado a la fila de totales de la columna.</span><span class="sxs-lookup"><span data-stu-id="754fb-120">Gets the range object associated with the totals row of the column.</span></span>

      <span data-ttu-id="754fb-121">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="754fb-122">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="754fb-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.id
    summary: |-
      <span data-ttu-id="754fb-123">Devuelve una clave √∫nica que identifica la columna de la tabla.</span><span class="sxs-lookup"><span data-stu-id="754fb-123">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id="754fb-124">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="754fb-124">Read-only.</span></span>

      <span data-ttu-id="754fb-125">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumn.index
    summary: |-
      <span data-ttu-id="754fb-126">Devuelve el n√∫mero de √≠ndice de la columna dentro de la colecci√≥n de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="754fb-126">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id="754fb-127">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="754fb-127">Zero-indexed.</span></span> <span data-ttu-id="754fb-128">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="754fb-128">Read-only.</span></span>

      <span data-ttu-id="754fb-129">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumn.load
    summary: '<span data-ttu-id="754fb-130">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="754fb-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="754fb-131">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="754fb-131">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="754fb-132">Adem√°s de esta firma, este m√©todo tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="754fb-132">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="754fb-133">`load(option?: string | string[]): Excel.TableColumn`-Donde opci√≥n es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="754fb-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="754fb-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Where opci√≥n. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegaci√≥n que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="754fb-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="754fb-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Solo disponible en tipos de colecci√≥n.</span><span class="sxs-lookup"><span data-stu-id="754fb-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="754fb-136">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="754fb-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="754fb-137">Option. Top especifica el n√∫mero m√°ximo de elementos de colecci√≥n que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="754fb-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="754fb-138">La opci√≥n. SKIP especifica el n√∫mero de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="754fb-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="754fb-139">Si se especifica Option. Top, el conjunto de resultados se iniciar√° despu√©s de omitir el n√∫mero especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="754fb-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableColumnLoadOptions
  - uid: excel.Excel.TableColumn.load_1
    summary: <span data-ttu-id="754fb-140">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="754fb-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="754fb-141">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="754fb-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="754fb-142">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="754fb-142">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="754fb-143">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="754fb-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableColumn.load_2
    summary: <span data-ttu-id="754fb-144">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="754fb-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="754fb-145">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="754fb-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="754fb-146">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegaci√≥n que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="754fb-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableColumn.name
    summary: |-
      <span data-ttu-id="754fb-147">Representa el nombre de la columna de la tabla.</span><span class="sxs-lookup"><span data-stu-id="754fb-147">Represents the name of the table column.</span></span>

      <span data-ttu-id="754fb-148">\[[Conjunto de API: ExcelApi 1,1 para obtener el nombre; 1,4 para establecerlo.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="754fb-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="754fb-149">\]</span><span class="sxs-lookup"><span data-stu-id="754fb-149"></span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.TableColumn.set
    summary: '<span data-ttu-id="754fb-150">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="754fb-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="754fb-151">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="754fb-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="754fb-152">Este m√©todo tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="754fb-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableColumn): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="754fb-153">Objeto de JavaScript con propiedades que se estructuran de forma isom√≥rfico a las propiedades del objeto en el que se llama al m√©todo.</span><span class="sxs-lookup"><span data-stu-id="754fb-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableColumnUpdateData
        - id: options
          description: <span data-ttu-id="754fb-154">Proporciona una opci√≥n para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="754fb-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TableColumn.set_1
    summary: '<span data-ttu-id="754fb-155">Establece varias propiedades en el objeto al mismo tiempo, bas√°ndose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="754fb-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableColumn
  - uid: excel.Excel.TableColumn.toJSON
    summary: '<span data-ttu-id="754fb-156">Reemplaza el m√©todo JavaScript `toJSON()` para proporcionar un resultado m√°s √∫til cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="754fb-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="754fb-157">.</span><span class="sxs-lookup"><span data-stu-id="754fb-157"></span></span> <span data-ttu-id="754fb-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="754fb-158"></span></span><!-- --><span data-ttu-id="754fb-159">, a su vez, llama `toJSON` al m√©todo del objeto que se le pasa.) Mientras que el objeto Excel. TableColumn original es un objeto API, `toJSON` el m√©todo devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="754fb-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="754fb-160">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="754fb-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - excel.Excel.Interfaces.TableColumnData
        description: ''
  - uid: excel.Excel.TableColumn.values
    summary: |-
      <span data-ttu-id="754fb-161">Representa los valores sin formato del rango especificado.</span><span class="sxs-lookup"><span data-stu-id="754fb-161">Represents the raw values of the specified range.</span></span> <span data-ttu-id="754fb-162">Los datos devueltos pueden ser de tipo cadena, n√∫mero o booleano.</span><span class="sxs-lookup"><span data-stu-id="754fb-162">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="754fb-163">Las celdas que contienen un error devolver√°n la cadena de error.</span><span class="sxs-lookup"><span data-stu-id="754fb-163">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="754fb-164">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="754fb-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'