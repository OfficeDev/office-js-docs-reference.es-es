### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Table:class'
    summary: |-
      <span data-ttu-id="cc3ad-101">Representa una tabla de Excel.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-101">Represents an Excel table.</span></span> <span data-ttu-id="cc3ad-102">Para obtener m치s informaci칩n sobre el modelo de objetos de tabla, vea [trabajar con tablas mediante la API de JavaScript de Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span><span class="sxs-lookup"><span data-stu-id="cc3ad-102">To learn more about the table object model, read [Work with tables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span></span><!-- --><span data-ttu-id="cc3ad-103">.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-103"></span></span>

      <span data-ttu-id="cc3ad-104">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Table#clearFilters:member(1)'
      - 'excel!Excel.Table#columns:member'
      - 'excel!Excel.Table#context:member'
      - 'excel!Excel.Table#convertToRange:member(1)'
      - 'excel!Excel.Table#delete:member(1)'
      - 'excel!Excel.Table#getDataBodyRange:member(1)'
      - 'excel!Excel.Table#getHeaderRowRange:member(1)'
      - 'excel!Excel.Table#getRange:member(1)'
      - 'excel!Excel.Table#getTotalRowRange:member(1)'
      - 'excel!Excel.Table#id:member'
      - 'excel!Excel.Table#load:member(1)'
      - 'excel!Excel.Table#load:member(2)'
      - 'excel!Excel.Table#load:member(3)'
      - 'excel!Excel.Table#name:member'
      - 'excel!Excel.Table#reapplyFilters:member(1)'
      - 'excel!Excel.Table#rows:member'
      - 'excel!Excel.Table#set:member(1)'
      - 'excel!Excel.Table#set:member(2)'
      - 'excel!Excel.Table#showHeaders:member'
      - 'excel!Excel.Table#showTotals:member'
      - 'excel!Excel.Table#sort:member'
      - 'excel!Excel.Table#style:member'
      - 'excel!Excel.Table#toJSON:member(1)'
      - 'excel!Excel.Table#worksheet:member'
  - uid: 'excel!Excel.Table#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-105">Borra todos los filtros aplicados actualmente en la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-105">Clears all the filters currently applied on the table.</span></span>

      <span data-ttu-id="cc3ad-106">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-106">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#columns:member'
    summary: |-
      <span data-ttu-id="cc3ad-107">Representa una colecci칩n de todas las columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-107">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="cc3ad-108">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-108">Read-only.</span></span>

      <span data-ttu-id="cc3ad-109">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
  - uid: 'excel!Excel.Table#context:member'
    summary: <span data-ttu-id="cc3ad-110">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-110">The request context associated with the object.</span></span> <span data-ttu-id="cc3ad-111">Esto conecta el proceso del complemento con el proceso de la aplicaci칩n host de Office.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Table#convertToRange:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-112">Convierte la tabla en un rango de celdas normal.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-112">Converts the table into a normal range of cells.</span></span> <span data-ttu-id="cc3ad-113">Se conservan todos los datos.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-113">All data is preserved.</span></span>

      <span data-ttu-id="cc3ad-114">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-114">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-115">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-115">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#delete:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-116">Elimina la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-116">Deletes the table.</span></span>

      <span data-ttu-id="cc3ad-117">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-118">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-119">Obtiene el objeto de rango asociado al cuerpo de datos de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-119">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="cc3ad-120">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getHeaderRowRange:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-122">Obtiene el objeto de rango asociado a la fila de encabezado de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-122">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="cc3ad-123">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-124">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-124">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getRange:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-125">Obtiene el objeto de rango asociado a toda la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-125">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="cc3ad-126">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-126">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-127">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-127">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getTotalRowRange:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-128">Obtiene el objeto de rango asociado a la fila de totales de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-128">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="cc3ad-129">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-130">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#id:member'
    summary: |-
      <span data-ttu-id="cc3ad-p105">Devuelve un valor que identifica de forma 칰nica la tabla de un libro determinado. El valor del identificador permanece igual, incluso cuando se cambia el nombre de la tabla. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-p105">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="cc3ad-134">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#load:member(1)'
    summary: <span data-ttu-id="cc3ad-135">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cc3ad-136">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-136">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="cc3ad-137">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-137">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableLoadOptions:interface'
  - uid: 'excel!Excel.Table#load:member(2)'
    summary: <span data-ttu-id="cc3ad-138">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cc3ad-139">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-139">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc3ad-140">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cc3ad-140">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="cc3ad-141">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Table#load:member(3)'
    summary: <span data-ttu-id="cc3ad-142">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cc3ad-143">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-143">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Table;
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="cc3ad-144">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegaci칩n que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-144">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Table#name:member'
    summary: |-
      <span data-ttu-id="cc3ad-145">Nombre de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-145">Name of the table.</span></span>

      <span data-ttu-id="cc3ad-146">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#reapplyFilters:member(1)'
    summary: |-
      <span data-ttu-id="cc3ad-147">Vuelve a aplicar todos los filtros aplicados actualmente en la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-147">Reapplies all the filters currently on the table.</span></span>

      <span data-ttu-id="cc3ad-148">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-148">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#rows:member'
    summary: |-
      <span data-ttu-id="cc3ad-149">Representa una colecci칩n de todas las filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-149">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="cc3ad-150">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-150">Read-only.</span></span>

      <span data-ttu-id="cc3ad-151">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
  - uid: 'excel!Excel.Table#set:member(1)'
    summary: '<span data-ttu-id="cc3ad-152">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-152">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="cc3ad-153">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-153">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="cc3ad-154">Este m칠todo tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="cc3ad-154">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="cc3ad-155">Objeto de JavaScript con propiedades que se estructuran de forma isom칩rfico a las propiedades del objeto en el que se llama al m칠todo.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-155">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableUpdateData:interface'
        - id: options
          description: <span data-ttu-id="cc3ad-156">Proporciona una opci칩n para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-156">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Table#set:member(2)'
    summary: '<span data-ttu-id="cc3ad-157">Establece varias propiedades en el objeto al mismo tiempo, bas치ndose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-157">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Table:class'
  - uid: 'excel!Excel.Table#showHeaders:member'
    summary: |-
      <span data-ttu-id="cc3ad-158">Indica si la fila de encabezado est치 visible o no.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-158">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="cc3ad-159">Este valor puede establecerse para que muestre o quite la fila de encabezado.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-159">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="cc3ad-160">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-160">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showTotals:member'
    summary: |-
      <span data-ttu-id="cc3ad-161">Indica si la fila de totales est치 visible o no.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-161">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="cc3ad-162">Este valor puede establecerse para que muestre o quite la fila de totales.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-162">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="cc3ad-163">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#sort:member'
    summary: |-
      <span data-ttu-id="cc3ad-164">Representa la ordenaci칩n de la tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-164">Represents the sorting for the table.</span></span> <span data-ttu-id="cc3ad-165">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-165">Read-only.</span></span>

      <span data-ttu-id="cc3ad-166">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-166">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
  - uid: 'excel!Excel.Table#style:member'
    summary: |-
      <span data-ttu-id="cc3ad-167">Valor constante que representa el estilo de tabla.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-167">Constant value that represents the Table style.</span></span> <span data-ttu-id="cc3ad-168">Los valores posibles son: "TableStyleLight1" a "TableStyleLight21", "TableStyleMedium1" a "TableStyleMedium28", "TableStyleStyleDark1" a "TableStyleStyleDark11".</span><span class="sxs-lookup"><span data-stu-id="cc3ad-168">Possible values are: "TableStyleLight1" through "TableStyleLight21", "TableStyleMedium1" through "TableStyleMedium28", "TableStyleStyleDark1" through "TableStyleStyleDark11".</span></span> <span data-ttu-id="cc3ad-169">Tambi칠n puede especificarse un estilo personalizado definido por el usuario presente en el libro.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-169">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="cc3ad-170">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-170">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="cc3ad-171">Reemplaza el m칠todo JavaScript `toJSON()` para proporcionar un resultado m치s 칰til cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cc3ad-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cc3ad-172">.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-172"></span></span> <span data-ttu-id="cc3ad-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cc3ad-173"></span></span><!-- --><span data-ttu-id="cc3ad-174">, a su vez, llama `toJSON` al m칠todo del objeto que se le pasa.) Mientras que el objeto Excel. Table original es un objeto API, `toJSON` el m칠todo devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="cc3ad-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="cc3ad-175">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableData:interface'
        description: ''
  - uid: 'excel!Excel.Table#worksheet:member'
    summary: |-
      <span data-ttu-id="cc3ad-176">Hoja de c치lculo que contiene la tabla actual.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-176">The worksheet containing the current table.</span></span> <span data-ttu-id="cc3ad-177">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cc3ad-177">Read-only.</span></span>

      <span data-ttu-id="cc3ad-178">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc3ad-178">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Interfaces.TableLoadOptions:interface'
    name: Excel.Interfaces.TableLoadOptions
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableData:interface'
    name: Excel.Interfaces.TableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet