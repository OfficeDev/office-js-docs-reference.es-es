### YamlMime:TSType
name: Word.Paragraph
uid: word!Word.Paragraph:class
package: word!
fullName: Word.Paragraph
summary: >-
  Representa un solo párrafo de una selección, intervalo, control de contenido o cuerpo del documento.


  \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: alignment
  uid: word!Word.Paragraph#alignment:member
  package: word!
  fullName: alignment
  summary: >-
    Obtiene o establece la alineación de un párrafo. El valor puede ser 'left', 'centered', 'right' o 'justified'.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
    return:
      type: <xref uid="word!Word.Alignment:enum" /> | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Centers last paragraph alignment.\n  context.document.body.paragraphs.getLast().alignment = \"Centered\";\n\n  await context.sync();\n});\n```"
- name: contentControls
  uid: word!Word.Paragraph#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Obtiene la colección de objetos de control de contenido en el párrafo. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Paragraph#context:member
  package: word!
  fullName: context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: firstLineIndent
  uid: word!Word.Paragraph#firstLineIndent:member
  package: word!
  fullName: firstLineIndent
  summary: >-
    Obtiene o establece el valor (en puntos) para una sangría en la primera línea o francesa. Para establecer una sangría en la primera línea se debe usar un valor positivo, para establecer una sangría francesa se debe usar un valor negativo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'firstLineIndent: number;'
    return:
      type: number
- name: font
  uid: word!Word.Paragraph#font:member
  package: word!
  fullName: font
  summary: >-
    Obtiene el formato de texto del párrafo. Úselo para obtener y establecer el nombre de la fuente, el tamaño, el color y otras propiedades. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
- name: inlinePictures
  uid: word!Word.Paragraph#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Obtiene la colección de objetos InlinePicture del párrafo. La colección no incluye imágenes flotantes. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: isLastParagraph
  uid: word!Word.Paragraph#isLastParagraph:member
  package: word!
  fullName: isLastParagraph
  summary: >-
    Indica el párrafo que es el último dentro de su cuerpo primario. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isLastParagraph: boolean;'
    return:
      type: boolean
- name: isListItem
  uid: word!Word.Paragraph#isListItem:member
  package: word!
  fullName: isListItem
  summary: >-
    Comprueba si el párrafo es un elemento de lista. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isListItem: boolean;'
    return:
      type: boolean
- name: leftIndent
  uid: word!Word.Paragraph#leftIndent:member
  package: word!
  fullName: leftIndent
  summary: >-
    Obtiene o establece el valor de sangría izquierda (en puntos) del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'leftIndent: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Indents the first paragraph.\n  context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points\n\n  return context.sync();\n});\n```"
- name: lineSpacing
  uid: word!Word.Paragraph#lineSpacing:member
  package: word!
  fullName: lineSpacing
  summary: >-
    Obtiene o establece el espaciado de línea (en puntos) del párrafo especificado. En la interfaz de usuario de Word, este valor se divide entre 12.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lineSpacing: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Adjusts line spacing.\n  context.document.body.paragraphs.getFirst().lineSpacing = 20;\n\n  await context.sync();\n});\n```"
- name: lineUnitAfter
  uid: word!Word.Paragraph#lineUnitAfter:member
  package: word!
  fullName: lineUnitAfter
  summary: >-
    Obtiene o establece la cantidad de espaciado, en líneas de cuadrícula, detrás del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lineUnitAfter: number;'
    return:
      type: number
- name: lineUnitBefore
  uid: word!Word.Paragraph#lineUnitBefore:member
  package: word!
  fullName: lineUnitBefore
  summary: >-
    Obtiene o establece la cantidad de espaciado (en líneas de cuadrícula) antes del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lineUnitBefore: number;'
    return:
      type: number
- name: list
  uid: word!Word.Paragraph#list:member
  package: word!
  fullName: list
  summary: >-
    Obtiene la lista a la que pertenece este párrafo. Produce un error si el párrafo no está en una lista. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly list: Word.List;'
    return:
      type: <xref uid="word!Word.List:class" />
- name: listItem
  uid: word!Word.Paragraph#listItem:member
  package: word!
  fullName: listItem
  summary: >-
    Obtiene ListItem para el párrafo. Produce un error si el párrafo no forma parte de una lista. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly listItem: Word.ListItem;'
    return:
      type: <xref uid="word!Word.ListItem:class" />
- name: listItemOrNullObject
  uid: word!Word.Paragraph#listItemOrNullObject:member
  package: word!
  fullName: listItemOrNullObject
  summary: >-
    Obtiene ListItem para el párrafo. Devuelve un objeto NULL si el párrafo no forma parte de una lista. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly listItemOrNullObject: Word.ListItem;'
    return:
      type: <xref uid="word!Word.ListItem:class" />
- name: listOrNullObject
  uid: word!Word.Paragraph#listOrNullObject:member
  package: word!
  fullName: listOrNullObject
  summary: >-
    Obtiene la lista a la que pertenece este párrafo. Devuelve un objeto NULL si el párrafo no está en una lista. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly listOrNullObject: Word.List;'
    return:
      type: <xref uid="word!Word.List:class" />
- name: outlineLevel
  uid: word!Word.Paragraph#outlineLevel:member
  package: word!
  fullName: outlineLevel
  summary: >-
    Obtiene o establece el nivel de esquema del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'outlineLevel: number;'
    return:
      type: number
- name: parentBody
  uid: word!Word.Paragraph#parentBody:member
  package: word!
  fullName: parentBody
  summary: >-
    Obtiene el cuerpo primario del párrafo. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: parentContentControl
  uid: word!Word.Paragraph#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Obtiene el control de contenido que contiene el párrafo. Produce un error si no hay un control de contenido primario. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentContentControlOrNullObject
  uid: word!Word.Paragraph#parentContentControlOrNullObject:member
  package: word!
  fullName: parentContentControlOrNullObject
  summary: >-
    Obtiene el control de contenido que contiene el párrafo. Devuelve un objeto nulo si no hay un control de contenido primario. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentTable
  uid: word!Word.Paragraph#parentTable:member
  package: word!
  fullName: parentTable
  summary: >-
    Obtiene la tabla que contiene el párrafo. Produce un error si no está contenido en una tabla. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: parentTableCell
  uid: word!Word.Paragraph#parentTableCell:member
  package: word!
  fullName: parentTableCell
  summary: >-
    Obtiene la celda de tabla que contiene el párrafo. Produce un error si no está contenido en una celda de tabla. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableCellOrNullObject
  uid: word!Word.Paragraph#parentTableCellOrNullObject:member
  package: word!
  fullName: parentTableCellOrNullObject
  summary: >-
    Obtiene la celda de tabla que contiene el párrafo. Devuelve un objeto NULL si no se incluye en una celda de tabla. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableOrNullObject
  uid: word!Word.Paragraph#parentTableOrNullObject:member
  package: word!
  fullName: parentTableOrNullObject
  summary: >-
    Obtiene la tabla que contiene el párrafo. Devuelve un objeto NULL si este no se incluye en una tabla. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: rightIndent
  uid: word!Word.Paragraph#rightIndent:member
  package: word!
  fullName: rightIndent
  summary: >-
    Obtiene o establece el valor de sangría derecha (en puntos) del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rightIndent: number;'
    return:
      type: number
- name: spaceAfter
  uid: word!Word.Paragraph#spaceAfter:member
  package: word!
  fullName: spaceAfter
  summary: >-
    Obtiene o establece el espaciado (en puntos) después del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'spaceAfter: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Adjust space between paragraphs.\n  context.document.body.paragraphs.getFirst().spaceAfter = 20;\n\n  await context.sync();\n});\n```"
- name: spaceBefore
  uid: word!Word.Paragraph#spaceBefore:member
  package: word!
  fullName: spaceBefore
  summary: >-
    Obtiene o establece el espaciado (en puntos) antes del párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'spaceBefore: number;'
    return:
      type: number
- name: style
  uid: word!Word.Paragraph#style:member
  package: word!
  fullName: style
  summary: >-
    Obtiene o establece el nombre de estilo del párrafo. Use esta propiedad para los estilos personalizados y los nombres de estilo localizados. Para usar los estilos integrados portátiles entre configuraciones regionales, consulte la propiedad "styleBuiltIn".


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: styleBuiltIn
  uid: word!Word.Paragraph#styleBuiltIn:member
  package: word!
  fullName: styleBuiltIn
  summary: >-
    Obtiene o establece el nombre del estilo integrado del párrafo. Use esta propiedad para los estilos integrados que son portátiles entre configuraciones regionales. Para usar estilos personalizados o nombres de estilo localizados, consulte la propiedad "style".


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type: <xref uid="word!Word.Style:enum" /> | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- name: tableNestingLevel
  uid: word!Word.Paragraph#tableNestingLevel:member
  package: word!
  fullName: tableNestingLevel
  summary: >-
    Obtiene el nivel de la tabla del párrafo. Devuelve 0 si el párrafo no está en una tabla. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tableNestingLevel: number;'
    return:
      type: number
- name: text
  uid: word!Word.Paragraph#text:member
  package: word!
  fullName: text
  summary: >-
    Obtiene el texto del párrafo. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/get-paragraph-on-insertion-point.yaml\nawait Word.run(async (context) => {\n  // The collection of paragraphs of the current selection returns the full paragraphs contained in it.\n  let paragraph = context.document.getSelection().paragraphs.getFirst();\n  paragraph.load(\"text\");\n\n  await context.sync();\n  console.log(paragraph.text);\n});\n```"
methods:
- name: attachToList(listId, level)
  uid: word!Word.Paragraph#attachToList:member(1)
  package: word!
  fullName: attachToList(listId, level)
  summary: >-
    Permite que el párrafo se una a una lista existente en el nivel especificado. Se produce un error si el párrafo no puede unirse a la lista o si este ya es un elemento de lista.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'attachToList(listId: number, level: number): Word.List;'
    parameters:
    - id: listId
      description: Obligatorio. IDENTIFICADOR de una lista existente.
      type: number
    - id: level
      description: Obligatorio. El nivel de la lista.
      type: number
    return:
      type: <xref uid="word!Word.List:class" />
      description: ''
- name: clear()
  uid: word!Word.Paragraph#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Borra el contenido del objeto de párrafo. El usuario puede realizar la operación de deshacer en el contenido borrado.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to clear the contents of the first paragraph.\n        paragraphs.items[0].clear();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Cleared the contents of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: delete()
  uid: word!Word.Paragraph#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Elimina el párrafo y su contenido del documento.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to delete the first paragraph.\n        paragraphs.items[0].delete();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Deleted the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: detachFromList()
  uid: word!Word.Paragraph#detachFromList:member(1)
  package: word!
  fullName: detachFromList()
  summary: >-
    Mueve este párrafo fuera de la lista, si este es un elemento de lista.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'detachFromList(): void;'
    return:
      type: void
      description: ''
- name: getHtml()
  uid: word!Word.Paragraph#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Obtiene una representación HTML del objeto Paragraph. Cuando se representa en una página web o visor de HTML, el formato será una coincidencia aproximada, pero no exacta, para el formato del documento. Este método no devuelve el mismo HTML exacto para el mismo documento en diferentes plataformas (Windows, Mac, Word para la web, etc.). Si necesita fidelidad exacta, o coherencia entre plataformas, use `Paragraph.getOoxml()` y convierta el XML devuelto en HTML.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the HTML of the first paragraph.\n        var html = paragraphs.items[0].getHtml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph HTML: ' + html.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getNext()
  uid: word!Word.Paragraph#getNext:member(1)
  package: word!
  fullName: getNext()
  summary: >-
    Obtiene el párrafo siguiente. Produce un error si el párrafo es el último.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNext(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: getNextOrNullObject()
  uid: word!Word.Paragraph#getNextOrNullObject:member(1)
  package: word!
  fullName: getNextOrNullObject()
  summary: >-
    Obtiene el párrafo siguiente. Devuelve un objeto nulo si el párrafo es el último.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNextOrNullObject(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: getOoxml()
  uid: word!Word.Paragraph#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Obtiene la representación Office Open XML (OOXML) del objeto de párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the OOXML of the first paragraph.\n        var ooxml = paragraphs.items[0].getOoxml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph OOXML: ' + ooxml.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getPrevious()
  uid: word!Word.Paragraph#getPrevious:member(1)
  package: word!
  fullName: getPrevious()
  summary: >-
    Obtiene el párrafo anterior. Produce un error si el párrafo es el primero.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrevious(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: getPreviousOrNullObject()
  uid: word!Word.Paragraph#getPreviousOrNullObject:member(1)
  package: word!
  fullName: getPreviousOrNullObject()
  summary: >-
    Obtiene el párrafo anterior. Devuelve un objeto nulo si el párrafo es el primero.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPreviousOrNullObject(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue commands to create a proxy object for the next-to-last paragraph.\n        var indexOfLastParagraph = paragraphs.items.length - 1;\n        var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();\n\n        // Queue a command to load the text of the preceding paragraph.\n        context.load(precedingParagraph, 'text');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            if (precedingParagraph.isNullObject) {\n                console.log('There are no paragraphs before the current one.');\n            } else {\n                console.log('The preceding paragraph is: ' + precedingParagraph.text);\n            }\n        });\n    });\n}).catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRange(rangeLocation)
  uid: word!Word.Paragraph#getRange:member(1)
  package: word!
  fullName: getRange(rangeLocation)
  summary: >-
    Obtiene el párrafo completo, o el punto de inicio o final del párrafo, como un intervalo.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    parameters:
    - id: rangeLocation
      description: Opcional. La ubicación del intervalo puede ser "total", "Start", "End", "after" o "Content".
      type: <xref uid="word!Word.RangeLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getRange(rangeLocationString)
  uid: word!Word.Paragraph#getRange:member(2)
  package: word!
  fullName: getRange(rangeLocationString)
  summary: >-
    Obtiene el párrafo completo, o el punto de inicio o final del párrafo, como un intervalo.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    parameters:
    - id: rangeLocationString
      description: Opcional. La ubicación del intervalo puede ser "total", "Start", "End", "after" o "Content".
      type: "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getTextRanges(endingMarks, trimSpacing)
  uid: word!Word.Paragraph#getTextRanges:member(1)
  package: word!
  fullName: getTextRanges(endingMarks, trimSpacing)
  summary: >-
    Obtiene los intervalos de texto del párrafo usando signos de puntuación u otras marcas de fin.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: endingMarks
      description: Obligatorio. Los signos de puntuación u otras marcas de fin como una matriz de cadenas.
      type: string[]
    - id: trimSpacing
      description: Opcional. Indica si se van a recortar los caracteres de espaciado (espacios, tabulaciones, saltos de columna y marcas de fin de párrafo) desde el inicio y el final de los rangos devueltos en la colección Range. El valor predeterminado es false que indica que los caracteres de espaciado del principio y el final de los intervalos se incluyen en la colección Range.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.Paragraph#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Inserta un salto en la ubicación especificada del documento principal.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Necesario. Tipo de salto que se va a agregar al documento.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Necesario. El valor puede ser "Before" o "After".
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/insert-line-and-page-breaks.yaml\nWord.run(async (context) => {\n  context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, \"After\");\n\n  await context.sync();\n  console.log(\"success\");\n});\n```"
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.Paragraph#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Inserta un salto en la ubicación especificada del documento principal.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Necesario. Tipo de salto que se va a agregar al documento.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Necesario. El valor puede ser "Before" o "After".
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert a page break after the first paragraph.\n        paragraph.insertBreak('page', 'After');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted a page break after the paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertContentControl()
  uid: word!Word.Paragraph#insertContentControl:member(1)
  package: word!
  fullName: insertContentControl()
  summary: >-
    Ajusta el objeto de párrafo con un control de contenido de texto enriquecido.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to wrap the first paragraph in a rich text content control.\n        paragraph.insertContentControl();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Wrapped the first paragraph in a content control.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.Paragraph#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Inserta un documento en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Obligatorio. El contenido codificado en Base64 de un archivo. docx.
      type: string
    - id: insertLocation
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.Paragraph#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Inserta un documento en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Obligatorio. El contenido codificado en Base64 de un archivo. docx.
      type: string
    - id: insertLocationString
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.Paragraph#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Inserta HTML en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Necesario. HTML que se va a insertar en el párrafo.
      type: string
    - id: insertLocation
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert HTML content at the end of the first paragraph.\n        paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted HTML content at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtml(html, insertLocationString)
  uid: word!Word.Paragraph#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Inserta HTML en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Necesario. HTML que se va a insertar en el párrafo.
      type: string
    - id: insertLocationString
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.Paragraph#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Inserta una imagen en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Obligatorio. La imagen codificada en Base64 que se va a insertar.
      type: string
    - id: insertLocation
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        var b64encodedImg = \"iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC\";\n\n        // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.\n        paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Added an image to the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.Paragraph#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Inserta una imagen en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Obligatorio. La imagen codificada en Base64 que se va a insertar.
      type: string
    - id: insertLocationString
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.Paragraph#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Inserta OOXML en el párrafo, en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Obligatorio. OOXML que se va a insertar en el párrafo.
      type: string
    - id: insertLocation
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.Paragraph#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Inserta OOXML en el párrafo, en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Obligatorio. OOXML que se va a insertar en el párrafo.
      type: string
    - id: insertLocationString
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.Paragraph#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Inserta un párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Necesario. Texto de párrafo que se va a insertar.
      type: string
    - id: insertLocation
      description: Necesario. El valor puede ser "Before" o "After".
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/insert-formatted-text.yaml\nawait Word.run(async (context) => {\n  // Second sentence, let's insert it as a paragraph after the previously inserted one.\n  let secondSentence = context.document.body.insertParagraph(\n    \"This is the first text with a custom style.\",\n    \"End\"\n  );\n  secondSentence.font.set({\n    bold: false,\n    italic: true,\n    name: \"Berlin Sans FB\",\n    color: \"blue\",\n    size: 30\n  });\n\n  await context.sync();\n});\n```"
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.Paragraph#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Inserta un párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Necesario. Texto de párrafo que se va a insertar.
      type: string
    - id: insertLocationString
      description: Necesario. El valor puede ser "Before" o "After".
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocation, values)
  uid: word!Word.Paragraph#insertTable:member(1)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  summary: >-
    Inserta una tabla con el número especificado de filas y columnas.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Necesario. Número de filas de la tabla.
      type: number
    - id: columnCount
      description: Necesario. Número de columnas de la tabla.
      type: number
    - id: insertLocation
      description: Necesario. El valor puede ser "Before" o "After".
      type: <xref uid="word!Word.InsertLocation:enum" />
    - id: values
      description: Matriz 2D opcional. Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocationString, values)
  uid: word!Word.Paragraph#insertTable:member(2)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  summary: >-
    Inserta una tabla con el número especificado de filas y columnas.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Necesario. Número de filas de la tabla.
      type: number
    - id: columnCount
      description: Necesario. Número de columnas de la tabla.
      type: number
    - id: insertLocationString
      description: Necesario. El valor puede ser "Before" o "After".
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: Matriz 2D opcional. Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertText(text, insertLocation)
  uid: word!Word.Paragraph#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Inserta texto en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Necesario. Texto que se va a insertar.
      type: string
    - id: insertLocation
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/insert-in-different-locations.yaml\nawait Word.run(async (context) => {\n  // Replace the last paragraph.\n  let range = context.document.body.paragraphs.getLast().insertText(\"Just replaced the last paragraph!\", \"Replace\");\n  range.font.highlightColor = \"black\";\n  range.font.color = \"white\";\n\n  await context.sync();\n});\n```"
- name: insertText(text, insertLocationString)
  uid: word!Word.Paragraph#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Inserta texto en el párrafo en la ubicación especificada.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Necesario. Texto que se va a insertar.
      type: string
    - id: insertLocationString
      description: Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(options)
  uid: word!Word.Paragraph#load:member(1)
  package: word!
  fullName: load(options)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
    parameters:
    - id: options
      description: Proporciona opciones para las propiedades del objeto que se va a cargar.
      type: <xref uid="word!Word.Interfaces.ParagraphLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Paragraph#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Paragraph#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Paragraph;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.Paragraph#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Realiza una búsqueda con el SearchOptions especificado en el ámbito del objeto Paragraph. Los resultados de la búsqueda son una colección de objetos de intervalo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Necesario. Texto de búsqueda.
      type: string
    - id: searchOptions
      description: Opcional. Opciones de la búsqueda.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: select(selectionMode)
  uid: word!Word.Paragraph#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Selecciona y se desplaza por la interfaz de usuario de Word hasta el párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Opcional. El modo de selección puede ser 'Select', 'Start' o 'End'. 'Select' es el valor predeterminado.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/35-ranges/scroll-to-range.yaml\nawait Word.run(async (context) => {\n  // If select is called with no parameters, it selects the object.\n  context.document.body.paragraphs.getLast().select();\n\n  await context.sync();\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/35-ranges/scroll-to-range.yaml\nawait Word.run(async (context) => {\n  // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.\n  context.document.body.paragraphs.getLast().select(\"End\");\n\n  await context.sync();\n});\n```"
- name: select(selectionModeString)
  uid: word!Word.Paragraph#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Selecciona y se desplaza por la interfaz de usuario de Word hasta el párrafo.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Opcional. El modo de selección puede ser 'Select', 'Start' o 'End'. 'Select' es el valor predeterminado.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.Paragraph#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
  remarks: >-
    Este método tiene la siguiente firma adicional:


    `set(properties: Word.Paragraph): void`


    #### <a name="examples"></a>Ejemplos


    ```typescript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/90-scenarios/multiple-property-set.yaml

    await Word.run(async (context) => {
      const paragraph = context.document.body.paragraphs.getFirst();
      paragraph.set({
        leftIndent: 30,
        font: {
          bold: true,
          color: "red"
        }
      });

      await context.sync();
    });

    ```

    ```typescript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/90-scenarios/multiple-property-set.yaml

    await Word.run(async (context) => {
      const firstParagraph = context.document.body.paragraphs.getFirst();
      const secondParagraph = firstParagraph.getNext();
      firstParagraph.load("text, font/color, font/bold, leftIndent");

      await context.sync();

      secondParagraph.set(firstParagraph);

      await context.sync();
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
      type: <xref uid="word!Word.Interfaces.ParagraphUpdateData:interface" />
    - id: options
      description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Paragraph#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Paragraph): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Paragraph:class" />
    return:
      type: void
      description: ''
- name: split(delimiters, trimDelimiters, trimSpacing)
  uid: word!Word.Paragraph#split:member(1)
  package: word!
  fullName: split(delimiters, trimDelimiters, trimSpacing)
  summary: >-
    Divide el párrafo en intervalos secundarios mediante delimitadores.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: delimiters
      description: Obligatorio. Los delimitadores como una matriz de cadenas.
      type: string[]
    - id: trimDelimiters
      description: Opcional. Indica si se van a recortar los delimitadores de los rangos de la colección de intervalos. El valor predeterminado es false, que indica que los delimitadores se incluyen en los rangos devueltos en la colección Range.
      type: boolean
    - id: trimSpacing
      description: Opcional. Indica si se van a recortar los caracteres de espaciado (espacios, tabulaciones, saltos de columna y marcas de fin de párrafo) desde el inicio y el final de los rangos devueltos en la colección Range. El valor predeterminado es false que indica que los caracteres de espaciado del principio y el final de los intervalos se incluyen en la colección Range.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/35-ranges/split-words-of-first-paragraph.yaml\nawait Word.run(async (context) => {\n  let paragraph = context.document.body.paragraphs.getFirst();\n  let words = paragraph.split([\" \"], true /* trimDelimiters*/, true /* trimSpaces */);\n  words.load(\"text\");\n\n  await context.sync();\n\n  for (let i = 0; i < words.items.length; i++) {\n    if (i >= 1) {\n      words.items[i - 1].font.highlightColor = \"#FFFFFF\";\n    }\n    words.items[i].font.highlightColor = \"#FFFF00\";\n\n    await context.sync();\n    await pause(200);\n  }\n});\n```"
- name: startNewList()
  uid: word!Word.Paragraph#startNewList:member(1)
  package: word!
  fullName: startNewList()
  summary: >-
    Inicia una nueva lista con este párrafo. Se produce un error si el párrafo ya es un elemento de lista.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'startNewList(): Word.List;'
    return:
      type: <xref uid="word!Word.List:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/20-lists/insert-list.yaml\n// This example starts a new list stating with the second paragraph.\nawait Word.run(async (context) => {\n  let paragraphs = context.document.body.paragraphs;\n  paragraphs.load(\"$none\"); // No properties needed.\n\n  await context.sync();\n\n  var list = paragraphs.items[1].startNewList(); // Indicates new list to be started in the second paragraph.\n  list.load(\"$none\"); // No properties needed.\n\n  await context.sync();\n\n  // To add new items to the list use start/end on the insert location parameter.\n  list.insertParagraph(\"New list item on top of the list\", \"Start\");\n  let paragraph = list.insertParagraph(\"New list item at the end of the list (4th level)\", \"End\");\n  paragraph.listItem.level = 4; // Sets up list level for the lsit item.\n  // To add paragraphs outside the list use before/after:\n  list.insertParagraph(\"New paragraph goes after (not part of the list)\", \"After\");\n\n  await context.sync();\n});\n```"
- name: toJSON()
  uid: word!Word.Paragraph#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el objeto Word. Paragraph original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como `Word.Interfaces.ParagraphData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.ParagraphData;'
    return:
      type: <xref uid="word!Word.Interfaces.ParagraphData:interface" />
      description: ''
- name: track()
  uid: word!Word.Paragraph#track:member(1)
  package: word!
  fullName: track()
  summary: Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento. Esta llamada es una abreviatura de `context.trackedObjects.add(thisObject)`<!-- -->. Si usa este objeto a través `.sync` de llamadas y fuera de la ejecución secuencial de un lote ". Run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, es necesario que haya agregado el objeto a la colección de objetos con seguimiento cuando se creó el objeto por primera vez.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: untrack()
  uid: word!Word.Paragraph#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente. Esta llamada es una forma abreviada de `context.trackedObjects.remove(thisObject)`<!-- -->. Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos. Tendrá que llamar `context.sync()` antes de que la liberación de memoria surta efecto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4544fb8bfabf84280db1767361f8e95a10f3ccdd
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49136151"
