### YamlMime:UniversalReference
items:
  - uid: 'word!Word.List:class'
    summary: |-
      Contiene una colección de objetos [Word. Paragraph](xref:word!Word.Paragraph:class) .

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.List
    fullName: Word.List
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.List#context:member'
      - 'word!Word.List#getLevelParagraphs:member(1)'
      - 'word!Word.List#getLevelString:member(1)'
      - 'word!Word.List#id:member'
      - 'word!Word.List#insertParagraph:member(1)'
      - 'word!Word.List#insertParagraph:member(2)'
      - 'word!Word.List#levelExistences:member'
      - 'word!Word.List#levelTypes:member'
      - 'word!Word.List#load:member(1)'
      - 'word!Word.List#load:member(2)'
      - 'word!Word.List#load:member(3)'
      - 'word!Word.List#paragraphs:member'
      - 'word!Word.List#setLevelAlignment:member(1)'
      - 'word!Word.List#setLevelAlignment:member(2)'
      - 'word!Word.List#setLevelBullet:member(1)'
      - 'word!Word.List#setLevelBullet:member(2)'
      - 'word!Word.List#setLevelIndents:member(1)'
      - 'word!Word.List#setLevelNumbering:member(1)'
      - 'word!Word.List#setLevelNumbering:member(2)'
      - 'word!Word.List#setLevelStartingNumber:member(1)'
      - 'word!Word.List#toJSON:member(1)'
      - 'word!Word.List#track:member(1)'
      - 'word!Word.List#untrack:member(1)'
  - uid: 'word!Word.List#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.List#getLevelParagraphs:member(1)'
    summary: |-
      Obtiene los párrafos que se producen en el nivel especificado de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelParagraphs(level)
    fullName: getLevelParagraphs(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
  - uid: 'word!Word.List#getLevelString:member(1)'
    summary: |-
      Obtiene la viñeta, el número o la imagen en el nivel especificado como cadena.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelString(level)
    fullName: getLevelString(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.List#getLevelString~0:complex'
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
  - uid: 'word!Word.List#id:member'
    summary: |-
      Obtiene el identificador de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'word!Word.List#insertParagraph:member(1)'
    summary: |-
      Inserta un párrafo en la ubicación especificada. El valor de insertLocation puede ser "Start", "End", "Before" o "after".

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Necesario. Texto de párrafo que se va a insertar.
          type:
            - string
        - id: insertLocation
          description: 'Necesario. El valor puede ser "Start", "End", "Before" o "after".'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.List#insertParagraph:member(2)'
    summary: |-
      Inserta un párrafo en la ubicación especificada. El valor de insertLocation puede ser "Start", "End", "Before" o "after".

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Necesario. Texto de párrafo que se va a insertar.
          type:
            - string
        - id: insertLocationString
          description: 'Necesario. El valor puede ser "Start", "End", "Before" o "after".'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.List#levelExistences:member'
    summary: |-
      Comprueba si cada uno de los 9 niveles existe en la lista. Un valor True indica que el nivel existe, lo que significa que existe al menos un elemento de lista en ese nivel. Solo lectura.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelExistences
    fullName: levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type:
          - 'boolean[]'
  - uid: 'word!Word.List#levelTypes:member'
    summary: |-
      Obtiene todos los tipos de los 9 niveles de la lista. Cada tipo puede ser "Bullet", "Number" o "Picture". Solo lectura.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelTypes
    fullName: levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type:
          - 'word!Word.List#levelTypes~0:complex'
  - uid: 'word!Word.List#load:member(1)'
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Word.List`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Word.List`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.List`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ListLoadOptions): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ListLoadOptions:interface'
  - uid: 'word!Word.List#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'word!Word.List#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.List#paragraphs:member'
    summary: |-
      Obtiene los párrafos de la lista. Solo lectura.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.List#setLevelAlignment:member(1)'
    summary: |-
      Obtiene la alineación de la viñeta, el número o la imagen en el nivel especificado de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignment)'
    fullName: 'setLevelAlignment(level, alignment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: alignment
          description: 'Necesario. La alineación del nivel que puede ser "left", "centered" o "Right".'
          type:
            - 'word!Word.Alignment:enum'
  - uid: 'word!Word.List#setLevelAlignment:member(2)'
    summary: |-
      Obtiene la alineación de la viñeta, el número o la imagen en el nivel especificado de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignmentString)'
    fullName: 'setLevelAlignment(level, alignmentString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignmentString: "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: alignmentString
          description: 'Necesario. La alineación del nivel que puede ser "left", "centered" o "Right".'
          type:
            - '"Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.List#setLevelBullet:member(1)'
    summary: |-
      Establece el formato de viñeta en el nivel especificado de la lista. Si la viñeta es 'Custom', se requiere charCode.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBullet, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: listBullet
          description: Necesario. La viñeta.
          type:
            - 'word!Word.ListBullet:enum'
        - id: charCode
          description: Opcional. Valor del código del símbolo de viñeta. Solo se usa si la viñeta es "personalizada".
          type:
            - number
        - id: fontName
          description: Opcional. Nombre de la fuente de la viñeta. Solo se usa si la viñeta es "personalizada".
          type:
            - string
  - uid: 'word!Word.List#setLevelBullet:member(2)'
    summary: |-
      Establece el formato de viñeta en el nivel especificado de la lista. Si la viñeta es 'Custom', se requiere charCode.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBulletString: "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark", charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: listBulletString
          description: Necesario. La viñeta.
          type:
            - '"Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark"'
        - id: charCode
          description: Opcional. Valor del código del símbolo de viñeta. Solo se usa si la viñeta es "personalizada".
          type:
            - number
        - id: fontName
          description: Opcional. Nombre de la fuente de la viñeta. Solo se usa si la viñeta es "personalizada".
          type:
            - string
  - uid: 'word!Word.List#setLevelIndents:member(1)'
    summary: |-
      Establece las dos sangrías del nivel especificado de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: textIndent
          description: Necesario. Sangría de texto en puntos. Es la misma que la sangría izquierda del párrafo.
          type:
            - number
        - id: bulletNumberPictureIndent
          description: 'Necesario. Sangría relativa, en puntos, de la viñeta, el número o la imagen. Es el mismo que la sangría de primera línea de párrafo.'
          type:
            - number
  - uid: 'word!Word.List#setLevelNumbering:member(1)'
    summary: |-
      Establece el formato de numeración en el nivel especificado de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: 'setLevelNumbering(level, listNumbering, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: listNumbering
          description: Necesario. El formato ordinal.
          type:
            - 'word!Word.ListNumbering:enum'
        - id: formatString
          description: 'Opcional. El formato de cadena de numeración definido como una matriz de cadenas o enteros. Cada entero es un nivel de tipo de número que es mayor o igual que este nivel. Por ejemplo, una matriz de \["(", Level-1, ".", LEVEL ")"\] puede definir el formato de "(2. c)", donde 2 es el número de elemento de la matriz y c es el número de elemento de este nivel.'
          type:
            - 'word!Word.List#setLevelNumbering~0:complex'
  - uid: 'word!Word.List#setLevelNumbering:member(2)'
    summary: |-
      Establece el formato de numeración en el nivel especificado de la lista.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumberingString, formatString)'
    fullName: 'setLevelNumbering(level, listNumberingString, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumberingString: "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter", formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: listNumberingString
          description: Necesario. El formato ordinal.
          type:
            - '"None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter"'
        - id: formatString
          description: 'Opcional. El formato de cadena de numeración definido como una matriz de cadenas o enteros. Cada entero es un nivel de tipo de número que es mayor o igual que este nivel. Por ejemplo, una matriz de \["(", Level-1, ".", LEVEL ")"\] puede definir el formato de "(2. c)", donde 2 es el número de elemento de la matriz y c es el número de elemento de este nivel.'
          type:
            - 'word!Word.List#setLevelNumbering~1:complex'
  - uid: 'word!Word.List#setLevelStartingNumber:member(1)'
    summary: |-
      Establece el número de inicio en el nivel especificado de la lista. El valor predeterminado es 1.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: 'setLevelStartingNumber(level, startingNumber)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Necesario. El nivel de la lista.
          type:
            - number
        - id: startingNumber
          description: Necesario. Número con el que se va a empezar.
          type:
            - number
  - uid: 'word!Word.List#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Word. List original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Word.Interfaces.ListData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type:
          - 'word!Word.Interfaces.ListData:interface'
        description: ''
  - uid: 'word!Word.List#track:member(1)'
    summary: 'Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento. Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject). Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
  - uid: 'word!Word.List#untrack:member(1)'
    summary: 'Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente. Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject). Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos. Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.List#getLevelString~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.List#levelTypes~0:complex'
    name: 'Word.ListLevelType[]'
    fullName: 'Word.ListLevelType[]'
    spec.typeScript:
      - uid: 'word!Word.ListLevelType:enum'
        name: Word.ListLevelType
        fullName: Word.ListLevelType
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.List:class'
    name: Word.List
  - uid: 'word!Word.Interfaces.ListLoadOptions:interface'
    name: Word.Interfaces.ListLoadOptions
  - uid: 'word!Word.Alignment:enum'
    name: Word.Alignment
  - uid: 'word!Word.ListBullet:enum'
    name: Word.ListBullet
  - uid: 'word!Word.ListNumbering:enum'
    name: Word.ListNumbering
  - uid: 'word!Word.List#setLevelNumbering~0:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.List#setLevelNumbering~1:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.Interfaces.ListData:interface'
    name: Word.Interfaces.ListData