### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    summary: |-
      <span data-ttu-id="85020-101">Representa una colección de series del gráfico.</span><span class="sxs-lookup"><span data-stu-id="85020-101">Represents a collection of chart series.</span></span>

      <span data-ttu-id="85020-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="85020-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeriesCollection
    fullName: Excel.ChartSeriesCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartSeriesCollection#add:member(1)'
      - 'excel!Excel.ChartSeriesCollection#context:member'
      - 'excel!Excel.ChartSeriesCollection#count:member'
      - 'excel!Excel.ChartSeriesCollection#getCount:member(1)'
      - 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartSeriesCollection#items:member'
      - 'excel!Excel.ChartSeriesCollection#load:member(1)'
      - 'excel!Excel.ChartSeriesCollection#load:member(2)'
      - 'excel!Excel.ChartSeriesCollection#load:member(3)'
      - 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartSeriesCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="85020-103">Agrega una nueva serie a la colección.</span><span class="sxs-lookup"><span data-stu-id="85020-103">Add a new series to the collection.</span></span> <span data-ttu-id="85020-104">La nueva serie agregada no estará visible hasta que establezca valores de eje/x/tamaños de burbuja (según el tipo de gráfico).</span><span class="sxs-lookup"><span data-stu-id="85020-104">The new added series is not visible until set values/x axis values/bubble sizes for it (depending on chart type).</span></span>

      <span data-ttu-id="85020-105">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="85020-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, index)'
    fullName: 'add(name, index)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string, index?: number): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="85020-106">Opcional.</span><span class="sxs-lookup"><span data-stu-id="85020-106">Optional.</span></span> <span data-ttu-id="85020-107">Nombre de la serie.</span><span class="sxs-lookup"><span data-stu-id="85020-107">Name of the series.</span></span>
          type:
            - string
        - id: index
          description: <span data-ttu-id="85020-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="85020-108">Optional.</span></span> <span data-ttu-id="85020-109">Valor de índice de la serie que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="85020-109">Index value of the series to be added.</span></span> <span data-ttu-id="85020-110">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="85020-110">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartSeriesCollection#context:member'
    summary: <span data-ttu-id="85020-111">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="85020-111">The request context associated with the object.</span></span> <span data-ttu-id="85020-112">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="85020-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartSeriesCollection#count:member'
    summary: |-
      <span data-ttu-id="85020-113">Devuelve el número de series incluidas en la colección.</span><span class="sxs-lookup"><span data-stu-id="85020-113">Returns the number of series in the collection.</span></span> <span data-ttu-id="85020-114">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="85020-114">Read-only.</span></span>

      <span data-ttu-id="85020-115">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="85020-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeriesCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="85020-116">Devuelve el número de series incluidas en la colección.</span><span class="sxs-lookup"><span data-stu-id="85020-116">Returns the number of series in the collection.</span></span>

      <span data-ttu-id="85020-117">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="85020-117">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="85020-118">Recupera una serie basada en su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="85020-118">Retrieves a series based on its position in the collection.</span></span>

      <span data-ttu-id="85020-119">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="85020-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="85020-120">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="85020-120">Examples</span></span>

          ```javascript
          // Get the name of the first series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  console.log(seriesCollection.items[0].name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="85020-121">Valor de índice del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="85020-121">Index value of the object to be retrieved.</span></span> <span data-ttu-id="85020-122">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="85020-122">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartSeriesCollection#items:member'
    summary: <span data-ttu-id="85020-123">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="85020-123">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartSeries[];'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#items~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(1)'
    summary: '<span data-ttu-id="85020-124">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="85020-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="85020-125">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="85020-125">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="85020-126">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="85020-126">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="85020-127">`load(option?: string | string[]): Excel.ChartSeriesCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="85020-127">`load(option?: string | string[]): Excel.ChartSeriesCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="85020-128">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="85020-128">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="85020-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="85020-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection` - Only available on collection types.</span></span> <span data-ttu-id="85020-130">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="85020-130">It is similar to the preceding signature.</span></span> <span data-ttu-id="85020-131">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="85020-131">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="85020-132">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="85020-132">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="85020-133">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="85020-133">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ChartSeriesCollection#load~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(2)'
    summary: <span data-ttu-id="85020-134">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="85020-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="85020-135">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="85020-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="85020-136">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="85020-136">Examples</span></span>

          ```javascript
          // Getting the names of series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < seriesCollection.items.length; i++)
                  {
                      console.log(seriesCollection.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of chart series in collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("series: Count= " + seriesCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="85020-137">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="85020-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="85020-138">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="85020-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="85020-139">.</span><span class="sxs-lookup"><span data-stu-id="85020-139"></span></span> <span data-ttu-id="85020-140">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="85020-140"></span></span><!-- --><span data-ttu-id="85020-141">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.ChartSeriesCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ChartSeriesCollectionData`</span><span class="sxs-lookup"><span data-stu-id="85020-141">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartSeriesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesCollectionData`</span></span><!-- --><span data-ttu-id="85020-142">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="85020-142">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartSeries:class'
    name: Excel.ChartSeries
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartSeriesCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartSeriesCollection#items~0:complex'
    name: 'Excel.ChartSeries[]'
    fullName: 'Excel.ChartSeries[]'
    spec.typeScript:
      - uid: 'excel!Excel.ChartSeries:class'
        name: Excel.ChartSeries
        fullName: Excel.ChartSeries
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    name: Excel.ChartSeriesCollection
  - uid: 'excel!Excel.ChartSeriesCollection#load~0:complex'
    name: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartSeriesCollectionLoadOptions
        fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
    name: Excel.Interfaces.ChartSeriesCollectionData