### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeries:class'
    summary: |-
      <span data-ttu-id="c9931-101">Representa una serie de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-101">Represents a series in a chart.</span></span>

      <span data-ttu-id="c9931-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartSeries#chartType:member'
      - 'excel!Excel.ChartSeries#context:member'
      - 'excel!Excel.ChartSeries#delete:member(1)'
      - 'excel!Excel.ChartSeries#doughnutHoleSize:member'
      - 'excel!Excel.ChartSeries#filtered:member'
      - 'excel!Excel.ChartSeries#format:member'
      - 'excel!Excel.ChartSeries#gapWidth:member'
      - 'excel!Excel.ChartSeries#hasDataLabels:member'
      - 'excel!Excel.ChartSeries#load:member(1)'
      - 'excel!Excel.ChartSeries#load:member(2)'
      - 'excel!Excel.ChartSeries#load:member(3)'
      - 'excel!Excel.ChartSeries#markerBackgroundColor:member'
      - 'excel!Excel.ChartSeries#markerForegroundColor:member'
      - 'excel!Excel.ChartSeries#markerSize:member'
      - 'excel!Excel.ChartSeries#markerStyle:member'
      - 'excel!Excel.ChartSeries#name:member'
      - 'excel!Excel.ChartSeries#plotOrder:member'
      - 'excel!Excel.ChartSeries#points:member'
      - 'excel!Excel.ChartSeries#set:member(1)'
      - 'excel!Excel.ChartSeries#set:member(2)'
      - 'excel!Excel.ChartSeries#setBubbleSizes:member(1)'
      - 'excel!Excel.ChartSeries#setValues:member(1)'
      - 'excel!Excel.ChartSeries#setXAxisValues:member(1)'
      - 'excel!Excel.ChartSeries#showShadow:member'
      - 'excel!Excel.ChartSeries#smooth:member'
      - 'excel!Excel.ChartSeries#toJSON:member(1)'
      - 'excel!Excel.ChartSeries#trendlines:member'
  - uid: 'excel!Excel.ChartSeries#chartType:member'
    summary: |-
      <span data-ttu-id="c9931-103">Representa el tipo de gráfico de una serie.</span><span class="sxs-lookup"><span data-stu-id="c9931-103">Represents the chart type of a series.</span></span> <span data-ttu-id="c9931-104">Consulte Excel. ChartType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="c9931-104">See Excel.ChartType for details.</span></span>

      <span data-ttu-id="c9931-105">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - 'excel!Excel.ChartSeries#chartType~0:complex'
  - uid: 'excel!Excel.ChartSeries#context:member'
    summary: <span data-ttu-id="c9931-106">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="c9931-106">The request context associated with the object.</span></span> <span data-ttu-id="c9931-107">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="c9931-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartSeries#delete:member(1)'
    summary: |-
      <span data-ttu-id="c9931-108">Elimina la serie del gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-108">Deletes the chart series.</span></span>

      <span data-ttu-id="c9931-109">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-109">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-110">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#doughnutHoleSize:member'
    summary: |-
      <span data-ttu-id="c9931-111">Representa el tamaño del agujero de los anillos de una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-111">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="c9931-112">Solo es válida en los gráficos de anillos y doughnutExploded.</span><span class="sxs-lookup"><span data-stu-id="c9931-112">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="c9931-113">Produce una excepción de argumento no válido en gráficos no válidos.</span><span class="sxs-lookup"><span data-stu-id="c9931-113">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="c9931-114">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#filtered:member'
    summary: |-
      <span data-ttu-id="c9931-115">Valor booleano que representa si la serie está filtrada o no.</span><span class="sxs-lookup"><span data-stu-id="c9931-115">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="c9931-116">No aplicable para los gráficos de superficie.</span><span class="sxs-lookup"><span data-stu-id="c9931-116">Not applicable for surface charts.</span></span>

      <span data-ttu-id="c9931-117">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#format:member'
    summary: |-
      <span data-ttu-id="c9931-118">Representa el formato de una serie del gráfico, que incluye el formato de relleno y de línea.</span><span class="sxs-lookup"><span data-stu-id="c9931-118">Represents the formatting of a chart series, which includes fill and line formatting.</span></span> <span data-ttu-id="c9931-119">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9931-119">Read-only.</span></span>

      <span data-ttu-id="c9931-120">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - 'excel!Excel.ChartSeriesFormat:class'
  - uid: 'excel!Excel.ChartSeries#gapWidth:member'
    summary: |-
      <span data-ttu-id="c9931-121">Representa el ancho del rango de una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-121">Represents the gap width of a chart series.</span></span> <span data-ttu-id="c9931-122">Solo es válido en los gráficos de barras y columnas, así como en clases específicas de gráficos de líneas y circulares.</span><span class="sxs-lookup"><span data-stu-id="c9931-122">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="c9931-123">Produce una excepción de argumento no válido en gráficos no válidos.</span><span class="sxs-lookup"><span data-stu-id="c9931-123">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="c9931-124">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-124">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#hasDataLabels:member'
    summary: |-
      <span data-ttu-id="c9931-125">Valor booleano que representa si la serie tiene etiquetas de datos o no.</span><span class="sxs-lookup"><span data-stu-id="c9931-125">Boolean value representing if the series has data labels or not.</span></span>

      <span data-ttu-id="c9931-126">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#load:member(1)'
    summary: '<span data-ttu-id="c9931-127">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c9931-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c9931-128">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="c9931-128">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="c9931-129">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="c9931-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c9931-130">`load(option?: string | string[]): Excel.ChartSeries`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="c9931-130">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c9931-131">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="c9931-131">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c9931-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="c9931-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="c9931-133">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="c9931-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="c9931-134">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="c9931-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c9931-135">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="c9931-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c9931-136">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="c9931-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ChartSeriesLoadOptions:interface'
  - uid: 'excel!Excel.ChartSeries#load:member(2)'
    summary: <span data-ttu-id="c9931-137">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c9931-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c9931-138">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c9931-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-139">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-139">Examples</span></span>

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c9931-140">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="c9931-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeries#load:member(3)'
    summary: <span data-ttu-id="c9931-141">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c9931-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c9931-142">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c9931-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c9931-143">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="c9931-143">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.ChartSeries#markerBackgroundColor:member'
    summary: |-
      <span data-ttu-id="c9931-144">Representa el color de fondo de marcadores de una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-144">Represents markers background color of a chart series.</span></span>

      <span data-ttu-id="c9931-145">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-145">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-146">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#markerForegroundColor:member'
    summary: |-
      <span data-ttu-id="c9931-147">Representa el color de fondo de los marcadores de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="c9931-147">Represents markers foreground color of a chart series.</span></span>

      <span data-ttu-id="c9931-148">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-148">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-149">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-149">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#markerSize:member'
    summary: |-
      <span data-ttu-id="c9931-150">Representa el tamaño del marcador de una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-150">Represents marker size of a chart series.</span></span>

      <span data-ttu-id="c9931-151">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-151">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-152">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-152">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#markerStyle:member'
    summary: |-
      <span data-ttu-id="c9931-153">Representa el estilo del marcador de una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-153">Represents marker style of a chart series.</span></span> <span data-ttu-id="c9931-154">Consulte Excel. ChartMarkerStyle para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="c9931-154">See Excel.ChartMarkerStyle for details.</span></span>

      <span data-ttu-id="c9931-155">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-155">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - 'excel!Excel.ChartSeries#markerStyle~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-156">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-156">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#name:member'
    summary: |-
      <span data-ttu-id="c9931-157">Representa el nombre de una serie de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-157">Represents the name of a series in a chart.</span></span>

      <span data-ttu-id="c9931-158">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#plotOrder:member'
    summary: |-
      <span data-ttu-id="c9931-159">Representa el orden de trazado de una serie de gráfico en el grupo de gráficos.</span><span class="sxs-lookup"><span data-stu-id="c9931-159">Represents the plot order of a chart series within the chart group.</span></span>

      <span data-ttu-id="c9931-160">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-160">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#points:member'
    summary: |-
      <span data-ttu-id="c9931-161">Representa una colección de todos los puntos de la serie.</span><span class="sxs-lookup"><span data-stu-id="c9931-161">Represents a collection of all points in the series.</span></span> <span data-ttu-id="c9931-162">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9931-162">Read-only.</span></span>

      <span data-ttu-id="c9931-163">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
  - uid: 'excel!Excel.ChartSeries#set:member(1)'
    summary: '<span data-ttu-id="c9931-164">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="c9931-164">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c9931-165">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="c9931-165">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c9931-166">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="c9931-166">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="c9931-167">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c9931-167">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartSeriesUpdateData:interface'
        - id: options
          description: <span data-ttu-id="c9931-168">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9931-168">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartSeries#set:member(2)'
    summary: '<span data-ttu-id="c9931-169">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="c9931-169">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartSeries:class'
  - uid: 'excel!Excel.ChartSeries#setBubbleSizes:member(1)'
    summary: |-
      <span data-ttu-id="c9931-170">Establece los tamaños de burbuja para una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-170">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="c9931-171">Solo funciona para los gráficos de burbujas.</span><span class="sxs-lookup"><span data-stu-id="c9931-171">Only works for bubble charts.</span></span>

      <span data-ttu-id="c9931-172">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="c9931-173">El objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="c9931-173">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
  - uid: 'excel!Excel.ChartSeries#setValues:member(1)'
    summary: |-
      <span data-ttu-id="c9931-174">Establece los valores de una serie de gráfico.</span><span class="sxs-lookup"><span data-stu-id="c9931-174">Set values for a chart series.</span></span> <span data-ttu-id="c9931-175">En un gráfico de dispersión, significa los valores del eje Y.</span><span class="sxs-lookup"><span data-stu-id="c9931-175">For scatter chart, it means Y axis values.</span></span>

      <span data-ttu-id="c9931-176">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-176">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9931-177">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c9931-177">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: <span data-ttu-id="c9931-178">El objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="c9931-178">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
  - uid: 'excel!Excel.ChartSeries#setXAxisValues:member(1)'
    summary: |-
      <span data-ttu-id="c9931-179">Establece los valores del eje X de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="c9931-179">Set values of X axis for a chart series.</span></span> <span data-ttu-id="c9931-180">Solo funciona para los gráficos de dispersión.</span><span class="sxs-lookup"><span data-stu-id="c9931-180">Only works for scatter charts.</span></span>

      <span data-ttu-id="c9931-181">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-181">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="c9931-182">El objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="c9931-182">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
  - uid: 'excel!Excel.ChartSeries#showShadow:member'
    summary: |-
      <span data-ttu-id="c9931-183">Valor booleano que representa si la serie tiene una sombra o no.</span><span class="sxs-lookup"><span data-stu-id="c9931-183">Boolean value representing if the series has a shadow or not.</span></span>

      <span data-ttu-id="c9931-184">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-184">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#smooth:member'
    summary: |-
      <span data-ttu-id="c9931-185">Valor booleano que representa si la serie es fluida o no.</span><span class="sxs-lookup"><span data-stu-id="c9931-185">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="c9931-186">Sólo aplicable a los gráficos de líneas y de dispersión.</span><span class="sxs-lookup"><span data-stu-id="c9931-186">Only applicable to line and scatter charts.</span></span>

      <span data-ttu-id="c9931-187">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-187">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#toJSON:member(1)'
    summary: '<span data-ttu-id="c9931-188">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c9931-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c9931-189">.</span><span class="sxs-lookup"><span data-stu-id="c9931-189"></span></span> <span data-ttu-id="c9931-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c9931-190"></span></span><!-- --><span data-ttu-id="c9931-191">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Charts original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ChartSeriesData`</span><span class="sxs-lookup"><span data-stu-id="c9931-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`</span></span><!-- --><span data-ttu-id="c9931-192">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="c9931-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartSeriesData:interface'
        description: ''
  - uid: 'excel!Excel.ChartSeries#trendlines:member'
    summary: |-
      <span data-ttu-id="c9931-193">Representa un conjunto de líneas de tendencia de la serie.</span><span class="sxs-lookup"><span data-stu-id="c9931-193">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="c9931-194">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9931-194">Read-only.</span></span>

      <span data-ttu-id="c9931-195">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9931-195">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - 'excel!Excel.ChartTrendlineCollection:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartSeries#chartType~0:complex'
    name: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
    fullName: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
    spec.typeScript:
      - uid: 'excel!Excel.ChartType:enum'
        name: Excel.ChartType
        fullName: Excel.ChartType
      - name: ' | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        fullName: ' | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartSeriesFormat:class'
    name: Excel.ChartSeriesFormat
  - uid: 'excel!Excel.ChartSeries:class'
    name: Excel.ChartSeries
  - uid: 'excel!Excel.Interfaces.ChartSeriesLoadOptions:interface'
    name: Excel.Interfaces.ChartSeriesLoadOptions
  - uid: 'excel!Excel.ChartSeries#markerStyle~0:complex'
    name: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
    fullName: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
    spec.typeScript:
      - uid: 'excel!Excel.ChartMarkerStyle:enum'
        name: Excel.ChartMarkerStyle
        fullName: Excel.ChartMarkerStyle
      - name: ' | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"'
        fullName: ' | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"'
  - uid: 'excel!Excel.ChartPointsCollection:class'
    name: Excel.ChartPointsCollection
  - uid: 'excel!Excel.Interfaces.ChartSeriesUpdateData:interface'
    name: Interfaces.ChartSeriesUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.Interfaces.ChartSeriesData:interface'
    name: Excel.Interfaces.ChartSeriesData
  - uid: 'excel!Excel.ChartTrendlineCollection:class'
    name: Excel.ChartTrendlineCollection