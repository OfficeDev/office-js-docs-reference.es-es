### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Application:class'
    summary: |-
      <span data-ttu-id="a80d2-101">Representa la aplicación de Excel que administra el libro.</span><span class="sxs-lookup"><span data-stu-id="a80d2-101">Represents the Excel application that manages the workbook.</span></span>

      <span data-ttu-id="a80d2-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a80d2-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Application
    fullName: Excel.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Application#calculate:member(1)'
      - 'excel!Excel.Application#calculate:member(2)'
      - 'excel!Excel.Application#calculationMode:member'
      - 'excel!Excel.Application#context:member'
      - 'excel!Excel.Application#load:member(1)'
      - 'excel!Excel.Application#load:member(2)'
      - 'excel!Excel.Application#load:member(3)'
      - 'excel!Excel.Application#set:member(1)'
      - 'excel!Excel.Application#set:member(2)'
      - 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
      - 'excel!Excel.Application#toJSON:member(1)'
  - uid: 'excel!Excel.Application#calculate:member(1)'
    summary: |-
      <span data-ttu-id="a80d2-103">Recalcula todos los libros abiertos actualmente en Excel.</span><span class="sxs-lookup"><span data-stu-id="a80d2-103">Recalculate all currently opened workbooks in Excel.</span></span>

      <span data-ttu-id="a80d2-104">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a80d2-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(calculationType)
    fullName: calculate(calculationType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationType: Excel.CalculationType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationType
          description: <span data-ttu-id="a80d2-105">Especifica el tipo de cálculo que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="a80d2-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="a80d2-106">Consulte Excel. CalculationType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="a80d2-106">See Excel.CalculationType for details.</span></span>
          type:
            - 'excel!Excel.CalculationType:enum'
  - uid: 'excel!Excel.Application#calculate:member(2)'
    summary: |-
      <span data-ttu-id="a80d2-107">Recalcula todos los libros abiertos actualmente en Excel.</span><span class="sxs-lookup"><span data-stu-id="a80d2-107">Recalculate all currently opened workbooks in Excel.</span></span>

      <span data-ttu-id="a80d2-108">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a80d2-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(calculationTypeString)
    fullName: calculate(calculationTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a80d2-109">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="a80d2-109">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              ctx.workbook.application.calculate('Full');
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: calculationTypeString
          description: <span data-ttu-id="a80d2-110">Especifica el tipo de cálculo que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="a80d2-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="a80d2-111">Consulte Excel. CalculationType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="a80d2-111">See Excel.CalculationType for details.</span></span>
          type:
            - '"Recalculate" | "Full" | "FullRebuild"'
  - uid: 'excel!Excel.Application#calculationMode:member'
    summary: |-
      <span data-ttu-id="a80d2-112">Devuelve el modo de cálculo utilizado en el libro, tal y como se define en las constantes de Excel. CalculationMode.</span><span class="sxs-lookup"><span data-stu-id="a80d2-112">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="a80d2-113">Los valores posibles son:`Automatic`</span><span class="sxs-lookup"><span data-stu-id="a80d2-113">Possible values are: `Automatic`</span></span><!-- --><span data-ttu-id="a80d2-114">, donde Excel controla la actualización de los cálculos;`AutomaticExceptTables`</span><span class="sxs-lookup"><span data-stu-id="a80d2-114">, where Excel controls recalculation; `AutomaticExceptTables`</span></span><!-- --><span data-ttu-id="a80d2-115">, donde Excel controla la actualización de cálculos, pero ignora los cambios en las tablas;`Manual`</span><span class="sxs-lookup"><span data-stu-id="a80d2-115">, where Excel controls recalculation but ignores changes in tables; `Manual`</span></span><!-- --><span data-ttu-id="a80d2-116">, donde se realiza el cálculo cuando el usuario lo solicita.</span><span class="sxs-lookup"><span data-stu-id="a80d2-116">, where calculation is done when the user requests it.</span></span>

      <span data-ttu-id="a80d2-117">\[[Conjunto de API: ExcelApi 1,1 para get, 1,8 para Set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a80d2-117">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculationMode
    fullName: calculationMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
      return:
        type:
          - 'excel!Excel.Application#calculationMode~0:complex'
  - uid: 'excel!Excel.Application#context:member'
    summary: <span data-ttu-id="a80d2-118">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="a80d2-118">The request context associated with the object.</span></span> <span data-ttu-id="a80d2-119">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="a80d2-119">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Application#load:member(1)'
    summary: '<span data-ttu-id="a80d2-120">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a80d2-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a80d2-121">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="a80d2-121">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="a80d2-122">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="a80d2-122">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a80d2-123">`load(option?: string | string[]): Excel.Application`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="a80d2-123">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a80d2-124">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="a80d2-124">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a80d2-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="a80d2-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="a80d2-126">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="a80d2-126">It is similar to the preceding signature.</span></span> <span data-ttu-id="a80d2-127">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a80d2-127">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a80d2-128">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a80d2-128">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a80d2-129">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a80d2-129">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ApplicationLoadOptions:interface'
  - uid: 'excel!Excel.Application#load:member(2)'
    summary: <span data-ttu-id="a80d2-130">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a80d2-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a80d2-131">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a80d2-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a80d2-132">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="a80d2-132">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var application = ctx.workbook.application;
              application.load('calculationMode');
              return ctx.sync().then(function() {
                  console.log(application.calculationMode);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a80d2-133">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="a80d2-133">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Application#load:member(3)'
    summary: <span data-ttu-id="a80d2-134">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a80d2-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a80d2-135">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a80d2-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a80d2-136">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="a80d2-136">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Application#set:member(1)'
    summary: '<span data-ttu-id="a80d2-137">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="a80d2-137">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a80d2-138">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="a80d2-138">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="a80d2-139">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="a80d2-139">This method has the following additional signature:</span></span>

      `set(properties: Excel.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="a80d2-140">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a80d2-140">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ApplicationUpdateData:interface'
        - id: options
          description: <span data-ttu-id="a80d2-141">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a80d2-141">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Application#set:member(2)'
    summary: '<span data-ttu-id="a80d2-142">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="a80d2-142">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
    summary: |-
      <span data-ttu-id="a80d2-p110">Suspende el cálculo hasta que se llama al siguiente "context.sync()". Una vez establecido, será responsabilidad del desarrollador actualizar el libro para asegurarse de que se propaguen las dependencias.</span><span class="sxs-lookup"><span data-stu-id="a80d2-p110">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>

      <span data-ttu-id="a80d2-145">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a80d2-145">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: suspendApiCalculationUntilNextSync()
    fullName: suspendApiCalculationUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendApiCalculationUntilNextSync(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Application#toJSON:member(1)'
    summary: '<span data-ttu-id="a80d2-146">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a80d2-146">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a80d2-147">.</span><span class="sxs-lookup"><span data-stu-id="a80d2-147"></span></span> <span data-ttu-id="a80d2-148">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a80d2-148"></span></span><!-- --><span data-ttu-id="a80d2-149">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Application original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="a80d2-149">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="a80d2-150">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="a80d2-150">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ApplicationData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ApplicationData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.CalculationType:enum'
    name: Excel.CalculationType
  - uid: 'excel!Excel.Application#calculationMode~0:complex'
    name: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    fullName: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationMode:enum'
        name: Excel.CalculationMode
        fullName: Excel.CalculationMode
      - name: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
        fullName: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
  - uid: 'excel!Excel.Interfaces.ApplicationLoadOptions:interface'
    name: Excel.Interfaces.ApplicationLoadOptions
  - uid: 'excel!Excel.Interfaces.ApplicationUpdateData:interface'
    name: Interfaces.ApplicationUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ApplicationData:interface'
    name: Excel.Interfaces.ApplicationData