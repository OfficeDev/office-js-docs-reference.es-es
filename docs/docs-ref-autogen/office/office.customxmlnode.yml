### YamlMime:UniversalReference
ms.openlocfilehash: aef94cedea3e63354fe77beea7a3047d5e8741a3
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29974902"
items:
- uid: office.Office.CustomXmlNode
  summary: <span data-ttu-id="57893-101">Representa un nodo XML en un árbol de un documento.</span><span class="sxs-lookup"><span data-stu-id="57893-101">Represents an XML node in a tree in a document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="57893-102">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-102">Requirement Sets</span></span></td><td><span data-ttu-id="57893-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="57893-104">**Detalles de compatibilidad**</span><span class="sxs-lookup"><span data-stu-id="57893-104">**Support details**</span></span>


    <span data-ttu-id="57893-105">Una letra mayúscula Y en la siguiente matriz indica que esta interfaz es compatible con la aplicación host de Office correspondiente.</span><span class="sxs-lookup"><span data-stu-id="57893-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="57893-106">Una celda vacía indica que la aplicación host de Office no admite esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="57893-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="57893-107">Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="57893-108">*Hosts compatibles, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="57893-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="57893-109">Office para escritorio de Windows</span><span class="sxs-lookup"><span data-stu-id="57893-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="57893-110">Office Online (en el explorador)</span><span class="sxs-lookup"><span data-stu-id="57893-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="57893-111">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="57893-111">Office for iPad</span></span> </th><th> <span data-ttu-id="57893-112">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="57893-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="57893-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="57893-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="57893-114">v</span><span class="sxs-lookup"><span data-stu-id="57893-114">Y</span></span> </td><td> <span data-ttu-id="57893-115">v</span><span class="sxs-lookup"><span data-stu-id="57893-115">Y</span></span> </td><td> <span data-ttu-id="57893-116">v</span><span class="sxs-lookup"><span data-stu-id="57893-116">Y</span></span> </td><td> <span data-ttu-id="57893-117">v</span><span class="sxs-lookup"><span data-stu-id="57893-117">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodesAsync_1
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getNodeValueAsync_1
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getTextAsync_1
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.getXmlAsync_1
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setNodeValueAsync_1
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setTextAsync_1
  - office.Office.CustomXmlNode.setXmlAsync
  - office.Office.CustomXmlNode.setXmlAsync_1
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: <span data-ttu-id="57893-118">Obtiene los nodos asociados con la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="57893-118">Gets the nodes associated with the XPath expression.</span></span>
  remarks: <table><tr><td><span data-ttu-id="57893-119">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-119">Requirement Sets</span></span></td><td><span data-ttu-id="57893-120">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-120">CustomXmlParts</span></span></td></tr></table>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync(xPath, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="57893-121">La expresión de XPath que especifica los nodos a obtener.</span><span class="sxs-lookup"><span data-stu-id="57893-121">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="57893-122">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="57893-122">Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="57893-123">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-124">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-124">Optional.</span></span> <span data-ttu-id="57893-125">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-126">El `value` (propiedad) del resultado es una matriz de objetos CustomXmlNode que representan los nodos especificados por la expresión de XPath que se pasan a la `xPath` parámetro.</span><span class="sxs-lookup"><span data-stu-id="57893-126">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodesAsync_1
  summary: <span data-ttu-id="57893-127">Obtiene los nodos asociados con la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="57893-127">Gets the nodes associated with the XPath expression.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-128\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-128\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-129\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-129\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-130\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-130\">Examples</span></span>\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, callback)
  fullName: getNodesAsync(xPath, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="57893-131">La expresión de XPath que especifica los nodos a obtener.</span><span class="sxs-lookup"><span data-stu-id="57893-131">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="57893-132">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="57893-132">Required.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="57893-133">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-133">Optional.</span></span> <span data-ttu-id="57893-134">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-135">El `value` (propiedad) del resultado es una matriz de objetos CustomXmlNode que representan los nodos especificados por la expresión de XPath que se pasan a la `xPath` parámetro.</span><span class="sxs-lookup"><span data-stu-id="57893-135">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: <span data-ttu-id="57893-136">Obtiene el valor del nodo.</span><span class="sxs-lookup"><span data-stu-id="57893-136">Gets the node value.</span></span>
  remarks: <table><tr><td><span data-ttu-id="57893-137">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-137">Requirement Sets</span></span></td><td><span data-ttu-id="57893-138">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-138">CustomXmlParts</span></span></td></tr></table>
  name: getNodeValueAsync(options, callback)
  fullName: getNodeValueAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="57893-139">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-139">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-140">Optional.</span></span> <span data-ttu-id="57893-141">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-141">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-142">El `value` (propiedad) del resultado es una cadena que contiene el valor del nodo que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="57893-142">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync_1
  summary: <span data-ttu-id="57893-143">Obtiene el valor del nodo.</span><span class="sxs-lookup"><span data-stu-id="57893-143">Gets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-144\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-144\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-145\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-145\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-146\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-146\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(callback)
  fullName: getNodeValueAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="57893-147">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-147">Optional.</span></span> <span data-ttu-id="57893-148">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-149">El `value` (propiedad) del resultado es una cadena que contiene el valor del nodo que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="57893-149">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: <span data-ttu-id="57893-150">Obtiene el texto de un nodo XML en un fragmento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="57893-150">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-151\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-151\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-152\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-152\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-153\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-153\">Examples</span></span>\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: getTextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="57893-154">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-154">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-155">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-155">Optional.</span></span> <span data-ttu-id="57893-156">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-156">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-157">El `value` (propiedad) del resultado es una cadena que contiene el texto interno de los nodos que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="57893-157">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync_1
  summary: <span data-ttu-id="57893-158">Obtiene el texto de un nodo XML en un fragmento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="57893-158">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: <table><tr><td><span data-ttu-id="57893-159">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-159">Requirement Sets</span></span></td><td><span data-ttu-id="57893-160">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-160">CustomXmlParts</span></span></td></tr></table>
  name: getTextAsync(callback)
  fullName: getTextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="57893-161">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-161">Optional.</span></span> <span data-ttu-id="57893-162">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-163">El `value` (propiedad) del resultado es una cadena que contiene el texto interno de los nodos que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="57893-163">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: <span data-ttu-id="57893-164">Obtiene el XML del nodo.</span><span class="sxs-lookup"><span data-stu-id="57893-164">Gets the node's XML.</span></span>
  remarks: <table><tr><td><span data-ttu-id="57893-165">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-165">Requirement Sets</span></span></td><td><span data-ttu-id="57893-166">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-166">CustomXmlParts</span></span></td></tr></table>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="57893-167">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-168">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-168">Optional.</span></span> <span data-ttu-id="57893-169">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-170">El `value` (propiedad) del resultado es una cadena que contiene el XML del nodo que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="57893-170">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync_1
  summary: <span data-ttu-id="57893-171">Obtiene el XML del nodo.</span><span class="sxs-lookup"><span data-stu-id="57893-171">Gets the node's XML.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-172\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-172\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-173\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-173\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-174\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-174\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(callback)
  fullName: getXmlAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="57893-175">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-175">Optional.</span></span> <span data-ttu-id="57893-176">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-176">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="57893-177">El `value` (propiedad) del resultado es una cadena que contiene el XML del nodo que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="57893-177">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: <span data-ttu-id="57893-178">Establece el valor del nodo.</span><span class="sxs-lookup"><span data-stu-id="57893-178">Sets the node value.</span></span>
  remarks: <table><tr><td><span data-ttu-id="57893-179">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-179">Requirement Sets</span></span></td><td><span data-ttu-id="57893-180">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-180">CustomXmlParts</span></span></td></tr></table>
  name: setNodeValueAsync(value, options, callback)
  fullName: setNodeValueAsync(value, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="57893-181">El valor que se establecerá en el nodo</span><span class="sxs-lookup"><span data-stu-id="57893-181">The value to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="57893-182">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-182">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-183">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-183">Optional.</span></span> <span data-ttu-id="57893-184">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-184">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync_1
  summary: <span data-ttu-id="57893-185">Establece el valor del nodo.</span><span class="sxs-lookup"><span data-stu-id="57893-185">Sets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-186\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-186\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-187\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-187\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-188\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-188\">Examples</span></span>\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, callback)
  fullName: setNodeValueAsync(value, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="57893-189">El valor que se establecerá en el nodo</span><span class="sxs-lookup"><span data-stu-id="57893-189">The value to be set on the node</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="57893-190">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-190">Optional.</span></span> <span data-ttu-id="57893-191">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-191">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: <span data-ttu-id="57893-192">Define el texto de un nodo XML de forma asincrónica en un elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="57893-192">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-193\">Hosts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-193\">Hosts</span></span></td><td><span data-ttu-id=\"57893-194\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-194\">Word</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"57893-195\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-195\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-196\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-196\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-197\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-197\">Examples</span></span>\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: setTextAsync(text, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="57893-p114">Necesario. El valor de texto del nodo XML.</span><span class="sxs-lookup"><span data-stu-id="57893-p114">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="57893-200">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-200">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-201">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-201">Optional.</span></span> <span data-ttu-id="57893-202">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-202">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync_1
  summary: <span data-ttu-id="57893-203">Define el texto de un nodo XML de forma asincrónica en un elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="57893-203">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="57893-204">Hosts</span><span class="sxs-lookup"><span data-stu-id="57893-204">Hosts</span></span></td><td><span data-ttu-id="57893-205">Word</span><span class="sxs-lookup"><span data-stu-id="57893-205">Word</span></span></td></tr>


    <tr><td><span data-ttu-id="57893-206">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-206">Requirement Sets</span></span></td><td><span data-ttu-id="57893-207">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-207">CustomXmlParts</span></span></td></tr></table>
  name: setTextAsync(text, callback)
  fullName: setTextAsync(text, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="57893-p116">Necesario. El valor de texto del nodo XML.</span><span class="sxs-lookup"><span data-stu-id="57893-p116">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="57893-210">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-210">Optional.</span></span> <span data-ttu-id="57893-211">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-211">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: <span data-ttu-id="57893-212">Establece el nodo XML.</span><span class="sxs-lookup"><span data-stu-id="57893-212">Sets the node XML.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="57893-213">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-213">Requirement Sets</span></span></td><td><span data-ttu-id="57893-214">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-214">CustomXmlParts</span></span></td></tr></table>

    #### <span data-ttu-id="57893-215">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="57893-215">Examples</span></span>


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: setXmlAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="57893-216">El código XML que se establecerá en el nodo</span><span class="sxs-lookup"><span data-stu-id="57893-216">The XML to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="57893-217">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="57893-217">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="57893-218">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-218">Optional.</span></span> <span data-ttu-id="57893-219">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-219">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync_1
  summary: <span data-ttu-id="57893-220">Establece el nodo XML.</span><span class="sxs-lookup"><span data-stu-id="57893-220">Sets the node XML.</span></span>
  remarks: <table><tr><td><span data-ttu-id="57893-221">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="57893-221">Requirement Sets</span></span></td><td><span data-ttu-id="57893-222">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="57893-222">CustomXmlParts</span></span></td></tr></table>
  name: setXmlAsync(xml, callback)
  fullName: setXmlAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="57893-223">El código XML que se establecerá en el nodo</span><span class="sxs-lookup"><span data-stu-id="57893-223">The XML to be set on the node</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="57893-224">Opcional.</span><span class="sxs-lookup"><span data-stu-id="57893-224">Optional.</span></span> <span data-ttu-id="57893-225">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="57893-225">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.baseName
  summary: <span data-ttu-id="57893-226">Obtiene el nombre base del nodo sin el prefijo de espacio de nombres, si existe alguno.</span><span class="sxs-lookup"><span data-stu-id="57893-226">Gets the base name of the node without the namespace prefix, if one exists.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-227\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-227\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-228\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-228\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-229\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-229\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: <span data-ttu-id="57893-230">Recupera el GUID de cadena de CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="57893-230">Retrieves the string GUID of the CustomXMLPart.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-231\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-231\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-232\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-232\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-233\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-233\">Examples</span></span>\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: <span data-ttu-id="57893-234">Obtiene el tipo de CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="57893-234">Gets the type of the CustomXMLNode.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"57893-235\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-235\">Requirement Sets</span></span></td><td><span data-ttu-id=\"57893-236\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-236\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"57893-237\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"57893-237\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
