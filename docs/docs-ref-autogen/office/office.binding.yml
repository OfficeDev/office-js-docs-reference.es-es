### YamlMime:UniversalReference
ms.openlocfilehash: b1d044de456112bc072c377636742d04c9b51e84
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458050"
items:
- uid: office.Office.Binding
  summary: <span data-ttu-id="7f2e2-101">Representa un enlace a una sección del documento.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-101">Represents a binding to a section of the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="7f2e2-102">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="7f2e2-102">Requirement Sets</span></span></td><td><span data-ttu-id="7f2e2-103">MatrixBinding, TableBinding, TextBinding</span><span class="sxs-lookup"><span data-stu-id="7f2e2-103">MatrixBinding, TableBinding, TextBinding</span></span></td></tr></table>


    <span data-ttu-id="7f2e2-104">El objeto Binding expone la funcionalidad que poseen todos los enlaces, independientemente del tipo.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-104">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>


    <span data-ttu-id="7f2e2-105">Nunca se llama directamente al objeto de enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-105">The Binding object is never called directly.</span></span> <span data-ttu-id="7f2e2-106">Es la clase primaria abstracta de los objetos que representan cada tipo de enlace: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, o [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-106">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, or [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span></span> <span data-ttu-id="7f2e2-107">Las tres de estos objetos heredan el getDataAsync y setDataAsync métodos desde el objeto de enlace que permiten a los interactúan con los datos del enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-107">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="7f2e2-108">También se heredan las propiedades id y tipo para consultar dichos valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-108">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="7f2e2-109">Además, los objetos MatrixBinding y TableBinding exponen métodos adicionales para características específicas de matriz y tabla, como recuento del número de filas y columnas.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-109">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>


    <span data-ttu-id="7f2e2-110">**Detalles de compatibilidad**</span><span class="sxs-lookup"><span data-stu-id="7f2e2-110">**Support details**</span></span>


    <span data-ttu-id="7f2e2-111">Una letra mayúscula Y en la siguiente matriz indica que esta interfaz es compatible con la aplicación host de Office correspondiente.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-111">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="7f2e2-112">Una celda vacía indica que la aplicación host de Office no admite esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-112">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="7f2e2-113">Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-113">For more information about Office host application and server requirements, see [ Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="7f2e2-114">*Hosts compatibles, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="7f2e2-114">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="7f2e2-115">Office para escritorio de Windows</span><span class="sxs-lookup"><span data-stu-id="7f2e2-115">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="7f2e2-116">Office Online (en el explorador)</span><span class="sxs-lookup"><span data-stu-id="7f2e2-116">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="7f2e2-117">Office para iPad</span><span class="sxs-lookup"><span data-stu-id="7f2e2-117">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id="7f2e2-118"><strong>Access</strong></span><span class="sxs-lookup"><span data-stu-id="7f2e2-118"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="7f2e2-119">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-119">Y</span></span> </td><td> </td></tr> <tr><td><span data-ttu-id="7f2e2-120"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="7f2e2-120"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="7f2e2-121">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-121">Y</span></span> </td><td> <span data-ttu-id="7f2e2-122">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-122">Y</span></span> </td><td> <span data-ttu-id="7f2e2-123">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-123">Y</span></span> </td></tr> <tr><td><span data-ttu-id="7f2e2-124"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="7f2e2-124"><strong> Word </strong></span></span></td><td> <span data-ttu-id="7f2e2-125">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-125">Y</span></span> </td><td> <span data-ttu-id="7f2e2-126">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-126">Y</span></span> </td><td> <span data-ttu-id="7f2e2-127">v</span><span class="sxs-lookup"><span data-stu-id="7f2e2-127">Y</span></span> </td></tr> </table>
  name: Office.Binding
  fullName: office.Office.Binding
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Binding.addHandlerAsync
  - office.Office.Binding.document
  - office.Office.Binding.getDataAsync
  - office.Office.Binding.id
  - office.Office.Binding.removeHandlerAsync
  - office.Office.Binding.setDataAsync
  - office.Office.Binding.type
- uid: office.Office.Binding.addHandlerAsync
  summary: <span data-ttu-id="7f2e2-128">Agrega un controlador de eventos para el objeto para el especificado [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-128">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="7f2e2-129">Debe establecer admitidos es `Office.EventType.BindingDataChanged` y `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-129">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: "<span data-ttu-id=\"7f2e2-130\">Puede agregar varios controladores de eventos del elemento EventType especificado siempre y cuando el nombre de cada función de controlador de eventos es único.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-130\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"7f2e2-131\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-131\">Examples</span></span>\n\n```javascript\n// The following code sample calls the select method of the Office object to access the binding\n// with ID \"MyBinding\", and then calls the addHandlerAsync method to add a handler function \n// for the bindingDataChanged event of that binding.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingDataChanged, onBindingDataChanged);\n}\n\nfunction onBindingDataChanged(eventArgs) {\n    write(\"Data has changed in binding: \" + eventArgs.binding.id);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To add an event handler for the BindingSelectionChanged event of a binding, \n// use the addHandlerAsync method of the Binding object.\n// The event handler receives an argument of type BindingSelectionChangedEventArgs.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);\n}\n\nfunction onBindingSelectionChanged(eventArgs) {\n    write(eventArgs.binding.id + \" has been selected.\");\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: office.Office.Binding.addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="7f2e2-132">El tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-132">The event type.</span></span> <span data-ttu-id="7f2e2-133">Para los enlaces, puede ser `Office.EventType.BindingDataChanged` o `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-133">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="7f2e2-134">La función de controlador de eventos para agregar, cuyo único parámetro es del tipo [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) o [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-134">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="7f2e2-135">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7f2e2-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-136">Optional.</span></span> <span data-ttu-id="7f2e2-137">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.document
  summary: <span data-ttu-id="7f2e2-138">Obtener el objeto Document asociado con el enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-138">Get the Document object associated with the binding.</span></span>
  name: document
  fullName: office.Office.Binding.document
  langs:
  - typeScript
  type: property
  syntax:
    content: 'document: Office.Document;'
    return:
      type:
      - office.Office.Document
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7f2e2-139\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-139\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.document.url);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.getDataAsync
  summary: <span data-ttu-id="7f2e2-140">Devuelve los datos que contiene el enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-140">Returns the data contained within the binding.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7f2e2-141\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-141\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7f2e2-142\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-142\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"7f2e2-143\">Cuando se llame desde MatrixBinding o TableBinding, el método getDataAsync devolverá un subconjunto de los valores enlazados Si se especifican los parámetros opcionales startRow, startColumn, rowCount y columnCount (y especifican un intervalo válido y contiguo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-143\">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"7f2e2-144\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-144\">Examples</span></span>\n\n```javascript\nfunction showBindingData() {\n    Office.select(\"bindings#MyBinding\").getDataAsync(function (asyncResult) {\n        write(asyncResult.value)\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// There is an important difference in behavior between using the \"table\" and \"matrix\" coercionType with the\n// Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following\n// two examples. These code examples show event handler functions for the Binding.SelectionChanged event.\n\n// If you specify the \"table\" coercionType, the TableData.rows property ( result.value.rows in the following\n// code example) returns an array that contains only the body rows of the table. So, its 0th row will be the\n// first non-header row in the table.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'table', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value.rows[0][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n\n// However, if you specify the \"matrix\" coercionType, result.value in the following code example returns an array\n// that contains the table header in the 0th row. If the table header contains multiple rows, then these are all\n// included in the result.value matrix as separate rows before the table body rows are included.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'matrix', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value[1][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n```"
  name: getDataAsync(options, callback)
  fullName: office.Office.Binding.getDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="7f2e2-145">Proporciona opciones obtener los datos en un enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-145">Provides options for how to get the data in a binding.</span></span>
      type:
      - office.Office.GetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="7f2e2-146">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-146">Optional.</span></span> <span data-ttu-id="7f2e2-147">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-147">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7f2e2-148">El `value` propiedad del resultado es que los valores en el enlace especificado.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-148">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="7f2e2-149">Si el `coercionType` se especifica el parámetro (y la llamada es satisfactoria), se devuelven los datos en el formato descrito en el tema de la enumeración CoercionType.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-149">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.id
  summary: <span data-ttu-id="7f2e2-150">Una cadena que identifica de forma exclusiva este enlace entre los enlaces en el mismo objeto [Office.Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="7f2e2-150">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>
  name: id
  fullName: office.Office.Binding.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7f2e2-151\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-151\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.id);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.removeHandlerAsync
  summary: <span data-ttu-id="7f2e2-152">Quita del enlace el controlador que se especifica para el tipo de evento determinado.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-152">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="7f2e2-153">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="7f2e2-153">Requirement Sets</span></span></td><td><span data-ttu-id="7f2e2-154">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="7f2e2-154">BindingEvents</span></span></td></tr></table>

    #### <span data-ttu-id="7f2e2-155">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="7f2e2-155">Examples</span></span>


    ```javascript

    function removeEventHandlerFromBinding() {
        Office.select("bindings#MyBinding").removeHandlerAsync(
            Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
    }

    ```
  name: removeHandlerAsync(eventType, options, callback)
  fullName: office.Office.Binding.removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="7f2e2-156">El tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-156">The event type.</span></span> <span data-ttu-id="7f2e2-157">Para los enlaces, puede ser `Office.EventType.BindingDataChanged` o `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-157">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="7f2e2-158">Proporciona opciones para determinar qué controlador de eventos o controladores que se han quitado.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-158">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="7f2e2-159">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-159">Optional.</span></span> <span data-ttu-id="7f2e2-160">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync
  summary: <span data-ttu-id="7f2e2-161">Escribe datos en la sección enlazada del documento que representa el objeto de enlace que se ha especificado.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-161">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"7f2e2-162\">Conjuntos de requisitos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-162\">Requirement Sets</span></span></td><td><span data-ttu-id=\"7f2e2-163\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-163\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"7f2e2-164\">El valor que se pasa para datos contiene los datos que se escriben en el enlace.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-164\">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id=\"7f2e2-165\">El tipo de valor que se pasa determina qué se escribirá tal como se describe en la siguiente tabla.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-165\">The kind of value passed determines what will be written as described in the following table.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"7f2e2-166\">`data`valor</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-166\">`data` value</span></span></th> <th><span data-ttu-id=\"7f2e2-167\">Datos escritos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-167\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"7f2e2-168\">Una cadena</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-168\">A string</span></span></td> <td><span data-ttu-id=\"7f2e2-169\">Se escribirá texto sin formato o cualquier elemento que se pueda convertir en una cadena.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-169\">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-170\">Una matriz de matrices (\"matriz\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-170\">An array of arrays (\"matrix\")</span></span></td> <td><span data-ttu-id=\"7f2e2-171\">Se escribirán datos tabulares sin encabezados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-171\">Tabular data without headers will be written.</span></span> <span data-ttu-id=\"7f2e2-172\">Por ejemplo, para escribir datos en tres filas de dos columnas, puede pasar una matriz como esta: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-172\">For example, to write data to three rows in two columns, you can pass an array like this: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]`<!-- -->.</span></span> <span data-ttu-id=\"7f2e2-173\">Para escribir una sola columna de tres filas, pase una matriz como esta: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-173\">To write a single column of three rows, pass an array like this: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-174\">Un objeto [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-174\">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"7f2e2-175\">Se escribirá una tabla con encabezados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-175\">A table with headers will be written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"7f2e2-176\">Estas acciones específicas de aplicaciones también se pueden realizar al escribir datos en un enlace.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-176\">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id=\"7f2e2-177\">Para Word, se escriben los datos especificados en el enlace del siguiente modo:</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-177\">For Word, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"7f2e2-178\">`data`valor</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-178\">`data` value</span></span></th> <th><span data-ttu-id=\"7f2e2-179\">Datos escritos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-179\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"7f2e2-180\">Una cadena</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-180\">A string</span></span></td> <td><span data-ttu-id=\"7f2e2-181\">Se escribe el texto que se ha especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-181\">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-182\">Una matriz de matrices (\"matrix\") o un objeto [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-182\">An array of arrays (\"matrix\") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"7f2e2-183\">Se escribe una tabla de Word.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-183\">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-184\">HTML</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-184\">HTML</span></span></td> <td><span data-ttu-id=\"7f2e2-185\">Se escribe el contenido HTML que se ha especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-185\">The specified HTML is written.</span></span> <span data-ttu-id=\"7f2e2-186\">Si cualquiera de los HTML escribir no es válido, Word no provocará un error.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-186\">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id=\"7f2e2-187\">Word va a escribir como gran parte del código HTML tal y como se puede y se omite los datos no válidos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-187\">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-188\">Office Open XML (\"Open XML\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-188\">Office Open XML (\"Open XML\")</span></span></td> <td><span data-ttu-id=\"7f2e2-189\">Se escribe el contenido XML que se ha especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-189\">The specified the XML is written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"7f2e2-190\">Para Excel, se escriben los datos especificados en el enlace del siguiente modo:</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-190\">For Excel, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"7f2e2-191\">`data`valor</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-191\">`data` value</span></span></th> <th><span data-ttu-id=\"7f2e2-192\">Datos escritos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-192\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"7f2e2-193\">Una cadena</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-193\">A string</span></span></td> <td><span data-ttu-id=\"7f2e2-194\">Se inserta el texto especificado como el valor de la primera celda dependiente. También puede especificar una fórmula válida para agregar esa fórmula a la celda dependiente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-194\">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id=\"7f2e2-195\">Por ejemplo, establecer data a `\"=SUM(A1:A5)\"` totalizará los valores en el rango especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-195\">For example, setting data to `\"=SUM(A1:A5)\"` will total the values in the specified range.</span></span> <span data-ttu-id=\"7f2e2-196\">En cambio, cuando se establece una fórmula en la celda dependiente, después de hacerlo, no se puede leer desde la celda dependiente la fórmula agregada (o cualquier fórmula preexistente).</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-196\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"7f2e2-197\">Si se llama al método Binding.getDataAsync en la celda dependiente para leer sus datos, el método puede devolver únicamente los datos que se muestra en la celda (el resultado de la fórmula).</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-197\">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-198\">Una matriz de matrices (\"matrix\") y la forma coincide exactamente con la forma del enlace que se ha especificado</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-198\">An array of arrays (\"matrix\"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id=\"7f2e2-199\">Se escribe el conjunto de filas y columnas. También puede especificar una matriz de matrices que contienen fórmulas válidas para agregarlos a las celdas dependientes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-199\">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id=\"7f2e2-200\">Por ejemplo, si se establece datos en `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` agregará esas dos fórmulas a un enlace que contiene dos celdas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-200\">For example, setting data to `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id=\"7f2e2-201\">Al igual que cuando se establece una fórmula en una sola celda dependiente, no se puede leer las fórmulas se ha agregado (o las fórmulas existentes) desde el enlace con el `Binding.getDataAsync` método - devuelve sólo los datos que se muestran en las celdas dependientes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-201\">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-202\">Un objeto [Office.TableData](xref:office.Office.TableData) y la forma de la tabla coincide con la tabla enlazada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-202\">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id=\"7f2e2-p115\">Se escribe el conjunto especificado de filas o encabezados si no se van a sobrescribir otros datos de las celdas contiguas. Nota: si especifica fórmulas en el objeto TableData que pasa al parámetro *data*, podría no obtener los resultados que espera debido a la característica \"columnas calculadas\" de Excel, que automáticamente duplica las fórmulas dentro de una columna. Para solucionar esto cuando quiere escribir *data* que contienen fórmulas a una tabla enlazada, pruebe a especificar los datos como una matriz de matrices (en lugar de un objeto TableData) y especifique *coercionType* como Microsoft.Office.Matrix o \"matriz\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-p115\">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten. Note: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column. To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or \"matrix\".</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"7f2e2-206\">Para Excel en línea:</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-206\">For Excel Online:</span></span>\n\n- <span data-ttu-id=\"7f2e2-207\">El número total de celdas en el valor que se pasa para el parámetro de datos no puede superar los 20.000 en una sola llamada a este método.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-207\">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>\n\n- <span data-ttu-id=\"7f2e2-208\">El número de grupos de formato que se pasa al parámetro cellFormat no puede ser superior a 100.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-208\">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id=\"7f2e2-209\">Un grupo de formato único consta de un conjunto de formatos aplicados a un rango de celdas especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-209\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>\n\n<span data-ttu-id=\"7f2e2-210\">En todos los casos restantes, se devolverá un error.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-210\">In all other cases, an error is returned.</span></span>\n\n<span data-ttu-id=\"7f2e2-211\">El método setDataAsync escribirá los datos en un subconjunto de una tabla o un enlace de matriz si se especifican los parámetros opcionales startRow y startColumn, y se especifica un intervalo válido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-211\">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>\n\n<span data-ttu-id=\"7f2e2-212\">En la función de devolución de llamada que se pasa al método setDataAsync, puede usar las propiedades del objeto AsyncResult para devolver la siguiente información.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-212\">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"7f2e2-213\">Propiedad</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-213\">Property</span></span></th> <th><span data-ttu-id=\"7f2e2-214\">Usar para...</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-214\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"7f2e2-215\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-215\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"7f2e2-216\">Siempre devuelve undefined porque no hay ningún objeto o dato que recuperar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-216\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-217\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-217\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"7f2e2-218\">Determinar si la operación se ha completado correctamente o no.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-218\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-219\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-219\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"7f2e2-220\">Tener acceso a un objeto Error que proporcione información sobre el error si la operación no se ha llevado a cabo correctamente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-220\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"7f2e2-221\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-221\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"7f2e2-222\">Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-222\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n#### <span data-ttu-id=\"7f2e2-223\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-223\">Examples</span></span>\n\n```javascript\nfunction setBindingData() {\n    Office.select(\"bindings#MyBinding\").setDataAsync('Hello World!', function (asyncResult) { });\n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.\n// For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter \n// as \"html\" as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: \"html\"}, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In this example, the call to setDataAsync passes the data parameter as an array of arrays\n// (to create a single column of three rows), and specifies the data structure with the \n// coercionType parameter as a \"matrix\".\nfunction writeBoundDataMatrix() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        [['Berlin'],['Munich'],['Duisburg']],{ coercionType: \"matrix\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter \n// as a TableData object (to write three columns and three rows), and specifies the data structure\n// with the coercionType parameter as a \"table\".\n\n// In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,\n// but as a single column with a new header and three rows, to update the values in the last column \n// of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter \n// is specified as 2 to replace the values in the third column of the table.\nfunction writeBoundDataTable() {\n    // Create a TableData object.\n    var myTable = new Office.TableData();\n    myTable.headers = ['First Name', 'Last Name', 'Grade'];\n    myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];\n\n    // Set myTable in the binding.\n    Office.select(\"bindings#myBinding\").setDataAsync(myTable, { coercionType: \"table\" }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n\n// Replace last column with different data.\nfunction updateTableData() {\n    var newTable = new Office.TableData();\n    newTable.headers = [\"Gender\"];\n    newTable.rows = [[\"M\"],[\"M\"],[\"F\"]];\n    Office.select(\"bindings#myBinding\").setDataAsync(newTable, { coercionType: \"table\", startColumn:2 }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }     \n    });   \n}\n\n// In this example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setDataAsync([['Berlin'],['Munich'],['Duisburg']],\n  {cellFormat:[{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n      {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]}, \n  function (asyncResult){});\n```"
  name: setDataAsync(data, options, callback)
  fullName: office.Office.Binding.setDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="7f2e2-224">Los datos que se definirán en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-224">The data to be set in the current selection.</span></span> <span data-ttu-id="7f2e2-225">Tipos de datos posibles por host:</span><span class="sxs-lookup"><span data-stu-id="7f2e2-225">Possible data types by host:</span></span>


        <span data-ttu-id="7f2e2-226">cadena: Excel, en línea de Excel, Word y Word Online solo</span><span class="sxs-lookup"><span data-stu-id="7f2e2-226">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="7f2e2-227">matriz de matrices: Excel y solo en Word</span><span class="sxs-lookup"><span data-stu-id="7f2e2-227">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="7f2e2-228">[Office.TableData](xref:office.Office.TableData)<!-- -->: solo en Word, Excel y Access</span><span class="sxs-lookup"><span data-stu-id="7f2e2-228">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="7f2e2-229">HTML: Word y solo en Word en línea</span><span class="sxs-lookup"><span data-stu-id="7f2e2-229">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="7f2e2-230">Office Open XML: Solo en Word</span><span class="sxs-lookup"><span data-stu-id="7f2e2-230">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: options
      description: <span data-ttu-id="7f2e2-231">Proporciona opciones establecer los datos en un enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-231">Provides options for how to set the data in a binding.</span></span>
      type:
      - office.Office.SetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="7f2e2-232">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-232">Optional.</span></span> <span data-ttu-id="7f2e2-233">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-233">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.type
  summary: <span data-ttu-id="7f2e2-234">Obtiene el tipo del enlace.</span><span class="sxs-lookup"><span data-stu-id="7f2e2-234">Gets the type of the binding.</span></span>
  name: type
  fullName: office.Office.Binding.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type: Office.BindingType;'
    return:
      type:
      - Office.BindingType
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7f2e2-235\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7f2e2-235\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(asyncResult.value.type); \n}) \n\n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
