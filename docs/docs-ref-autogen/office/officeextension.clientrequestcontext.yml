### YamlMime:UniversalReference
items:
  - uid: office.OfficeExtension.ClientRequestContext
    summary: <span data-ttu-id="c6edf-101">Un objeto RequestContext abstracto que facilita las solicitudes a la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="c6edf-101">An abstract RequestContext object that facilitates requests to the host Office application.</span></span> <span data-ttu-id="c6edf-102">Los `Excel.run` métodos `Word.run` y proporcionan un contexto de solicitud.</span><span class="sxs-lookup"><span data-stu-id="c6edf-102">The `Excel.run` and `Word.run` methods provide a request context.</span></span>
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.OfficeExtension.ClientRequestContext.(constructor)
      - office.OfficeExtension.ClientRequestContext.debugInfo
      - office.OfficeExtension.ClientRequestContext.load
      - office.OfficeExtension.ClientRequestContext.loadRecursive
      - office.OfficeExtension.ClientRequestContext.requestHeaders
      - office.OfficeExtension.ClientRequestContext.sync
      - office.OfficeExtension.ClientRequestContext.trace
      - office.OfficeExtension.ClientRequestContext.trackedObjects
  - uid: office.OfficeExtension.ClientRequestContext.(constructor)
    summary: <span data-ttu-id="c6edf-103">Construye una nueva instancia de la `ClientRequestContext` clase.</span><span class="sxs-lookup"><span data-stu-id="c6edf-103">Constructs a new instance of the `ClientRequestContext` class</span></span>
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.debugInfo
    summary: <span data-ttu-id="c6edf-104">Información de depuración</span><span class="sxs-lookup"><span data-stu-id="c6edf-104">Debug information</span></span>
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - office.OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.ClientRequestContext.load
    summary: <span data-ttu-id="c6edf-105">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c6edf-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6edf-106">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c6edf-106">You must call `context.sync()` before reading the properties.</span></span>
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: <span data-ttu-id="c6edf-107">Objeto cuyas propiedades se cargan.</span><span class="sxs-lookup"><span data-stu-id="c6edf-107">The object whose properties are loaded.</span></span>
          type:
            - office.OfficeExtension.ClientObject
        - id: option
          description: '<span data-ttu-id="c6edf-108">Cadena delimitada por comas, o matriz de cadenas, que especifica las propiedades que se van a cargar o un objeto [objeto officeextension. LoadOption](xref:office.OfficeExtension.LoadOption) .</span><span class="sxs-lookup"><span data-stu-id="c6edf-108">A comma-delimited string, or array of strings, that specifies the properties to load, or an [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) object.</span></span>'
          type:
            - 'string | string[] | LoadOption'
  - uid: office.OfficeExtension.ClientRequestContext.loadRecursive
    summary: |-
      <span data-ttu-id="c6edf-109">Pone en cola un comando para cargar de forma recursiva las propiedades especificadas del objeto y sus propiedades de navegación.</span><span class="sxs-lookup"><span data-stu-id="c6edf-109">Queues up a command to recursively load the specified properties of the object and its navigation properties.</span></span>

      <span data-ttu-id="c6edf-110">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c6edf-110">You must call `context.sync()` before reading the properties.</span></span>
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: <span data-ttu-id="c6edf-111">Objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="c6edf-111">The object to be loaded.</span></span>
          type:
            - office.OfficeExtension.ClientObject
        - id: options
          description: '<span data-ttu-id="c6edf-112">El emparejamiento clave-valor de las opciones de carga para los tipos, como`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span><span class="sxs-lookup"><span data-stu-id="c6edf-112">The key-value pairing of load options for the types, such as `{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span></span>'
          type:
            - '{ [typeName: string]: string | string[] | LoadOption }'
        - id: maxDepth
          description: <span data-ttu-id="c6edf-113">Profundidad máxima recursiva.</span><span class="sxs-lookup"><span data-stu-id="c6edf-113">The maximum recursive depth.</span></span>
          type:
            - number
  - uid: office.OfficeExtension.ClientRequestContext.requestHeaders
    summary: <span data-ttu-id="c6edf-114">Encabezados de solicitud</span><span class="sxs-lookup"><span data-stu-id="c6edf-114">Request headers</span></span>
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: office.OfficeExtension.ClientRequestContext.sync
    summary: '<span data-ttu-id="c6edf-115">Sincroniza el estado entre los objetos proxy de JavaScript y el documento de Office mediante la ejecución de instrucciones en cola en el contexto de la solicitud y la recuperación de propiedades de objetos de Office cargados para su uso en el código.</span><span class="sxs-lookup"><span data-stu-id="c6edf-115">Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code.</span></span> <span data-ttu-id="c6edf-116">Este método devuelve una promesa, que se resuelve cuando se completa la sincronización.</span><span class="sxs-lookup"><span data-stu-id="c6edf-116">This method returns a promise, which is resolved when the synchronization is complete.</span></span>'
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
      typeParameters:
        - id: T
  - uid: office.OfficeExtension.ClientRequestContext.trace
    summary: '<span data-ttu-id="c6edf-117">Agrega un mensaje de seguimiento a la cola.</span><span class="sxs-lookup"><span data-stu-id="c6edf-117">Adds a trace message to the queue.</span></span> <span data-ttu-id="c6edf-118">Si la promesa devuelta `context.sync()` por se rechaza debido a un error, se agrega una matriz ". traceMessages" al objeto objeto officeextension. error, que contiene todos los mensajes de seguimiento que se ejecutaron.</span><span class="sxs-lookup"><span data-stu-id="c6edf-118">If the promise returned by `context.sync()` is rejected due to an error, this adds a ".traceMessages" array to the OfficeExtension.Error object, containing all trace messages that were executed.</span></span> <span data-ttu-id="c6edf-119">Estos mensajes pueden ayudarle a supervisar la secuencia de ejecución del programa y detectar la causa del error.</span><span class="sxs-lookup"><span data-stu-id="c6edf-119">These messages can help you monitor the program execution sequence and detect the cause of the error.</span></span>'
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.trackedObjects
    summary: <span data-ttu-id="c6edf-120">Colección de objetos de los que se realiza un seguimiento para los ajustes automáticos en función de los cambios circundantes en el documento.</span><span class="sxs-lookup"><span data-stu-id="c6edf-120">Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document.</span></span>
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - office.OfficeExtension.TrackedObjects