### YamlMime:UniversalReference
ms.openlocfilehash: e19e206ee7cf1bf95dde3bd06e6d84c8ff29834c
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977459"
items:
- uid: office.OfficeExtension.ClientRequestContext
  summary: <span data-ttu-id="3918d-101">Un objeto RequestContext abstracto que facilita las solicitudes para el host de aplicación de Office.</span><span class="sxs-lookup"><span data-stu-id="3918d-101">An abstract RequestContext object that facilitates requests to the host Office application.</span></span> <span data-ttu-id="3918d-102">El `Excel.run` y `Word.run` métodos proporcionan un contexto de solicitud.</span><span class="sxs-lookup"><span data-stu-id="3918d-102">The `Excel.run` and `Word.run` methods provide a request context.</span></span>
  name: OfficeExtension.ClientRequestContext
  fullName: OfficeExtension.ClientRequestContext
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.ClientRequestContext.(constructor)
  - office.OfficeExtension.ClientRequestContext.debugInfo
  - office.OfficeExtension.ClientRequestContext.load
  - office.OfficeExtension.ClientRequestContext.loadRecursive
  - office.OfficeExtension.ClientRequestContext.requestHeaders
  - office.OfficeExtension.ClientRequestContext.sync
  - office.OfficeExtension.ClientRequestContext.trace
  - office.OfficeExtension.ClientRequestContext.trackedObjects
- uid: office.OfficeExtension.ClientRequestContext.(constructor)
  name: (constructor)(url)
  fullName: (constructor)(url)
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(url?: string);'
    parameters:
    - id: url
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.debugInfo
  summary: <span data-ttu-id="3918d-103">Información de depuración</span><span class="sxs-lookup"><span data-stu-id="3918d-103">Debug information</span></span>
  name: debugInfo
  fullName: debugInfo
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly debugInfo: RequestContextDebugInfo;'
    return:
      type:
      - office.OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.ClientRequestContext.load
  summary: <span data-ttu-id="3918d-104">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="3918d-104">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3918d-105">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3918d-105">You must call `context.sync()` before reading the properties.</span></span>
  name: load(object, option)
  fullName: load(object, option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: <span data-ttu-id="3918d-106">El objeto cuyas propiedades se cargan.</span><span class="sxs-lookup"><span data-stu-id="3918d-106">The object whose properties are loaded.</span></span>
      type:
      - office.OfficeExtension.ClientObject
    - id: option
      description: <span data-ttu-id="3918d-107">Una cadena delimitada por comas, o una matriz de cadenas, que especifica las propiedades para cargar, o un objeto [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) .</span><span class="sxs-lookup"><span data-stu-id="3918d-107">A comma-delimited string, or array of strings, that specifies the properties to load, or an [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) object.</span></span>
      type:
      - string | string[] | LoadOption
- uid: office.OfficeExtension.ClientRequestContext.loadRecursive
  summary: >-
    <span data-ttu-id="3918d-108">Las colas de un comando a de forma recursiva cargar las propiedades del objeto especificadas y sus propiedades de navegación.</span><span class="sxs-lookup"><span data-stu-id="3918d-108">Queues up a command to recursively load the specified properties of the object and its navigation properties.</span></span>


    <span data-ttu-id="3918d-109">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3918d-109">You must call `context.sync()` before reading the properties.</span></span>
  name: loadRecursive(object, options, maxDepth)
  fullName: loadRecursive(object, options, maxDepth)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: <span data-ttu-id="3918d-110">El objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="3918d-110">The object to be loaded.</span></span>
      type:
      - office.OfficeExtension.ClientObject
    - id: options
      description: '<span data-ttu-id="3918d-111">El emparejamiento de clave y valor de las opciones de carga para los tipos, como`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span><span class="sxs-lookup"><span data-stu-id="3918d-111">The key-value pairing of load options for the types, such as `{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span></span>'
      type:
      - '{ [typeName: string]: string | string[] | LoadOption }'
    - id: maxDepth
      description: <span data-ttu-id="3918d-112">La profundidad máxima recursiva.</span><span class="sxs-lookup"><span data-stu-id="3918d-112">The maximum recursive depth.</span></span>
      type:
      - number
- uid: office.OfficeExtension.ClientRequestContext.requestHeaders
  summary: <span data-ttu-id="3918d-113">Encabezados de solicitud</span><span class="sxs-lookup"><span data-stu-id="3918d-113">Request headers</span></span>
  name: requestHeaders
  fullName: requestHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requestHeaders: { [name: string]: string };'
    return:
      type:
      - '{ [name: string]: string }'
- uid: office.OfficeExtension.ClientRequestContext.sync
  summary: <span data-ttu-id="3918d-114">Sincroniza el estado entre objetos de servidor proxy de JavaScript y el documento, mediante la ejecución de instrucciones en cola en el contexto de solicitud de Office y recuperación de propiedades de los objetos de Office cargados para su uso en el código.</span><span class="sxs-lookup"><span data-stu-id="3918d-114">Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code.</span></span> <span data-ttu-id="3918d-115">Este método devuelve una promesa, que se resuelve una vez finalizada la sincronización.</span><span class="sxs-lookup"><span data-stu-id="3918d-115">This method returns a promise, which is resolved when the synchronization is complete.</span></span>
  name: sync(passThroughValue)
  fullName: sync(passThroughValue)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sync<T>(passThroughValue?: T): Promise<T>;'
    return:
      type:
      - Promise<T>
      description: ''
    parameters:
    - id: passThroughValue
      description: ''
      type:
      - T
- uid: office.OfficeExtension.ClientRequestContext.trace
  summary: <span data-ttu-id="3918d-116">Agrega un mensaje de seguimiento a la cola.</span><span class="sxs-lookup"><span data-stu-id="3918d-116">Adds a trace message to the queue.</span></span> <span data-ttu-id="3918d-117">Si la promesa devuelto por `context.sync()` se rechaza debido a un error, se agrega una matriz de ".traceMessages" para el objeto OfficeExtension.Error, que contiene todos los mensajes de seguimiento que se han ejecutado.</span><span class="sxs-lookup"><span data-stu-id="3918d-117">If the promise returned by `context.sync()` is rejected due to an error, this adds a ".traceMessages" array to the OfficeExtension.Error object, containing all trace messages that were executed.</span></span> <span data-ttu-id="3918d-118">Estos mensajes pueden ayudarle a supervisar la secuencia de ejecución del programa y detectar la causa del error.</span><span class="sxs-lookup"><span data-stu-id="3918d-118">These messages can help you monitor the program execution sequence and detect the cause of the error.</span></span>
  name: trace(message)
  fullName: trace(message)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'trace(message: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.trackedObjects
  summary: <span data-ttu-id="3918d-119">Colección de objetos que se realiza un seguimiento para el ajuste automático en función de que lo rodea los cambios en el documento.</span><span class="sxs-lookup"><span data-stu-id="3918d-119">Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document.</span></span>
  name: trackedObjects
  fullName: trackedObjects
  langs:
  - typeScript
  type: property
  syntax:
    content: 'trackedObjects: TrackedObjects;'
    return:
      type:
      - office.OfficeExtension.TrackedObjects
