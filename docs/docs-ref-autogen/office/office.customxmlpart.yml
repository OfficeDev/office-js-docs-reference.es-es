### YamlMime:UniversalReference
ms.openlocfilehash: 2662ea466e74eb9588f3634d32a2cba1acd1c49b
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977247"
items:
- uid: office.Office.CustomXmlPart
  summary: <span data-ttu-id="ab37a-101">Representa un CustomXMLPart único en una colección de [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) .</span><span class="sxs-lookup"><span data-stu-id="ab37a-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="ab37a-102">Conjuntos de requisitos</span><span class="sxs-lookup"><span data-stu-id="ab37a-102">Requirement Sets</span></span></td><td><span data-ttu-id="ab37a-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="ab37a-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="ab37a-104">**Detalles de compatibilidad**</span><span class="sxs-lookup"><span data-stu-id="ab37a-104">**Support details**</span></span>


    <span data-ttu-id="ab37a-105">Una letra mayúscula Y en la siguiente matriz indica que esta interfaz es compatible con la aplicación host de Office correspondiente.</span><span class="sxs-lookup"><span data-stu-id="ab37a-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="ab37a-106">Una celda vacía indica que la aplicación host de Office no admite esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="ab37a-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="ab37a-107">Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="ab37a-108">*Hosts compatibles, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="ab37a-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="ab37a-109">Office para escritorio de Windows</span><span class="sxs-lookup"><span data-stu-id="ab37a-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="ab37a-110">Office Online (en el explorador)</span><span class="sxs-lookup"><span data-stu-id="ab37a-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="ab37a-111">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="ab37a-111">Office for iPad</span></span> </th><th> <span data-ttu-id="ab37a-112">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="ab37a-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="ab37a-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="ab37a-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="ab37a-114">v</span><span class="sxs-lookup"><span data-stu-id="ab37a-114">Y</span></span> </td><td> <span data-ttu-id="ab37a-115">v</span><span class="sxs-lookup"><span data-stu-id="ab37a-115">Y</span></span> </td><td> <span data-ttu-id="ab37a-116">v</span><span class="sxs-lookup"><span data-stu-id="ab37a-116">Y</span></span> </td><td> <span data-ttu-id="ab37a-117">v</span><span class="sxs-lookup"><span data-stu-id="ab37a-117">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlPart
  fullName: Office.CustomXmlPart
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlPart.addHandlerAsync
  - office.Office.CustomXmlPart.addHandlerAsync_1
  - office.Office.CustomXmlPart.deleteAsync
  - office.Office.CustomXmlPart.deleteAsync_1
  - office.Office.CustomXmlPart.getNodesAsync
  - office.Office.CustomXmlPart.getNodesAsync_1
  - office.Office.CustomXmlPart.getXmlAsync
  - office.Office.CustomXmlPart.getXmlAsync_1
  - office.Office.CustomXmlPart.removeHandlerAsync
  - office.Office.CustomXmlPart.removeHandlerAsync_1
  - office.Office.CustomXmlPart.builtIn
  - office.Office.CustomXmlPart.id
  - office.Office.CustomXmlPart.namespaceManager
- uid: office.Office.CustomXmlPart.addHandlerAsync
  summary: <span data-ttu-id="ab37a-118">Agrega un controlador de eventos para el objeto con el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-118">Adds an event handler to the object using the specified event type.</span></span>
  remarks: <span data-ttu-id="ab37a-119">Puede agregar varios controladores de eventos del elemento EventType especificado siempre y cuando el nombre de cada función de controlador de eventos es único.</span><span class="sxs-lookup"><span data-stu-id="ab37a-119">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="ab37a-120">Especifica el tipo de evento que desea agregar.</span><span class="sxs-lookup"><span data-stu-id="ab37a-120">Specifies the type of event to add.</span></span> <span data-ttu-id="ab37a-121">Para un objeto CustomXmlPart, se puede especificar el parámetro eventType como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, y `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-121">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="ab37a-122">La función de controlador de eventos para agregar, cuyo único parámetro es del tipo [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, o [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="ab37a-122">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>
      type:
      - '(result: any) => void'
    - id: options
      description: <span data-ttu-id="ab37a-123">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="ab37a-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="ab37a-124">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-124">Optional.</span></span> <span data-ttu-id="ab37a-125">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.addHandlerAsync_1
  summary: <span data-ttu-id="ab37a-126">Agrega un controlador de eventos para el objeto con el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-126">Adds an event handler to the object using the specified event type.</span></span>
  remarks: >-
    <span data-ttu-id="ab37a-127">Puede agregar varios controladores de eventos del elemento EventType especificado siempre y cuando el nombre de cada función de controlador de eventos es único.</span><span class="sxs-lookup"><span data-stu-id="ab37a-127">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

    #### <a name="examples"></a><span data-ttu-id="ab37a-128">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="ab37a-128">Examples</span></span>


    ```javascript

    // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeDeletedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                write("A node has been deleted.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```

    ```javascript

    // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeInsertedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                write("A node has been inserted.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```

    ```javascript

    // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeReplacedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                write("A node has been replaced.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="ab37a-129">Especifica el tipo de evento que desea agregar.</span><span class="sxs-lookup"><span data-stu-id="ab37a-129">Specifies the type of event to add.</span></span> <span data-ttu-id="ab37a-130">Para un objeto CustomXmlPart, se puede especificar el parámetro eventType como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, y `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-130">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="ab37a-131">La función de controlador de eventos para agregar, cuyo único parámetro es del tipo [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, o [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="ab37a-131">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>
      type:
      - '(result: any) => void'
    - id: callback
      description: <span data-ttu-id="ab37a-132">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-132">Optional.</span></span> <span data-ttu-id="ab37a-133">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-133">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.deleteAsync
  summary: <span data-ttu-id="ab37a-134">Elimina el elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-134">Deletes the Custom XML Part.</span></span>
  name: deleteAsync(options, callback)
  fullName: deleteAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="ab37a-135">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="ab37a-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="ab37a-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-136">Optional.</span></span> <span data-ttu-id="ab37a-137">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.deleteAsync_1
  summary: <span data-ttu-id="ab37a-138">Elimina el elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-138">Deletes the Custom XML Part.</span></span>
  name: deleteAsync(callback)
  fullName: deleteAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-139\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-139\">Examples</span></span>\n\n```javascript\nfunction deleteXMLPart() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.deleteAsync(function (eventArgs) {\n            write(\"The XML Part has been deleted.\");\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: callback
      description: <span data-ttu-id="ab37a-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-140">Optional.</span></span> <span data-ttu-id="ab37a-141">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-141">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.getNodesAsync
  summary: <span data-ttu-id="ab37a-142">Obtiene de forma asincrónica cualquier objeto CustomXmlNodes de un elemento XML personalizado que coincide con la expresión XPath especificada.</span><span class="sxs-lookup"><span data-stu-id="ab37a-142">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync(xPath, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="ab37a-p108">Una expresión XPath que especifica los nodos que desea devolver. Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="ab37a-p108">An XPath expression that specifies the nodes you want returned. Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="ab37a-145">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="ab37a-145">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="ab37a-146">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-146">Optional.</span></span> <span data-ttu-id="ab37a-147">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-147">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="ab37a-148">El `value` (propiedad) del resultado es una matriz de objetos CustomXmlNode que representan los nodos especificados por la expresión XPath pasada al parámetro xPath.</span><span class="sxs-lookup"><span data-stu-id="ab37a-148">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlPart.getNodesAsync_1
  summary: <span data-ttu-id="ab37a-149">Obtiene de forma asincrónica cualquier objeto CustomXmlNodes de un elemento XML personalizado que coincide con la expresión XPath especificada.</span><span class="sxs-lookup"><span data-stu-id="ab37a-149">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
  name: getNodesAsync(xPath, callback)
  fullName: getNodesAsync(xPath, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-150\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-150\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: xPath
      description: <span data-ttu-id="ab37a-p110">Una expresión XPath que especifica los nodos que desea devolver. Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="ab37a-p110">An XPath expression that specifies the nodes you want returned. Required.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="ab37a-153">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-153">Optional.</span></span> <span data-ttu-id="ab37a-154">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-154">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="ab37a-155">El `value` (propiedad) del resultado es una matriz de objetos CustomXmlNode que representan los nodos especificados por la expresión XPath pasada al parámetro xPath.</span><span class="sxs-lookup"><span data-stu-id="ab37a-155">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlPart.getXmlAsync
  summary: <span data-ttu-id="ab37a-156">Obtiene de forma asincrónica el contenido XML de un elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-156">Asynchronously gets the XML inside this custom XML part.</span></span>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="ab37a-157">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="ab37a-157">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="ab37a-158">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-158">Optional.</span></span> <span data-ttu-id="ab37a-159">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-159">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="ab37a-160">El `value` (propiedad) del resultado es una cadena que contiene el XML del objeto CustomXmlPart que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="ab37a-160">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlPart.getXmlAsync_1
  summary: <span data-ttu-id="ab37a-161">Obtiene de forma asincrónica el contenido XML de un elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-161">Asynchronously gets the XML inside this custom XML part.</span></span>
  name: getXmlAsync(callback)
  fullName: getXmlAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-162\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-162\">Examples</span></span>\n\n```javascript\nfunction showXMLPartInnerXML() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getXmlAsync(function (eventArgs) {\n            write(eventArgs.value);\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: callback
      description: <span data-ttu-id="ab37a-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-163">Optional.</span></span> <span data-ttu-id="ab37a-164">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="ab37a-165">El `value` (propiedad) del resultado es una cadena que contiene el XML del objeto CustomXmlPart que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="ab37a-165">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlPart.removeHandlerAsync
  summary: <span data-ttu-id="ab37a-166">Quita un controlador de eventos para el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-166">Removes an event handler for the specified event type.</span></span>
  name: removeHandlerAsync(eventType, handler, options, callback)
  fullName: removeHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="ab37a-167">Especifica el tipo de evento que desea quitar.</span><span class="sxs-lookup"><span data-stu-id="ab37a-167">Specifies the type of event to remove.</span></span> <span data-ttu-id="ab37a-168">Para un objeto CustomXmlPart, se puede especificar el parámetro eventType como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, y `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-168">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="ab37a-169">El nombre del controlador que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="ab37a-169">The name of the handler to remove.</span></span>
      type:
      - '(result: any) => void'
    - id: options
      description: <span data-ttu-id="ab37a-170">Proporciona opciones para determinar qué controlador de eventos o controladores que se han quitado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-170">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="ab37a-171">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-171">Optional.</span></span> <span data-ttu-id="ab37a-172">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-172">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.removeHandlerAsync_1
  summary: <span data-ttu-id="ab37a-173">Quita un controlador de eventos para el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="ab37a-173">Removes an event handler for the specified event type.</span></span>
  name: removeHandlerAsync(eventType, handler, callback)
  fullName: removeHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-174\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-174\">Examples</span></span>\n\n```javascript\nfunction removeNodeInsertedEventHandler() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\",\n        function (result) {\n            var xmlPart = result.value;\n            xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});\n    });\n}\n```"
    parameters:
    - id: eventType
      description: <span data-ttu-id="ab37a-175">Especifica el tipo de evento que desea quitar.</span><span class="sxs-lookup"><span data-stu-id="ab37a-175">Specifies the type of event to remove.</span></span> <span data-ttu-id="ab37a-176">Para un objeto CustomXmlPart, se puede especificar el parámetro eventType como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, y `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-176">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="ab37a-177">El nombre del controlador que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="ab37a-177">The name of the handler to remove.</span></span>
      type:
      - '(result: any) => void'
    - id: callback
      description: <span data-ttu-id="ab37a-178">Opcional.</span><span class="sxs-lookup"><span data-stu-id="ab37a-178">Optional.</span></span> <span data-ttu-id="ab37a-179">Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ab37a-179">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.builtIn
  summary: <span data-ttu-id="ab37a-180">Es True si el elemento XML personalizado se basa en; en caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="ab37a-180">True, if the custom XML part is built in; otherwise false.</span></span>
  name: builtIn
  fullName: builtIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'builtIn: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-181\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-181\">Examples</span></span>\n\n```javascript\nfunction showXMLPartBuiltIn() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        write(xmlPart.builtIn);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.CustomXmlPart.id
  summary: <span data-ttu-id="ab37a-182">Obtiene el GUID del elemento CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="ab37a-182">Gets the GUID of the CustomXMLPart.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-183\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-183\">Examples</span></span>\n\n```javascript\nfunction showXMLPartBuiltId() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        write(xmlPart.id);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.CustomXmlPart.namespaceManager
  summary: <span data-ttu-id="ab37a-184">Obtiene el conjunto de espacio de nombres de asignaciones de prefijo ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)<!-- -->) que se usa en el objeto CustomXmlPart actual.</span><span class="sxs-lookup"><span data-stu-id="ab37a-184">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)<!-- -->) used against the current CustomXmlPart.</span></span>
  name: namespaceManager
  fullName: namespaceManager
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceManager: CustomXmlPrefixMappings;'
    return:
      type:
      - office.Office.CustomXmlPrefixMappings
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ab37a-185\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ab37a-185\">Examples</span></span>\n\n```javascript\nfunction setXMLPartNamespaceManagerNamespace() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.namespaceManager.addNamespaceAsync(\"myPrefix\", \"myNamespace\");\n    });\n}\n```"
