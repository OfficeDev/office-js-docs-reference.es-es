### YamlMime:UniversalReference
ms.openlocfilehash: f323ce2a7e2510f4309a37a7123c51dcbb36d5e4
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055615"
items:
- uid: office.Office.TableBinding
  summary: Representa un enlace en dos dimensiones de filas y columnas, que puede llevar o no encabezados.
  remarks: >-
    <table><tr><td>Conjuntos de requisitos</td><td>TableBindings</td></tr></table>


    El objeto `id` TableBinding hereda la propiedad, `type` la propiedad, `getDataAsync` el método y `setDataAsync` el método del objeto [Office. Binding](xref:office.Office.Binding) .


    Para Excel, tenga en cuenta que después de establecer un enlace de tabla, cada fila nueva que agregue un usuario a la tabla se incluirá automáticamente en el enlace y el reCuento de filas aumentará.
  name: Office.TableBinding
  fullName: Office.TableBinding
  langs:
  - typeScript
  type: interface
  extends:
  - 'Binding '
  package: office
  children:
  - office.Office.TableBinding.addColumnsAsync
  - office.Office.TableBinding.addColumnsAsync_1
  - office.Office.TableBinding.addRowsAsync
  - office.Office.TableBinding.addRowsAsync_1
  - office.Office.TableBinding.clearFormatsAsync
  - office.Office.TableBinding.clearFormatsAsync_1
  - office.Office.TableBinding.deleteAllDataValuesAsync
  - office.Office.TableBinding.deleteAllDataValuesAsync_1
  - office.Office.TableBinding.getFormatsAsync
  - office.Office.TableBinding.getFormatsAsync_1
  - office.Office.TableBinding.setFormatsAsync
  - office.Office.TableBinding.setFormatsAsync_1
  - office.Office.TableBinding.setTableOptionsAsync
  - office.Office.TableBinding.setTableOptionsAsync_1
  - office.Office.TableBinding.columnCount
  - office.Office.TableBinding.hasHeaders
  - office.Office.TableBinding.rowCount
- uid: office.Office.TableBinding.addColumnsAsync
  summary: Agrega los datos especificados a la tabla como columnas adicionales.
  remarks: >-
    Para agregar una o más columnas especificando los valores de los datos y los encabezados, pase un objeto TableData como parámetro de datos. Para agregar una o varias columnas que especifican solo los datos, pase una matriz de matrices ("Matrix") como parámetro Data.


    El éxito o error de una operación addColumnsAsync es atómico. Es decir, la operación de Agregar columnas completa debe realizarse correctamente o se deshará por completo (y la propiedad AsyncResult. status devuelta a la devolución de llamada notificará un error):


    - Cada fila de la matriz que pase como argumento de datos debe tener el mismo número de filas que la tabla que se está actualizando. Si no es así, se producirá un error en toda la operación.


    - Todas las filas y las celdas de la matriz tienen que agregar correctamente esa fila o celda a la tabla en las columnas recién agregadas. Si, por cualquier motivo, no se define alguna de las filas o las celdas, fallará toda la acción.


    - Si se pasa un objeto TableData como argumento de datos, el número de filas de encabezado debe coincidir con el de la tabla que se está actualizando.


    Comentario adicional para Excel online: el número total de celdas en el objeto TableData pasado al parámetro Data no puede ser superior a 20.000 en una sola llamada a este método.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example adds a single column with three rows to a bound table with the id "myTable"

    // by passing a TableData object as the data argument of the addColumnsAsync method. To succeed,

    // the table being updated must have three rows.


    // Add a column to a binding of type table by passing a TableData object.

    function addColumns() {
        var myTable = new Office.TableData();
        myTable.headers = [["Cities"]];
        myTable.rows = [["Berlin"], ["Roma"], ["Tokyo"]];

        Office.context.document.bindings.getByIdAsync("myTable", function (result) {
            result.value.addColumnsAsync(myTable);
        });
    }


    // The following example adds a single column with three rows to a bound table with the id myTable

    // by passing an array of arrays ("matrix") as the data argument of the addColumnsAsync method.

    // To succeed, the table being updated must have three rows.


    // Add a column to a binding of type table by passing an array of arrays.

    function addColumns() {
        var myTable = [["Berlin"], ["Roma"], ["Tokyo"]];

        Office.context.document.bindings.getByIdAsync("myTable", function (result) {
            result.value.addColumnsAsync(myTable);
        });
    }

    ```
  name: addColumnsAsync(tableData, options, callback)
  fullName: addColumnsAsync(tableData, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addColumnsAsync(tableData: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableData
      description: Una matriz de matrices ("Matrix") o un objeto TableData que contiene una o más columnas de datos para agregar a la tabla. Obligatorio.
      type:
      - TableData | any[][]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.addColumnsAsync_1
  summary: Agrega los datos especificados a la tabla como columnas adicionales.
  remarks: >-
    Para agregar una o más columnas especificando los valores de los datos y los encabezados, pase un objeto TableData como parámetro de datos. Para agregar una o varias columnas que especifican solo los datos, pase una matriz de matrices ("Matrix") como parámetro Data.


    El éxito o error de una operación addColumnsAsync es atómico. Es decir, la operación de Agregar columnas completa debe realizarse correctamente o se deshará por completo (y la propiedad AsyncResult. status devuelta a la devolución de llamada notificará un error):


    - Cada fila de la matriz que pase como argumento de datos debe tener el mismo número de filas que la tabla que se está actualizando. Si no es así, se producirá un error en toda la operación.


    - Todas las filas y las celdas de la matriz tienen que agregar correctamente esa fila o celda a la tabla en las columnas recién agregadas. Si, por cualquier motivo, no se define alguna de las filas o las celdas, fallará toda la acción.


    - Si se pasa un objeto TableData como argumento de datos, el número de filas de encabezado debe coincidir con el de la tabla que se está actualizando.


    Comentario adicional para Excel online: el número total de celdas en el objeto TableData pasado al parámetro Data no puede ser superior a 20.000 en una sola llamada a este método.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: addColumnsAsync(tableData, callback)
  fullName: addColumnsAsync(tableData, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addColumnsAsync(tableData: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableData
      description: Una matriz de matrices ("Matrix") o un objeto TableData que contiene una o más columnas de datos para agregar a la tabla. Obligatorio.
      type:
      - TableData | any[][]
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.addRowsAsync
  summary: Agrega los datos especificados a la tabla como filas adicionales.
  remarks: >-
    El éxito o error de una operación addRowsAsync es atómico. Es decir, la operación de Agregar columnas completa debe realizarse correctamente o se deshará por completo (y la propiedad AsyncResult. status devuelta a la devolución de llamada notificará un error):


    - Cada fila de la matriz que pase como argumento de datos debe tener el mismo número de columnas que la tabla que se va a actualizar. Si no es así, se producirá un error en toda la operación.


    - Cada columna y celda de la matriz debe agregar correctamente esa columna o celda a la tabla de las filas recién agregadas. Si cualquier columna o celda no se puede establecer por algún motivo, se producirá un error en toda la operación.


    - Si se pasa un objeto TableData como argumento de datos, el número de filas de encabezado debe coincidir con el de la tabla que se está actualizando.


    Comentario adicional para Excel online: el número total de celdas en el objeto TableData pasado al parámetro Data no puede ser superior a 20.000 en una sola llamada a este método.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    function addRowsToTable() {
        Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
            var binding = asyncResult.value;
            binding.addRowsAsync([["6", "k"], ["7", "j"]]);
        });
    }

    ```
  name: addRowsAsync(rows, options, callback)
  fullName: addRowsAsync(rows, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addRowsAsync(rows: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: rows
      description: Una matriz de matrices ("Matrix") o un objeto TableData que contiene una o más filas de datos para agregar a la tabla. Obligatorio.
      type:
      - TableData | any[][]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.addRowsAsync_1
  summary: Agrega los datos especificados a la tabla como filas adicionales.
  remarks: >-
    El éxito o error de una operación addRowsAsync es atómico. Es decir, la operación de Agregar columnas completa debe realizarse correctamente o se deshará por completo (y la propiedad AsyncResult. status devuelta a la devolución de llamada notificará un error):


    - Cada fila de la matriz que pase como argumento de datos debe tener el mismo número de columnas que la tabla que se va a actualizar. Si no es así, se producirá un error en toda la operación.


    - Cada columna y celda de la matriz debe agregar correctamente esa columna o celda a la tabla de las filas recién agregadas. Si cualquier columna o celda no se puede establecer por algún motivo, se producirá un error en toda la operación.


    - Si se pasa un objeto TableData como argumento de datos, el número de filas de encabezado debe coincidir con el de la tabla que se está actualizando.


    Comentario adicional para Excel online: el número total de celdas en el objeto TableData pasado al parámetro Data no puede ser superior a 20.000 en una sola llamada a este método.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: addRowsAsync(rows, callback)
  fullName: addRowsAsync(rows, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addRowsAsync(rows: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: rows
      description: Una matriz de matrices ("Matrix") o un objeto TableData que contiene una o más filas de datos para agregar a la tabla. Obligatorio.
      type:
      - TableData | any[][]
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.clearFormatsAsync
  summary: Borra el formato en la tabla enlazada.
  remarks: >-
    Para obtener más información, vea [Format tables in Add-Ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) .


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example shows how to clear the formatting of the bound table with an ID of "myBinding":

    Office.select("bindings#myBinding").clearFormatsAsync();

    ```
  name: clearFormatsAsync(options, callback)
  fullName: clearFormatsAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFormatsAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.clearFormatsAsync_1
  summary: Borra el formato en la tabla enlazada.
  remarks: >-
    Para obtener más información, vea [Format tables in Add-Ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) .


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: clearFormatsAsync(callback)
  fullName: clearFormatsAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFormatsAsync(callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.deleteAllDataValuesAsync
  summary: Elimina de la tabla todas las filas que no sean encabezados y sus valores, y cambia de forma adecuada a la aplicación host.
  remarks: >-
    En Excel, si la tabla no tiene una fila de encabezado, este método suprimirá la propia tabla.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    function deleteAllRowsFromTable() {
        Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
            var binding = asyncResult.value;
            binding.deleteAllDataValuesAsync();
        });
    }

    ```
  name: deleteAllDataValuesAsync(options, callback)
  fullName: deleteAllDataValuesAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAllDataValuesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.deleteAllDataValuesAsync_1
  summary: Elimina de la tabla todas las filas que no sean encabezados y sus valores, y cambia de forma adecuada a la aplicación host.
  remarks: >-
    En Excel, si la tabla no tiene una fila de encabezado, este método suprimirá la propia tabla.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: deleteAllDataValuesAsync(callback)
  fullName: deleteAllDataValuesAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAllDataValuesAsync(callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.getFormatsAsync
  summary: Obtiene el formato de los elementos especificados en la tabla.
  remarks: >-
    **Estructura de formato deVuelta**


    Cada objeto de JavaScript de la matriz de valores devueltos tiene el siguiente formato:`{cells:{ cell_range }, format:{ format_definition }}`


    La `cells:` propiedad especifica el rango al que desea aplicar el formato mediante uno de los siguientes valores:


    **Rangos admitidos en la propiedad cells**


    <table> <tr> <th>configuración del rango de celdas</th> <th>Descripción</th> </tr> <tr> <td>`{row: n}`</td> <td>Especifica el intervalo que es la fila de datos nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{column: n}`</td> <td>Especifica el intervalo que es la columna nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>Especifica la única celda que es la fila i y la columna JTH de la tabla.</td> </tr> <tr> <td>`Office.Table.All`</td> <td>Especifica toda la tabla, incluidos los encabezados de columna, los datos y los totales (si resulta aplicable).</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>Especifica solo los datos de la tabla (no los encabezados ni los totales).</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>Especifica solo la fila de encabezado.</td> </tr> </table>


    La `format:` propiedad especifica los valores que corresponden a un subconjunto de los valores de configuración disponibles en el cuadro de diálogo formato de celdas &gt; en Excel (haga &gt; clic &gt; con el botón secundario en las celdas con formato de formato principal).
  name: getFormatsAsync(cellReference, formats, options, callback)
  fullName: getFormatsAsync(cellReference, formats, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFormatsAsync(cellReference?: any, formats?: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellReference
      description: Un literal de objeto que contiene pares nombre-valor que especifican el rango de celdas del que se va a obtener formato.
      type:
      - any
    - id: formats
      description: Una matriz que especifica las propiedades de formato que se van a obtener.
      type:
      - any[]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->. La `value` propiedad del resultado es una matriz que contiene uno o más objetos JavaScript que especifican el formato de sus celdas correspondientes.
      type:
      - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
- uid: office.Office.TableBinding.getFormatsAsync_1
  summary: Obtiene el formato de los elementos especificados en la tabla.
  remarks: >-
    **Estructura de formato deVuelta**


    Cada objeto de JavaScript de la matriz de valores devueltos tiene el siguiente formato:`{cells:{ cell_range }, format:{ format_definition }}`


    La `cells:` propiedad especifica el rango al que desea aplicar el formato mediante uno de los siguientes valores:


    **Rangos admitidos en la propiedad cells**


    <table> <tr> <th>configuración del rango de celdas</th> <th>Descripción</th> </tr> <tr> <td>`{row: n}`</td> <td>Especifica el intervalo que es la fila de datos nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{column: n}`</td> <td>Especifica el intervalo que es la columna nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>Especifica la única celda que es la fila i y la columna JTH de la tabla.</td> </tr> <tr> <td>`Office.Table.All`</td> <td>Especifica toda la tabla, incluidos los encabezados de columna, los datos y los totales (si resulta aplicable).</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>Especifica solo los datos de la tabla (no los encabezados ni los totales).</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>Especifica solo la fila de encabezado.</td> </tr> </table>


    La `format:` propiedad especifica los valores que corresponden a un subconjunto de los valores de configuración disponibles en el cuadro de diálogo formato de celdas &gt; en Excel (haga &gt; clic &gt; con el botón secundario en las celdas con formato de formato principal).
  name: getFormatsAsync(cellReference, formats, callback)
  fullName: getFormatsAsync(cellReference, formats, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFormatsAsync(cellReference?: any, formats?: any[], callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellReference
      description: Un literal de objeto que contiene pares nombre-valor que especifican el rango de celdas del que se va a obtener formato.
      type:
      - any
    - id: formats
      description: Una matriz que especifica las propiedades de formato que se van a obtener.
      type:
      - any[]
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->. La `value` propiedad del resultado es una matriz que contiene uno o más objetos JavaScript que especifican el formato de sus celdas correspondientes.
      type:
      - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
- uid: office.Office.TableBinding.setFormatsAsync
  summary: Establece el formato de los elementos y datos especificados en la tabla.
  remarks: "**Especificar el parámetro cellFormat**\n\nUse el parámetro cellFormat para establecer o cambiar los valores de formato de celda, como el ancho, el alto, la fuente, el fondo, la alineación, etc. El valor que se pasa como el parámetro cellFormat es una matriz que contiene una lista de uno o varios objetos de JavaScript que especifican a qué`cells:`<!-- -->celdas se va a dirigir`format:`<!-- -->() y los formatos () que se aplican a ellos.\n\nCada objeto JavaScript en la matriz cellFormat tiene la siguiente forma:`{cells:{ cell_range }, format:{ format_definition }}`\n\nLa `cells:` propiedad especifica el rango al que desea aplicar el formato mediante uno de los siguientes valores:\n\n**Rangos admitidos en la propiedad cells**\n\n<table> <tr> <th>configuración del rango de celdas</th> <th>Descripción</th> </tr> <tr> <td>`{row: n}`</td> <td>Especifica el intervalo que es la fila de datos nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{column: n}`</td> <td>Especifica el intervalo que es la columna nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>Especifica la única celda que es la fila i y la columna JTH de la tabla.</td> </tr> <tr> <td>`Office.Table.All`</td> <td>Especifica toda la tabla, incluidos los encabezados de columna, los datos y los totales (si resulta aplicable).</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>Especifica solo los datos de la tabla (no los encabezados ni los totales).</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>Especifica solo la fila de encabezado.</td> </tr> </table>\n\nLa `format:` propiedad especifica los valores que corresponden a un subconjunto de los valores de configuración disponibles en el cuadro de diálogo formato de celdas &gt; en Excel (haga &gt; clic &gt; con el botón secundario en las celdas con formato de formato principal).\n\nEl valor de la `format:` propiedad se especifica como una lista de uno o más pares nombre-valor de propiedad en un literal de objeto de JavaScript. El nombre de la propiedad especifica el nombre de la propiedad de formato que se va a establecer y valor especifica el valor de la propiedad. Puede especificar varios valores para un formato determinado, como el color y el tamaño de una fuente.\n\nA continuación, `format:` se muestran tres ejemplos de valores de propiedad:\n\n`//Set cells: font color to green and size to 15 points.`\n\n`format: {fontColor : \"green\", fontSize : 15}`\n\n`//Set cells: border to dotted blue.`\n\n`format: {borderStyle: \"dotted\", borderColor: \"blue\"}`\n\n`//Set cells: background to red and alignment to centered.`\n\n`format: {backgroundColor: \"red\", alignHorizontal: \"center\"}`\n\nPuede especificar formatos de número especificando la cadena \"Code\" de formato de número en `numberFormat:` la propiedad. Las cadenas de formato de número que se pueden especificar corresponden a las que se pueden establecer en Excel utilizando la categoría personalizado en la ficha número del cuadro de diálogo formato de celdas. En este ejemplo se muestra cómo dar formato a un número como un porcentaje con dos posiciones decimales:\n\n`format: {numberFormat:\"0.00%\"}`\n\nPara obtener más información, consulte Cómo [crear un formato](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)<!-- -->de número personalizado.\n\nPara establecer el formato de las tablas al escribir datos, use los parámetros opcionales tableOptions y cellFormat `Document.setSelectedDataAsync` de `TableBinding.setDataAsync` los métodos o.\n\nEstablecer el formato con los parámetros opcionales de `Document.setSelectedDataAsync` los `TableBinding.setDataAsync` métodos y sólo funciona para establecer el formato al escribir datos por primera vez. Para realizar cambios de formato después de escribir datos, use los métodos siguientes:\n\n- Para actualizar el formato de las celdas, como el color y el estilo `TableBinding.setFormatsAsync` de la fuente, use el método (este método).\n\n- Para actualizar las opciones de tabla, como las filas con bandas y los botones de `TableBinding.setTableOptions` filtro, use el método.\n\n- Para borrar el formato, use `TableBinding.clearFormats` el método.\n\nPara obtener más detalles y ejemplos, consulte [How to Format tables in Add-Ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)<!-- -->.\n\n**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.\n\nPara obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Specifying a single target\n// The following example shows a cellFormat value that sets the font color of the header row to red.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: Office.Table.Headers, format: {fontColor: \"red\"}}], \n    function (asyncResult){});\n\n// Specifying multiple targets\n// The setFormatsAsync method can support formatting multiple targets within the bound table in a \n// single function call. To do that, you pass a list of objects in the cellFormat array \n// for each target that you want to format.\n// For example, the following line of code will set the font color of the first row yellow, \n// and the fourth cell in the third row to have a white border and bold text.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n        {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}], \n    function (asyncResult){});\n\n// Additional remarks for Excel Online\n// The number of formatting groups passed to the cellFormat parameter can't exceed 100. \n// A single formatting group consists of a set of formatting applied to a specified range of cells. \n// For example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n        {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}], \n    function (asyncResult){});\n```"
  name: setFormatsAsync(cellFormat, options, callback)
  fullName: setFormatsAsync(cellFormat, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setFormatsAsync(cellFormat: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellFormat
      description: Matriz que contiene uno o más objetos JavaScript que especifican las celdas a las que se va a dirigir y el formato que se les debe aplicar.
      type:
      - any[]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.setFormatsAsync_1
  summary: Establece el formato de los elementos y datos especificados en la tabla.
  remarks: >-
    **Especificar el parámetro cellFormat**


    Use el parámetro cellFormat para establecer o cambiar los valores de formato de celda, como el ancho, el alto, la fuente, el fondo, la alineación, etc. El valor que se pasa como el parámetro cellFormat es una matriz que contiene una lista de uno o varios objetos de JavaScript que especifican a qué`cells:`<!-- -->celdas se va a dirigir`format:`<!-- -->() y los formatos () que se aplican a ellos.


    Cada objeto JavaScript en la matriz cellFormat tiene la siguiente forma:`{cells:{ cell_range }, format:{ format_definition }}`


    La `cells:` propiedad especifica el rango al que desea aplicar el formato mediante uno de los siguientes valores:


    **Rangos admitidos en la propiedad cells**


    <table> <tr> <th>configuración del rango de celdas</th> <th>Descripción</th> </tr> <tr> <td>`{row: n}`</td> <td>Especifica el intervalo que es la fila de datos nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{column: n}`</td> <td>Especifica el intervalo que es la columna nth de base cero de datos de la tabla.</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>Especifica la única celda que es la fila i y la columna JTH de la tabla.</td> </tr> <tr> <td>`Office.Table.All`</td> <td>Especifica toda la tabla, incluidos los encabezados de columna, los datos y los totales (si resulta aplicable).</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>Especifica solo los datos de la tabla (no los encabezados ni los totales).</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>Especifica solo la fila de encabezado.</td> </tr> </table>


    La `format:` propiedad especifica los valores que corresponden a un subconjunto de los valores de configuración disponibles en el cuadro de diálogo formato de celdas &gt; en Excel (haga &gt; clic &gt; con el botón secundario en las celdas con formato de formato principal).


    El valor de la `format:` propiedad se especifica como una lista de uno o más pares nombre-valor de propiedad en un literal de objeto de JavaScript. El nombre de la propiedad especifica el nombre de la propiedad de formato que se va a establecer y valor especifica el valor de la propiedad. Puede especificar varios valores para un formato determinado, como el color y el tamaño de una fuente.


    A continuación, `format:` se muestran tres ejemplos de valores de propiedad:


    `//Set cells: font color to green and size to 15 points.`


    `format: {fontColor : "green", fontSize : 15}`


    `//Set cells: border to dotted blue.`


    `format: {borderStyle: "dotted", borderColor: "blue"}`


    `//Set cells: background to red and alignment to centered.`


    `format: {backgroundColor: "red", alignHorizontal: "center"}`


    Puede especificar formatos de número especificando la cadena "Code" de formato de número en `numberFormat:` la propiedad. Las cadenas de formato de número que se pueden especificar corresponden a las que se pueden establecer en Excel utilizando la categoría personalizado en la ficha número del cuadro de diálogo formato de celdas. En este ejemplo se muestra cómo dar formato a un número como un porcentaje con dos posiciones decimales:


    `format: {numberFormat:"0.00%"}`


    Para obtener más información, consulte Cómo [crear un formato](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)<!-- -->de número personalizado.


    Para establecer el formato de las tablas al escribir datos, use los parámetros opcionales tableOptions y cellFormat `Document.setSelectedDataAsync` de `TableBinding.setDataAsync` los métodos o.


    Establecer el formato con los parámetros opcionales de `Document.setSelectedDataAsync` los `TableBinding.setDataAsync` métodos y sólo funciona para establecer el formato al escribir datos por primera vez. Para realizar cambios de formato después de escribir datos, use los métodos siguientes:


    - Para actualizar el formato de las celdas, como el color y el estilo `TableBinding.setFormatsAsync` de la fuente, use el método (este método).


    - Para actualizar las opciones de tabla, como las filas con bandas y los botones de `TableBinding.setTableOptions` filtro, use el método.


    - Para borrar el formato, use `TableBinding.clearFormats` el método.


    Para obtener más detalles y ejemplos, consulte [How to Format tables in Add-Ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)<!-- -->.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: setFormatsAsync(cellFormat, callback)
  fullName: setFormatsAsync(cellFormat, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setFormatsAsync(cellFormat: any[], callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellFormat
      description: Matriz que contiene uno o más objetos JavaScript que especifican las celdas a las que se va a dirigir y el formato que se les debe aplicar.
      type:
      - any[]
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.setTableOptionsAsync
  summary: Actualiza las opciones de formato de tabla en la tabla enlazada.
  remarks: "<table> <tr><td>Hosts</td><td>Excel</td></tr> <tr><td>Conjuntos de requisitos</td><td>No en un conjunto</td></tr> </table>\n\nEn la función de devolución de llamada que se ha remitido al método goToByIdAsync, puede usar las propiedades del objeto AsyncResult para devolver la siguiente información.\n\n<table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Siempre devuelve undefined porque no hay ningún objeto ni datos que recuperar al establecer los formatos.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si la operación no se ha llevado a cabo correctamente.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>\n\n**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.\n\nPara obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// The following example shows how to:\n// 1. Create an object literal that specifies the table formatting options to update on the bound table.\n// 2. Call setTableOptions on a previously bound table (with an id of myBinding) passing the object\n//    with formatting setting as the tableOptions parameter.\nfunction updateTableFormatting(){\n    var tableOptions = {bandedRows: true, filterButton: false, style: \"TableStyleMedium3\"}; \n\n    Office.select(\"bindings#myBinding\").setTableOptionsAsync(tableOptions, function(asyncResult){});\n}\n```"
  name: setTableOptionsAsync(tableOptions, options, callback)
  fullName: setTableOptionsAsync(tableOptions, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTableOptionsAsync(tableOptions: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableOptions
      description: Un literal de objeto que contiene una lista de pares nombre-valor de propiedad que definen las opciones de tabla que se van a aplicar.
      type:
      - any
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.setTableOptionsAsync_1
  summary: Actualiza las opciones de formato de tabla en la tabla enlazada.
  remarks: >-
    <table> <tr><td>Hosts</td><td>Excel</td></tr> <tr><td>Conjuntos de requisitos</td><td>No en un conjunto</td></tr> </table>


    En la función de devolución de llamada que se ha remitido al método goToByIdAsync, puede usar las propiedades del objeto AsyncResult para devolver la siguiente información.


    <table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Siempre devuelve undefined porque no hay ningún objeto ni datos que recuperar al establecer los formatos.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si la operación no se ha llevado a cabo correctamente.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: setTableOptionsAsync(tableOptions, callback)
  fullName: setTableOptionsAsync(tableOptions, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTableOptionsAsync(tableOptions: any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableOptions
      description: Un literal de objeto que contiene una lista de pares nombre-valor de propiedad que definen las opciones de tabla que se van a aplicar.
      type:
      - any
    - id: callback
      description: Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.columnCount
  summary: Obtiene el número de columnas en el TableBinding, como un valor entero.
  remarks: "**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que esta propiedad es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite esta propiedad.\n\nPara obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nfunction showBindingColumnCount() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Column: \" + asyncResult.value.columnCount);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnCount: number;'
    return:
      type:
      - number
- uid: office.Office.TableBinding.hasHeaders
  summary: True si la tabla tiene encabezados; de lo contrario, false.
  remarks: "**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que esta propiedad es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite esta propiedad.\n\nPara obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nfunction showBindingHasHeaders() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Binding has headers: \" + asyncResult.value.hasHeaders);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: hasHeaders
  fullName: hasHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasHeaders: boolean;'
    return:
      type:
      - boolean
- uid: office.Office.TableBinding.rowCount
  summary: Obtiene el número de filas en el TableBinding, como un valor entero.
  remarks: "Cuando se inserta una tabla vacía seleccionando una sola fila en Excel 2013 y Excel online (usando tabla en la pestaña insertar), ambas aplicaciones host de Office crean una única fila de encabezados seguida de una única fila en blanco. Sin embargo, si el script del complemento crea un enlace para esta tabla recién insertada (por ejemplo, mediante el método [Office. bindings](xref:office.Office.Bindings)<!-- -->. addFromSelectionAsync) y, a continuación, comprueba el valor de la propiedad RowCount, el valor devuelto será diferente en función de si la hoja de cálculo está abierta en Excel 2013 o Excel online.\n\n- En Excel en el escritorio, rowCount devolverá 0 (no se cuenta la fila vacía que sigue a los encabezados).\n\n- En Excel online, rowCount devolverá 1 (se cuenta la fila vacía que sigue a los encabezados).\n\nPara solucionar esta diferencia en el script, puede comprobar si rowCount = = 1 y, en caso afirmativo, comprobar si la fila contiene todas las cadenas vacías.\n\nEn el caso de los complementos de contenido para Access, la propiedad rowCount siempre devuelve-1 por motivos de rendimiento.\n\n**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que esta propiedad es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite esta propiedad.\n\nPara obtener más información sobre los requisitos de servidor y aplicación host de Office, consulte [Requirements for Running Office Add-Ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Al</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Microsoft</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Palabra</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nfunction showBindingRowCount() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Rows: \" + asyncResult.value.rowCount);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowCount: number;'
    return:
      type:
      - number
