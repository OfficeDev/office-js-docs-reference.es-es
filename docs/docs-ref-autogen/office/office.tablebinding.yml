### YamlMime:UniversalReference
ms.openlocfilehash: 7a6ef04c8c8a5f0485f0e6a4289d959661633454
ms.sourcegitcommit: b05ee546d9dfbc914c8d1c594d9b206b04780bbc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 11/22/2018
ms.locfileid: "26649124"
items:
- uid: office.Office.TableBinding
  summary: Representa un enlace en dos dimensiones de filas y columnas, que puede llevar o no encabezados.
  remarks: >-
    <table><tr><td>Conjuntos de requisitos</td><td>TableBindings</td></tr></table>


    El objeto TableBinding hereda el `id` (propiedad), `type` (propiedad), `getDataAsync` (método), y `setDataAsync` (método) desde el objeto [Office.Binding](xref:office.Office.Binding) .


    Para Excel, tenga en cuenta que, después de establecer un enlace de tabla, cada fila nueva que agrega un usuario a la tabla se incluye automáticamente en los aumentos de enlace y el recuento de filas.
  name: Office.TableBinding
  fullName: Office.TableBinding
  langs:
  - typeScript
  type: interface
  extends:
  - Binding
  package: office
  children:
  - office.Office.TableBinding.addColumnsAsync
  - office.Office.TableBinding.addRowsAsync
  - office.Office.TableBinding.clearFormatsAsync
  - office.Office.TableBinding.columnCount
  - office.Office.TableBinding.deleteAllDataValuesAsync
  - office.Office.TableBinding.getFormatsAsync
  - office.Office.TableBinding.hasHeaders
  - office.Office.TableBinding.rowCount
  - office.Office.TableBinding.setFormatsAsync
  - office.Office.TableBinding.setTableOptionsAsync
- uid: office.Office.TableBinding.addColumnsAsync
  summary: Agrega los datos especificados a la tabla como columnas adicionales.
  remarks: >-
    Para agregar una o más columnas que especifica los valores de los datos y encabezados, pase un objeto TableData como el parámetro de datos. Para agregar una o más columnas especificando solo los datos, pase una matriz de matrices ("matrix") como el parámetro de datos.


    El éxito o el fracaso de una operación de addColumnsAsync es atómica. Es decir, toda la adición de columnas debe realizarse correctamente la operación, o se completamente revertirá (y la propiedad AsyncResult.status devuelve a la devolución de llamada informará error):


    - Cada fila de la matriz que se pasa como el argumento de datos debe tener el mismo número de filas que la tabla que se actualiza. En caso contrario, se producirá un error en toda la operación.


    - Todas las filas y las celdas de la matriz tienen que agregar correctamente esa fila o celda a la tabla en las columnas recién agregadas. Si, por cualquier motivo, no se define alguna de las filas o las celdas, fallará toda la acción.


    - Si se pasa un objeto TableData como argumento de datos, el número de filas de encabezados debe coincidir con de la tabla que se actualiza.


    Comentario adicional para Excel Online: el número total de celdas en el objeto TableData pasado al parámetro de datos no puede superar los 20.000 en una sola llamada a este método.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example adds a single column with three rows to a bound table with the id "myTable"

    // by passing a TableData object as the data argument of the addColumnsAsync method. To succeed,

    // the table being updated must have three rows.


    // Add a column to a binding of type table by passing a TableData object.

    function addColumns() {
        var myTable = new Office.TableData();
        myTable.headers = [["Cities"]];
        myTable.rows = [["Berlin"], ["Roma"], ["Tokyo"]];

        Office.context.document.bindings.getByIdAsync("myTable", function (result) {
            result.value.addColumnsAsync(myTable);
        });
    }


    // The following example adds a single column with three rows to a bound table with the id myTable

    // by passing an array of arrays ("matrix") as the data argument of the addColumnsAsync method.

    // To succeed, the table being updated must have three rows.


    // Add a column to a binding of type table by passing an array of arrays.

    function addColumns() {
        var myTable = [["Berlin"], ["Roma"], ["Tokyo"]];

        Office.context.document.bindings.getByIdAsync("myTable", function (result) {
            result.value.addColumnsAsync(myTable);
        });
    }

    ```
  name: addColumnsAsync(tableData, options, callback)
  fullName: addColumnsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addColumnsAsync(tableData: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableData
      description: Una matriz de matrices ("matrix") o un objeto TableData que contiene una o más columnas de datos que desea agregar a la tabla. Obligatorio.
      type:
      - TableData | any[][]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.addRowsAsync
  summary: Agrega los datos especificados a la tabla como filas adicionales.
  remarks: >-
    El éxito o el fracaso de una operación de addRowsAsync es atómica. Es decir, toda la adición de columnas debe realizarse correctamente la operación, o se completamente revertirá (y la propiedad AsyncResult.status devuelve a la devolución de llamada informará error):


    - Cada fila de la matriz que se pasa como el argumento de datos debe tener el mismo número de columnas que la tabla que se actualiza. En caso contrario, se producirá un error en toda la operación.


    - Cada columna y una celda de la matriz deben agregar correctamente esa celda o columna a la tabla de las filas recién agregadas (s). Si una celda o columna no puede establecerse por cualquier motivo, se producirá un error en toda la operación.


    - Si se pasa un objeto TableData como argumento de datos, el número de filas de encabezados debe coincidir con de la tabla que se actualiza.


    Comentario adicional para Excel Online: el número total de celdas en el objeto TableData pasado al parámetro de datos no puede superar los 20.000 en una sola llamada a este método.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    function addRowsToTable() {
        Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
            var binding = asyncResult.value;
            binding.addRowsAsync([["6", "k"], ["7", "j"]]);
        });
    }

    ```
  name: addRowsAsync(rows, options, callback)
  fullName: addRowsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addRowsAsync(rows: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: rows
      description: Una matriz de matrices ("matrix") o un objeto TableData que contiene una o varias filas de datos que desea agregar a la tabla. Obligatorio.
      type:
      - TableData | any[][]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.clearFormatsAsync
  summary: Borra el formato en la tabla enlazada.
  remarks: >-
    Para obtener más información, vea [las tablas de formato de complementos para Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) .


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example shows how to clear the formatting of the bound table with an ID of "myBinding":

    Office.select("bindings#myBinding").clearFormatsAsync();

    ```
  name: clearFormatsAsync(options, callback)
  fullName: clearFormatsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFormatsAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.columnCount
  summary: Obtiene el número de columnas en el TableBinding, como un valor entero.
  remarks: "**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que esta propiedad es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite esta propiedad.\n\nPara obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nfunction showBindingColumnCount() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Column: \" + asyncResult.value.columnCount);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnCount: number;'
    return:
      type:
      - number
- uid: office.Office.TableBinding.deleteAllDataValuesAsync
  summary: Elimina de la tabla todas las filas que no sean encabezados y sus valores, y cambia de forma adecuada a la aplicación host.
  remarks: >-
    En Excel, si la tabla no tiene una fila de encabezado, este método suprimirá la propia tabla.


    **Detalles de compatibilidad**


    Una Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.


    Para obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> </table>

    #### <a name="examples"></a>Ejemplos


    ```javascript

    function deleteAllRowsFromTable() {
        Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
            var binding = asyncResult.value;
            binding.deleteAllDataValuesAsync();
        });
    }

    ```
  name: deleteAllDataValuesAsync(options, callback)
  fullName: deleteAllDataValuesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAllDataValuesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.getFormatsAsync
  summary: Obtiene el formato de los elementos especificados en la tabla.
  remarks: >-
    **Devuelve la estructura de formato**


    Cada objeto de JavaScript en la matriz de valor devuelto tiene la siguiente forma:`{cells:{ cell_range }, format:{ format_definition }}`


    El `cells:` propiedad especifica el rango al que quiere aplicar formato mediante uno de los siguientes valores:


    **Rangos admitidos en la propiedad cells**


    <table> <tr> <th>configuración del rango de celdas</th> <th>Descripción</th> </tr> <tr> <td>`{row: n}`</td> <td>Especifica el intervalo que es la fila n basado en cero de datos de la tabla.</td> </tr> <tr> <td>`{column: n}`</td> <td>Especifica el intervalo que es cero de la columna n de datos de la tabla.</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>Especifica la celda única que es la i-ésima fila y jth la columna de la tabla.</td> </tr> <tr> <td>`Office.Table.All`</td> <td>Especifica toda la tabla, incluidos los encabezados de columna, los datos y los totales (si resulta aplicable).</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>Especifica solo los datos de la tabla (no los encabezados ni los totales).</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>Especifica solo la fila de encabezado.</td> </tr> </table>


    El `format:` (propiedad) especifica un cuadro de valores que corresponden a un subconjunto de los valores disponibles en el cuadro de diálogo Formato de celdas de Excel (secundario &gt; formato de celdas o la página principal de &gt; formato &gt; formato de celdas).
  name: getFormatsAsync(cellReference, formats, options, callback)
  fullName: getFormatsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFormatsAsync(cellReference?: any, formats?: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellReference
      description: Un objeto que contiene los pares de nombre y valor que especifican el rango de celdas para obtener el formato de literal.
      type:
      - any
    - id: formats
      description: Una matriz que especifica las propiedades de formato para obtener.
      type:
      - any[]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->. El `value` propiedad del resultado es una matriz que contiene uno o más objetos de JavaScript que especifica el formato de las celdas correspondientes.
      type:
      - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
- uid: office.Office.TableBinding.hasHeaders
  summary: Es True si la tabla tiene encabezados; en caso contrario, false.
  remarks: "**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que esta propiedad es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite esta propiedad.\n\nPara obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nfunction showBindingHasHeaders() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Binding has headers: \" + asyncResult.value.hasHeaders);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: hasHeaders
  fullName: hasHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasHeaders: boolean;'
    return:
      type:
      - boolean
- uid: office.Office.TableBinding.rowCount
  summary: Obtiene el número de filas en el TableBinding, como un valor entero.
  remarks: "Cuando se inserta una tabla vacía mediante la selección de una sola fila en Excel 2013 and Excel Online (mediante la tabla en la ficha Insertar), ambas aplicaciones host de Office crean una única fila de encabezados seguidos por una única fila en blanco. Sin embargo, si la secuencia de comandos del complemento crea un enlace para esto recién insertado tabla (por ejemplo, mediante el uso de la [Office.Bindings](xref:office.Office.Bindings)<!-- -->método .addFromSelectionAsync) y, a continuación, se comprueba el valor de la propiedad rowCount, el valor devuelto será diferente Dependiendo de si la hoja de cálculo está abierto en Excel 2013 o Excel en línea.\n\n- En Excel en el escritorio, rowCount devolverá 0 (no se cuenta la fila en blanco siguiendo los encabezados).\n\n- En Excel Online, rowCount devolverá 1 (se cuenta la fila en blanco siguiendo los encabezados).\n\nPuede solucionar esta diferencia en la secuencia de comandos comprobar si rowCount == 1 y si es así, a continuación, comprobar si la fila contiene todas las cadenas vacías.\n\nEn contenido de complementos para el acceso, por motivos de rendimiento la propiedad rowCount siempre devuelve -1.\n\n**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que esta propiedad es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite esta propiedad.\n\nPara obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Access</strong></td><td> </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> v </td>&lt;</tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nfunction showBindingRowCount() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Rows: \" + asyncResult.value.rowCount);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowCount: number;'
    return:
      type:
      - number
- uid: office.Office.TableBinding.setFormatsAsync
  summary: Establece el formato especificados elementos y datos de la tabla.
  remarks: "**Especificar el parámetro cellFormat**\n\nUse el parámetro cellFormat para establecer o cambiar los valores, como el ancho, alto, fuente, fondo, alineación y así sucesivamente de formato de celdas. El valor que se pasa como el parámetro cellFormat es una matriz que contiene una lista de uno o más JavaScript objetos que especifican las celdas para destino (`cells:`<!-- -->) y los formatos (`format:`<!-- -->) que se debe aplicar a ellos.\n\nCada objeto de JavaScript en la matriz cellFormat tiene la siguiente forma:`{cells:{ cell_range }, format:{ format_definition }}`\n\nEl `cells:` propiedad especifica el rango al que quiere aplicar formato mediante uno de los siguientes valores:\n\n**Rangos admitidos en la propiedad cells**\n\n<table> <tr> <th>configuración del rango de celdas</th> <th>Descripción</th> </tr> <tr> <td>`{row: n}`</td> <td>Especifica el intervalo que es la fila n basado en cero de datos de la tabla.</td> </tr> <tr> <td>`{column: n}`</td> <td>Especifica el intervalo que es cero de la columna n de datos de la tabla.</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>Especifica la celda única que es la i-ésima fila y jth la columna de la tabla.</td> </tr> <tr> <td>`Office.Table.All`</td> <td>Especifica toda la tabla, incluidos los encabezados de columna, los datos y los totales (si resulta aplicable).</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>Especifica solo los datos de la tabla (no los encabezados ni los totales).</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>Especifica solo la fila de encabezado.</td> </tr> </table>\n\nEl `format:` (propiedad) especifica un cuadro de valores que corresponden a un subconjunto de los valores disponibles en el cuadro de diálogo Formato de celdas de Excel (secundario &gt; formato de celdas o la página principal de &gt; formato &gt; formato de celdas).\n\nEspecificar el valor de la `format:` propiedad como una lista de uno o varios nombre de la propiedad - pares de valor en un literal de objeto de JavaScript. El nombre de la propiedad especifica el nombre de la propiedad de formato para establecer y valor especifica el valor de la propiedad. Puede especificar varios valores para un formato determinado, como de una fuente color y tamaño.\n\nAquí es tres `format:` ejemplos de valores de propiedad:\n\n`//Set cells: font color to green and size to 15 points.`\n\n`format: {fontColor : \"green\", fontSize : 15}`\n\n`//Set cells: border to dotted blue.`\n\n`format: {borderStyle: \"dotted\", borderColor: \"blue\"}`\n\n`//Set cells: background to red and alignment to centered.`\n\n`format: {backgroundColor: \"red\", alignHorizontal: \"center\"}`\n\nPuede especificar los formatos de número especificando el número de formato de cadena \"código\" en el `numberFormat:` (propiedad). Las cadenas de formato de número que puede especificar corresponden a los que se puede establecer en Excel mediante la categoría personalizado en la ficha número del cuadro de diálogo Formato de celdas. En este ejemplo se muestra cómo dar formato a un número como un porcentaje con dos decimales:\n\n`format: {numberFormat:\"0.00%\"}`\n\nPara obtener más información, vea cómo [crear un formato de número personalizado](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)<!-- -->.\n\nPara establecer el formato de las tablas al escribir datos, use los parámetros opcionales tableOptions y cellFormat de la `Document.setSelectedDataAsync` o `TableBinding.setDataAsync` métodos.\n\nEstablecer el formato con los parámetros opcionales de la `Document.setSelectedDataAsync` y `TableBinding.setDataAsync` métodos sólo funciona para establecer el formato al escribir tiempo de datos de la primera. Para realizar cambios de formato después de escribir datos, utilice los métodos siguientes:\n\n- Para actualizar el formato de celda, como el color de fuente y estilo, utilice la `TableBinding.setFormatsAsync` método (este).\n\n- Para actualizar las opciones de tabla, como filas con bandas y los botones de filtro, utilice el `TableBinding.setTableOptions` (método).\n\n- Para borrar el formato, use la `TableBinding.clearFormats` (método).\n\nPara obtener más detalles y ejemplos, vea [cómo dar formato a tablas en complementos para Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)<!-- -->.\n\n**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.\n\nPara obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Specifying a single target\n// The following example shows a cellFormat value that sets the font color of the header row to red.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: Office.Table.Headers, format: {fontColor: \"red\"}}], \n    function (asyncResult){});\n\n// Specifying multiple targets\n// The setFormatsAsync method can support formatting multiple targets within the bound table in a \n// single function call. To do that, you pass a list of objects in the cellFormat array \n// for each target that you want to format.\n// For example, the following line of code will set the font color of the first row yellow, \n// and the fourth cell in the third row to have a white border and bold text.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n        {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}], \n    function (asyncResult){});\n\n// Additional remarks for Excel Online\n// The number of formatting groups passed to the cellFormat parameter can't exceed 100. \n// A single formatting group consists of a set of formatting applied to a specified range of cells. \n// For example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n        {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}], \n    function (asyncResult){});\n```"
  name: setFormatsAsync(cellFormat, options, callback)
  fullName: setFormatsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setFormatsAsync(cellFormat: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellFormat
      description: Una matriz que contiene uno o más objetos de JavaScript que especifican qué celdas de destino y el formato que desea aplicar a ellos.
      type:
      - any[]
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.setTableOptionsAsync
  summary: Actualiza las opciones de formato de tabla en la tabla enlazada.
  remarks: "<table><tr><td>Hosts</td><td>Excel</td></tr>\n\n<tr><td>Conjuntos de requisitos</td><td>No en un conjunto</td></tr></table>\n\nEn la función de devolución de llamada que se pasa al método goToByIdAsync, puede usar las propiedades del objeto AsyncResult para devolver la siguiente información.\n\n<table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Siempre devuelve undefined porque no hay ningún dato ni objeto que recuperar al establecer los formatos.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si la operación no se ha llevado a cabo correctamente.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>\n\n**Detalles de compatibilidad**\n\nUna Y mayúscula en la siguiente matriz indica que este método es compatible con la aplicación host de Office correspondiente. Una celda vacía indica que la aplicación host no admite este método.\n\nPara obtener más información acerca de los requisitos de aplicación y servidor de host de Office, vea [requisitos para ejecutar Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts compatibles, por plataforma* <table> <tr><th> </th><th> Office para escritorio de Windows </th><th> Office Online (en el explorador) </th><th> Office for iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// The following example shows how to:\n// 1. Create an object literal that specifies the table formatting options to update on the bound table.\n// 2. Call setTableOptions on a previously bound table (with an id of myBinding) passing the object\n//    with formatting setting as the tableOptions parameter.\nfunction updateTableFormatting(){\n    var tableOptions = {bandedRows: true, filterButton: false, style: \"TableStyleMedium3\"}; \n\n    Office.select(\"bindings#myBinding\").setTableOptionsAsync(tableOptions, function(asyncResult){});\n}\n```"
  name: setTableOptionsAsync(tableOptions, options, callback)
  fullName: setTableOptionsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTableOptionsAsync(tableOptions: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableOptions
      description: Un literal de objeto que contiene una lista de pares de nombre y valor de propiedad que definen las opciones de tabla que se debe aplicar.
      type:
      - any
    - id: options
      description: Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Una función que se invoca cuando vuelve la devolución de llamada, cuyo único parámetro es del tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.
      type:
      - '(result: AsyncResult<void>) => void'
