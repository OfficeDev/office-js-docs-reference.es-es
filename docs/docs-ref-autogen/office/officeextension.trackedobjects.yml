### YamlMime:UniversalReference
ms.openlocfilehash: 455949a691d768aafeda3e370b5827103ce57818
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 09/20/2018
ms.locfileid: "24052517"
items:
- uid: office.OfficeExtension.TrackedObjects
  summary: Colección de objetos de marca de revisión, contenidos dentro de un contexto de solicitud. Vea "context.trackedObjects" para obtener más información.
  name: OfficeExtension.TrackedObjects
  fullName: office.OfficeExtension.TrackedObjects
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.TrackedObjects.add
  - office.OfficeExtension.TrackedObjects.remove
- uid: office.OfficeExtension.TrackedObjects.add
  summary: >-
    Realizar un seguimiento de un nuevo objeto de ajuste automático en función de que lo rodea los cambios en el documento. Sólo algunos tipos de objetos lo requieren. Si se utiliza un objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto a la colección de objetos de marca de revisión Cuando el objeto se crea por primera vez.


    Este método también tiene la siguiente firma:


    `add(objects: ClientObject\[\]): void;`Donde objetos es una matriz de objetos para realizar un seguimiento.
  name: add(object)
  fullName: office.OfficeExtension.TrackedObjects.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(object: ClientObject): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ''
      type:
      - office.OfficeExtension.ClientObject
- uid: office.OfficeExtension.TrackedObjects.remove
  summary: >-
    Versión de la memoria asociada con un objeto que anteriormente se ha agregado a esta colección. Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos. Se necesita para llamar a `context.sync()` antes de la memoria en vigor versión.


    Este método también tiene la siguiente firma:


    `remove(objects: ClientObject\[\]): void;`Donde objetos es una matriz de objetos que se va a quitar.
  name: remove(object)
  fullName: office.OfficeExtension.TrackedObjects.remove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(object: ClientObject): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ''
      type:
      - office.OfficeExtension.ClientObject
