### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlPart
    summary: '<span data-ttu-id="96d6f-101">Representa un único objeto CustomXMLPart de una colección [Office. CustomXmlParts](xref:office.Office.CustomXmlParts) .</span><span class="sxs-lookup"><span data-stu-id="96d6f-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>'
    remarks: '<span data-ttu-id="96d6f-102">**Hosts**: Word</span><span class="sxs-lookup"><span data-stu-id="96d6f-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlPart.addHandlerAsync
      - office.Office.CustomXmlPart.addHandlerAsync_1
      - office.Office.CustomXmlPart.deleteAsync
      - office.Office.CustomXmlPart.deleteAsync_1
      - office.Office.CustomXmlPart.getNodesAsync
      - office.Office.CustomXmlPart.getNodesAsync_1
      - office.Office.CustomXmlPart.getXmlAsync
      - office.Office.CustomXmlPart.getXmlAsync_1
      - office.Office.CustomXmlPart.removeHandlerAsync
      - office.Office.CustomXmlPart.removeHandlerAsync_1
      - office.Office.CustomXmlPart.builtIn
      - office.Office.CustomXmlPart.id
      - office.Office.CustomXmlPart.namespaceManager
  - uid: office.Office.CustomXmlPart.addHandlerAsync
    summary: <span data-ttu-id="96d6f-103">Agrega un controlador de eventos al objeto mediante el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="96d6f-104">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="96d6f-105">Puede agregar varios controladores de eventos para el eventType especificado siempre que el nombre de cada función de controlador de eventos sea único.</span><span class="sxs-lookup"><span data-stu-id="96d6f-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="96d6f-106">Especifica el tipo de evento que se debe agregar.</span><span class="sxs-lookup"><span data-stu-id="96d6f-106">Specifies the type of event to add.</span></span> <span data-ttu-id="96d6f-107">Para un objeto CustomXmlPart, el parámetro eventType se puede especificar como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="96d6f-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-108"></span></span><!-- --><span data-ttu-id="96d6f-109">, y`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="96d6f-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="96d6f-110">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-110"></span></span>'
          type:
            - office.Office.EventType
        - id: handler
          description: '<span data-ttu-id="96d6f-111">La función del controlador de eventos que se va a agregar, cuyo único parámetro es de tipo [Office. propiedad nodedeletedeventargs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="96d6f-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="96d6f-112">, [Office. NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="96d6f-112">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="96d6f-113">u [Office. propiedad nodereplacedeventargs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="96d6f-113">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="96d6f-114">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="96d6f-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="96d6f-115">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-115">Optional.</span></span> <span data-ttu-id="96d6f-116">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-117">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-117"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.addHandlerAsync_1
    summary: <span data-ttu-id="96d6f-118">Agrega un controlador de eventos al objeto mediante el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="96d6f-119">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="96d6f-120">Puede agregar varios controladores de eventos para el eventType especificado siempre que el nombre de cada función de controlador de eventos sea único.</span><span class="sxs-lookup"><span data-stu-id="96d6f-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="96d6f-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="96d6f-122">Especifica el tipo de evento que se debe agregar.</span><span class="sxs-lookup"><span data-stu-id="96d6f-122">Specifies the type of event to add.</span></span> <span data-ttu-id="96d6f-123">Para un objeto CustomXmlPart, el parámetro eventType se puede especificar como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="96d6f-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-124"></span></span><!-- --><span data-ttu-id="96d6f-125">, y`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="96d6f-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="96d6f-126">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-126"></span></span>'
          type:
            - office.Office.EventType
        - id: handler
          description: '<span data-ttu-id="96d6f-127">La función del controlador de eventos que se va a agregar, cuyo único parámetro es de tipo [Office. propiedad nodedeletedeventargs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="96d6f-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="96d6f-128">, [Office. NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="96d6f-128">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="96d6f-129">u [Office. propiedad nodereplacedeventargs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="96d6f-129">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="96d6f-130">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-130">Optional.</span></span> <span data-ttu-id="96d6f-131">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-132">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-132"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync
    summary: <span data-ttu-id="96d6f-133">Elimina el elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-133">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="96d6f-134">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-134">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="96d6f-135">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="96d6f-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="96d6f-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-136">Optional.</span></span> <span data-ttu-id="96d6f-137">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-138">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-138"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync_1
    summary: <span data-ttu-id="96d6f-139">Elimina el elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-139">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="96d6f-140">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-140">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="96d6f-141">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-141">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="96d6f-142">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-142">Optional.</span></span> <span data-ttu-id="96d6f-143">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-144">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-144"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync
    summary: <span data-ttu-id="96d6f-145">Obtiene de forma asincrónica cualquier objeto CustomXmlNodes de un elemento XML personalizado que coincide con la expresión XPath especificada.</span><span class="sxs-lookup"><span data-stu-id="96d6f-145">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="96d6f-146">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-146">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="96d6f-147">Una expresión XPath que especifica los nodos que desea devolver.</span><span class="sxs-lookup"><span data-stu-id="96d6f-147">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="96d6f-148">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="96d6f-148">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="96d6f-149">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="96d6f-149">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="96d6f-150">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-150">Optional.</span></span> <span data-ttu-id="96d6f-151">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-151">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-152">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-152"></span></span> <span data-ttu-id="96d6f-153">La `value` propiedad del resultado es una matriz de objetos CustomXmlNode que representan los nodos especificados por la expresión XPath pasada al parámetro XPath.</span><span class="sxs-lookup"><span data-stu-id="96d6f-153">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync_1
    summary: <span data-ttu-id="96d6f-154">Obtiene de forma asincrónica cualquier objeto CustomXmlNodes de un elemento XML personalizado que coincide con la expresión XPath especificada.</span><span class="sxs-lookup"><span data-stu-id="96d6f-154">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="96d6f-155">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-155">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="96d6f-156">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-156">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="96d6f-157">Una expresión XPath que especifica los nodos que desea devolver.</span><span class="sxs-lookup"><span data-stu-id="96d6f-157">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="96d6f-158">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="96d6f-158">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="96d6f-159">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-159">Optional.</span></span> <span data-ttu-id="96d6f-160">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-161">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-161"></span></span> <span data-ttu-id="96d6f-162">La `value` propiedad del resultado es una matriz de objetos CustomXmlNode que representan los nodos especificados por la expresión XPath pasada al parámetro XPath.</span><span class="sxs-lookup"><span data-stu-id="96d6f-162">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync
    summary: <span data-ttu-id="96d6f-163">Obtiene de forma asincrónica el contenido XML de un elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-163">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="96d6f-164">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="96d6f-165">Proporciona una opción para conservar los datos de contexto de cualquier tipo, sin cambios, para su uso en una devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="96d6f-165">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="96d6f-166">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-166">Optional.</span></span> <span data-ttu-id="96d6f-167">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-167">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-168">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-168"></span></span> <span data-ttu-id="96d6f-169">La `value` propiedad del resultado es una cadena que contiene el XML del objeto CustomXmlPart al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="96d6f-169">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync_1
    summary: <span data-ttu-id="96d6f-170">Obtiene de forma asincrónica el contenido XML de un elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-170">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="96d6f-171">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="96d6f-172">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-172">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="96d6f-173">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-173">Optional.</span></span> <span data-ttu-id="96d6f-174">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-175">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-175"></span></span> <span data-ttu-id="96d6f-176">La `value` propiedad del resultado es una cadena que contiene el XML del objeto CustomXmlPart al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="96d6f-176">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync
    summary: <span data-ttu-id="96d6f-177">Quita un controlador de eventos para el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-177">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="96d6f-178">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="96d6f-179">Especifica el tipo de evento que se debe quitar.</span><span class="sxs-lookup"><span data-stu-id="96d6f-179">Specifies the type of event to remove.</span></span> <span data-ttu-id="96d6f-180">Para un objeto CustomXmlPart, el parámetro eventType se puede especificar como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-180">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="96d6f-181">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-181"></span></span><!-- --><span data-ttu-id="96d6f-182">, y`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="96d6f-182">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="96d6f-183">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-183"></span></span>'
          type:
            - office.Office.EventType
        - id: handler
          description: <span data-ttu-id="96d6f-184">Nombre del controlador que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="96d6f-184">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="96d6f-185">Proporciona opciones para determinar qué controlador o controladores de eventos se quitan.</span><span class="sxs-lookup"><span data-stu-id="96d6f-185">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="96d6f-186">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-186">Optional.</span></span> <span data-ttu-id="96d6f-187">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-187">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-188">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-188"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync_1
    summary: <span data-ttu-id="96d6f-189">Quita un controlador de eventos para el tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="96d6f-189">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="96d6f-190">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="96d6f-190">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="96d6f-191">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-191">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="96d6f-192">Especifica el tipo de evento que se debe quitar.</span><span class="sxs-lookup"><span data-stu-id="96d6f-192">Specifies the type of event to remove.</span></span> <span data-ttu-id="96d6f-193">Para un objeto CustomXmlPart, el parámetro eventType se puede especificar como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-193">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="96d6f-194">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="96d6f-194"></span></span><!-- --><span data-ttu-id="96d6f-195">, y`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="96d6f-195">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="96d6f-196">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-196"></span></span>'
          type:
            - office.Office.EventType
        - id: handler
          description: <span data-ttu-id="96d6f-197">Nombre del controlador que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="96d6f-197">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="96d6f-198">Opcional.</span><span class="sxs-lookup"><span data-stu-id="96d6f-198">Optional.</span></span> <span data-ttu-id="96d6f-199">Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="96d6f-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="96d6f-200">.</span><span class="sxs-lookup"><span data-stu-id="96d6f-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.builtIn
    summary: '<span data-ttu-id="96d6f-201">True, si el elemento XML personalizado está integrado; de lo contrario, false.</span><span class="sxs-lookup"><span data-stu-id="96d6f-201">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="96d6f-202">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-202">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.id
    summary: <span data-ttu-id="96d6f-203">Obtiene el GUID del elemento CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="96d6f-203">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="96d6f-204">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-204">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.namespaceManager
    summary: '<span data-ttu-id="96d6f-205">Obtiene el conjunto de asignaciones de prefijo de espacio de nombres ([Office. CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span><span class="sxs-lookup"><span data-stu-id="96d6f-205">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span></span><!-- --><span data-ttu-id="96d6f-206">) que se usa en el CustomXmlPart actual.</span><span class="sxs-lookup"><span data-stu-id="96d6f-206">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - office.Office.CustomXmlPrefixMappings
        description: |-


          #### <a name="examples"></a><span data-ttu-id="96d6f-207">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="96d6f-207">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```