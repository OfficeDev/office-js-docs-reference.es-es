### YamlMime:UniversalReference
items:
  - uid: office.Office.AsyncResult
    summary: |-
      <span data-ttu-id="f1922-101">Un objeto que encapsula el resultado de una solicitud asincrónica, incluida la información de estado y error si la solicitud falla.</span><span class="sxs-lookup"><span data-stu-id="f1922-101">An object which encapsulates the result of an asynchronous request, including status and error information if the request failed.</span></span>

      <span data-ttu-id="f1922-102">Cuando la función que se pasa al `callback` parámetro de un método "Async" se ejecute, recibirá un objeto asyncResult al que puede obtener acceso desde `callback` el único parámetro de la función.</span><span class="sxs-lookup"><span data-stu-id="f1922-102">When the function you pass to the `callback` parameter of an "Async" method executes, it receives an AsyncResult object that you can access from the `callback` function's only parameter.</span></span>
    name: Office.AsyncResult
    fullName: Office.AsyncResult
    langs:
      - typeScript
    type: interface
    syntax:
      typeParameters:
        - id: T
    package: office
    remarks: |-


      #### <a name="examples"></a><span data-ttu-id="f1922-103">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="f1922-103">Examples</span></span>

      ```javascript
      // The following is an example applicable to content and task pane add-ins.
      // The example shows a call to the getSelectedDataAsync method of the Document object.
      Office.context.document.getSelectedDataAsync("text", {
              valueFormat: "unformatted",
              filterType: "all"
          },
          function (result) {
              if (result.status === "success") {
                  var dataValue = result.value; // Get selected data.
                  console.log('Selected data is ' + dataValue);
              } else {
                  var err = result.error;
                  console.log(err.name + ": " + err.message);
              }
          });
      // The anonymous function passed as the callback argument ( function (result){...}) has a single 
      // parameter named result that provides access to an AsyncResult object when the function executes.
      // When the call to the getSelectedDataAsync method completes, the callback function executes, 
      // and the following line of code accesses the value property of the AsyncResult object to 
      // return the data selected in the document:
      var dataValue = result.value;
      // Note that other lines of code in the function use the result parameter of the callback function 
      // to access the status and error properties of the AsyncResult object.
      ```
    children:
      - office.Office.AsyncResult.asyncContext
      - office.Office.AsyncResult.diagnostics
      - office.Office.AsyncResult.error
      - office.Office.AsyncResult.status
      - office.Office.AsyncResult.value
  - uid: office.Office.AsyncResult.asyncContext
    summary: '<span data-ttu-id="f1922-104">Obtiene el elemento definido por el usuario que se ha `asyncContext` pasado al parámetro opcional del método invocado, en el mismo estado en el que se pasó.</span><span class="sxs-lookup"><span data-stu-id="f1922-104">Gets the user-defined item passed to the optional `asyncContext` parameter of the invoked method in the same state as it was passed in.</span></span> <span data-ttu-id="f1922-105">Esto devuelve el elemento definido por el usuario (que puede ser de cualquier tipo JavaScript: String, Number, Boolean, Object, array, null o undefined) que se pasa `asyncContext` al parámetro opcional del método invocado.</span><span class="sxs-lookup"><span data-stu-id="f1922-105">This returns the user-defined item (which can be of any JavaScript type: String, Number, Boolean, Object, Array, Null, or Undefined) passed to the optional `asyncContext` parameter of the invoked method.</span></span> <span data-ttu-id="f1922-106">Si no se envió ningún elemento al parámetro asyncContext, devuelve Undefined.</span><span class="sxs-lookup"><span data-stu-id="f1922-106">Returns Undefined, if you didn''t pass anything to the asyncContext parameter.</span></span>'
    name: asyncContext
    fullName: asyncContext
    langs:
      - typeScript
    type: property
    syntax:
      content: 'asyncContext: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f1922-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="f1922-107">Examples</span></span>

          ```javascript
          function getDataWithContext() {
              var format = "Your data: ";
              Office.context.document.getSelectedDataAsync(
                  Office.CoercionType.Text, 
                  { asyncContext: format }, 
                  showDataWithContext);
          }

          function showDataWithContext(asyncResult) {
              write(asyncResult.asyncContext + asyncResult.value);
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.AsyncResult.diagnostics
    summary: <span data-ttu-id="f1922-108">Obtiene un objeto que puede proporcionar información adicional si se produce un error.</span><span class="sxs-lookup"><span data-stu-id="f1922-108">Gets an object that may provide additional information if an error occurred.</span></span>
    remarks: |-
      <span data-ttu-id="f1922-109">*API admitidas*</span><span class="sxs-lookup"><span data-stu-id="f1922-109">*Supported APIs*</span></span>

      `Office.context.mailbox.item.getCallbackTokenAsync`<!-- --><span data-ttu-id="f1922-110">, `Office.context.mailbox.item.getUserIdentityTokenAsync`</span><span class="sxs-lookup"><span data-stu-id="f1922-110"></span></span>

      <span data-ttu-id="f1922-111">*Errores admitidos*</span><span class="sxs-lookup"><span data-stu-id="f1922-111">*Supported errors*</span></span> <table> <tr><th>`AsyncResult.error.name` </th><th>`AsyncResult.error.message` </th><th><span data-ttu-id="f1922-112">Descripción del objeto Diagnostics devuelto</span><span class="sxs-lookup"><span data-stu-id="f1922-112">Description of diagnostics object returned</span></span> </th></tr> <tr><td><span data-ttu-id="f1922-113"><strong>HTTPRequestFailure</strong></span><span class="sxs-lookup"><span data-stu-id="f1922-113"><strong>HTTPRequestFailure</strong></span></span> </td><td><span data-ttu-id="f1922-114">Error en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="f1922-114">The request has failed.</span></span> <span data-ttu-id="f1922-115">Consulte el objeto Diagnostics para ver el código de error HTTP.</span><span class="sxs-lookup"><span data-stu-id="f1922-115">Please look at the diagnostics object for the HTTP error code.</span></span> </td><td><span data-ttu-id="f1922-116">El código de error HTTP en un objeto JSON por ejemplo,`{"HTTPCode":"401"}`</span><span class="sxs-lookup"><span data-stu-id="f1922-116">The HTTP error code in a JSON object e.g., `{"HTTPCode":"401"}`</span></span> </td></tr> <tr><td><span data-ttu-id="f1922-117"><strong>InternalServerError</strong></span><span class="sxs-lookup"><span data-stu-id="f1922-117"><strong>InternalServerError</strong></span></span></td><td><span data-ttu-id="f1922-118">El servidor de Exchange devolvió un error.</span><span class="sxs-lookup"><span data-stu-id="f1922-118">The Exchange server returned an error.</span></span> <span data-ttu-id="f1922-119">Consulte el objeto Diagnostics para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="f1922-119">Please look at the diagnostics object for more information.</span></span></td><td><span data-ttu-id="f1922-120">Mensaje de error del servidor Exchange en un objeto JSON por ejemplo,`{"ErrorText": "The mailbox database is temporarily unavailable"}`</span><span class="sxs-lookup"><span data-stu-id="f1922-120">The error message from the Exchange server in a JSON object e.g., `{"ErrorText": "The mailbox database is temporarily unavailable"}`</span></span></td></tr> </table>
    name: diagnostics
    fullName: diagnostics
    langs:
      - typeScript
    type: property
    syntax:
      content: 'diagnostics: any;'
      return:
        type:
          - any
  - uid: office.Office.AsyncResult.error
    summary: '<span data-ttu-id="f1922-121">Obtiene un objeto [Office. error](xref:office.Office.Error) que proporciona una descripción del error, en caso de que se produzca un error.</span><span class="sxs-lookup"><span data-stu-id="f1922-121">Gets an [Office.Error](xref:office.Office.Error) object that provides a description of the error, if any error occurred.</span></span>'
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'error: Office.Error;'
      return:
        type:
          - office.Office.Error
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f1922-122">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="f1922-122">Examples</span></span>

          ```javascript
          function getData() {
              Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write(asyncResult.error.message);
                  }
                  else {
                      write(asyncResult.value);
                  }
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.AsyncResult.status
    summary: '<span data-ttu-id="f1922-123">Obtiene el [Office. AsyncResultStatus](xref:office.Office.AsyncResultStatus) de la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="f1922-123">Gets the [Office.AsyncResultStatus](xref:office.Office.AsyncResultStatus) of the asynchronous operation.</span></span>'
    name: status
    fullName: status
    langs:
      - typeScript
    type: property
    syntax:
      content: 'status: AsyncResultStatus;'
      return:
        type:
          - office.Office.AsyncResultStatus
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f1922-124">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="f1922-124">Examples</span></span>

          ```javascript
          function getData() {
              Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write(asyncResult.error.message);
                  }
                  else {
                      write(asyncResult.value);
                  }
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.AsyncResult.value
    summary: '<span data-ttu-id="f1922-125">Obtiene la carga o el contenido de una operación asincrónica, si la hay.</span><span class="sxs-lookup"><span data-stu-id="f1922-125">Gets the payload or content of this asynchronous operation, if any.</span></span>'
    remarks: |-
      <span data-ttu-id="f1922-126">Se obtiene acceso al objeto AsyncResult en la función que se ha remitido como argumento al parámetro callback de un método "Async" `getSelectedDataAsync` , `setSelectedDataAsync` como los métodos y del objeto [Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="f1922-126">You access the AsyncResult object in the function passed as the argument to the callback parameter of an "Async" method, such as the `getSelectedDataAsync` and `setSelectedDataAsync` methods of the [Document](xref:office.Office.Document) object.</span></span>

      <span data-ttu-id="f1922-127">**Nota**: el valor que devuelve la propiedad Value para un método "Async" determinado varía en función de la finalidad y el contexto del método.</span><span class="sxs-lookup"><span data-stu-id="f1922-127">**Note**: What the value property returns for a particular "Async" method varies depending on the purpose and context of that method.</span></span> <span data-ttu-id="f1922-128">To determine what is returned by the value property for an "Async" method, refer to the "Callback value" section of the method's topic.</span><span class="sxs-lookup"><span data-stu-id="f1922-128">To determine what is returned by the value property for an "Async" method, refer to the "Callback value" section of the method's topic.</span></span>

      #### <a name="examples"></a><span data-ttu-id="f1922-129">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="f1922-129">Examples</span></span>

      ```javascript
      function getData() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
              if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                  write(asyncResult.error.message);
              }
              else {
                  write(asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: T;'
      return:
        type:
          - T