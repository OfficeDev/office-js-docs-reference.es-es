### YamlMime:UniversalReference
items:
  - uid: 'office!Office.AsyncResult:interface'
    summary: |-
      Un objeto que encapsula el resultado de una solicitud asincrónica, incluida la información de estado y error si la solicitud falla.

      Cuando la función que se pasa al `callback` parámetro de un método "Async" se ejecute, recibirá un objeto asyncResult al que puede obtener acceso desde el `callback` único parámetro de la función.
    name: Office.AsyncResult
    fullName: Office.AsyncResult
    langs:
      - typeScript
    type: interface
    syntax:
      typeParameters:
        - id: T
    package: office!
    remarks: |-


      #### <a name="examples"></a>Ejemplos

      ```javascript
      // The following is an example applicable to content and task pane add-ins.
      // The example shows a call to the getSelectedDataAsync method of the Document object.
      Office.context.document.getSelectedDataAsync("text", {
              valueFormat: "unformatted",
              filterType: "all"
          },
          function (result) {
              if (result.status === Office.AsyncResultStatus.Succeeded) {
                  var dataValue = result.value; // Get selected data.
                  console.log('Selected data is ' + dataValue);
              } else {
                  var err = result.error;
                  console.log(err.name + ": " + err.message);
              }
          });
      // The anonymous function passed as the callback argument ( function (result){...}) has a single 
      // parameter named result that provides access to an AsyncResult object when the function executes.
      // When the call to the getSelectedDataAsync method completes, the callback function executes, 
      // and the following line of code accesses the value property of the AsyncResult object to 
      // return the data selected in the document:
      var dataValue = result.value;
      // Note that other lines of code in the function use the result parameter of the callback function 
      // to access the status and error properties of the AsyncResult object.
      ```
    children:
      - 'office!Office.AsyncResult#asyncContext:member'
      - 'office!Office.AsyncResult#diagnostics:member'
      - 'office!Office.AsyncResult#error:member'
      - 'office!Office.AsyncResult#status:member'
      - 'office!Office.AsyncResult#value:member'
  - uid: 'office!Office.AsyncResult#asyncContext:member'
    summary: 'Obtiene el elemento definido por el usuario que se ha pasado al `asyncContext` parámetro opcional del método invocado, en el mismo estado en el que se pasó. Esto devuelve el elemento definido por el usuario (que puede ser de cualquier tipo JavaScript: String, Number, Boolean, Object, array, null o undefined) que se pasa al `asyncContext` parámetro opcional del método invocado. Si no se envió ningún elemento al parámetro asyncContext, devuelve Undefined.'
    name: asyncContext
    fullName: asyncContext
    langs:
      - typeScript
    type: property
    syntax:
      content: 'asyncContext: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          function getDataWithContext() {
              var format = "Your data: ";
              Office.context.document.getSelectedDataAsync(
                  Office.CoercionType.Text, 
                  { asyncContext: format }, 
                  showDataWithContext);
          }

          function showDataWithContext(asyncResult) {
              write(asyncResult.asyncContext + asyncResult.value);
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.AsyncResult#diagnostics:member'
    summary: 'Obtiene un objeto que puede proporcionar información adicional si se produce un [error](xref:office!Office.Error:interface) .'
    remarks: |-
      Esta propiedad devuelve información adicional si se producen los siguientes errores con estas API admitidas.

      *API admitidas*

      `Office.context.mailbox.item.getCallbackTokenAsync`<!-- -->, `Office.context.mailbox.item.getUserIdentityTokenAsync`

      *Errores admitidos* <table> <tr><th>`AsyncResult.error.name` </th><th>`AsyncResult.error.message` </th><th>Descripción del objeto Diagnostics devuelto </th></tr> <tr><td><strong>HTTPRequestFailure</strong> </td><td>Se ha producido un error en la solicitud. Compruebe el objeto de diagnóstico para ver el código de error HTTP. </td><td>El código de error HTTP en un objeto JSON por ejemplo,`{"HTTPCode":"401"}` </td></tr> <tr><td><strong>InternalServerError</strong></td><td>El servidor de Exchange devolvió un error. Compruebe el objeto de diagnóstico para obtener más información.</td><td>Mensaje de error del servidor Exchange en un objeto JSON por ejemplo,`{"ErrorText": "The mailbox database is temporarily unavailable"}`</td></tr> </table>
    name: diagnostics
    fullName: diagnostics
    langs:
      - typeScript
    type: property
    syntax:
      content: 'diagnostics: any;'
      return:
        type:
          - any
  - uid: 'office!Office.AsyncResult#error:member'
    summary: 'Obtiene un objeto [Office. error](xref:office!Office.Error:interface) que proporciona una descripción del error, en caso de que se produzca un error.'
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'error: Office.Error;'
      return:
        type:
          - 'office!Office.Error:interface'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          function getData() {
              Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write(asyncResult.error.message);
                  }
                  else {
                      write(asyncResult.value);
                  }
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.AsyncResult#status:member'
    summary: 'Obtiene el [Office. AsyncResultStatus](xref:office!Office.AsyncResultStatus:enum) de la operación asincrónica.'
    name: status
    fullName: status
    langs:
      - typeScript
    type: property
    syntax:
      content: 'status: AsyncResultStatus;'
      return:
        type:
          - 'office!Office.AsyncResultStatus:enum'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          function getData() {
              Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write(asyncResult.error.message);
                  }
                  else {
                      write(asyncResult.value);
                  }
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.AsyncResult#value:member'
    summary: 'Obtiene la carga o el contenido de una operación asincrónica, si la hay.'
    remarks: |-
      Se obtiene acceso al objeto AsyncResult en la función que se ha remitido como argumento al parámetro callback de un método "Async", como los `getSelectedDataAsync` `setSelectedDataAsync` métodos y del objeto [Document](xref:office!Office.Document:interface) .

      **Nota**: el valor que devuelve la propiedad Value para un método "Async" determinado varía en función de la finalidad y el contexto del método. To determine what is returned by the value property for an "Async" method, refer to the "Callback value" section of the method's topic.

      #### <a name="examples"></a>Ejemplos

      ```javascript
      function getData() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
              if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                  write(asyncResult.error.message);
              }
              else {
                  write(asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: T;'
      return:
        type:
          - T
references:
  - uid: 'office!Office.Error:interface'
    name: Office.Error
  - uid: 'office!Office.AsyncResultStatus:enum'
    name: AsyncResultStatus