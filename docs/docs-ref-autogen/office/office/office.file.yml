### YamlMime:UniversalReference
items:
  - uid: 'office!Office.File:interface'
    summary: Representa el archivo de documento asociado a un complemento de Office.
    remarks: Obtener acceso al objeto File con la propiedad AsyncResult. Value de la función de devolución de llamada que se ha remitido al método document. getFileAsync.
    name: Office.File
    fullName: Office.File
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.File#closeAsync:member(1)'
      - 'office!Office.File#getSliceAsync:member(1)'
      - 'office!Office.File#size:member'
      - 'office!Office.File#sliceCount:member'
  - uid: 'office!Office.File#closeAsync:member(1)'
    summary: Cierra el archivo de documento.
    remarks: |-
      **Conjunto de requisitos**: [archivo](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)

      No se permite que haya más de dos documentos en la memoria; de lo contrario, la operación Document.getFileAsync fallará. Use el método File.closeAsync para cerrar el archivo cuando haya terminado de trabajar con él.

      En la función de devolución de llamada que se ha remitido al método closeAsync, puede usar las propiedades del objeto AsyncResult para devolver la siguiente información.

      <table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Devuelve siempre undefined porque no hay ningún objeto o dato que recuperar.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si no se ha completado correctamente la operación.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>
    name: closeAsync(callback)
    fullName: closeAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'closeAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.'
          type:
            - 'office!Office.File#closeAsync~0:complex'
  - uid: 'office!Office.File#getSliceAsync:member(1)'
    summary: Devuelve el segmento especificado.
    remarks: |-
      **Conjunto de requisitos**: [archivo](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)

      In the callback function passed to the getSliceAsync method, you can use the properties of the AsyncResult object to return the following information.

      <table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Tener acceso al objeto Slice.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si no se ha completado correctamente la operación.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>
    name: 'getSliceAsync(sliceIndex, callback)'
    fullName: 'getSliceAsync(sliceIndex, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSliceAsync(sliceIndex: number, callback?: (result: AsyncResult<Office.Slice>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sliceIndex
          description: Especifica el índice de base cero del segmento que hay que recuperar. Necesario.
          type:
            - number
        - id: callback
          description: 'Opcional. Una función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office. asyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. La `value` propiedad del resultado es el objeto [Office. Slice](xref:office!Office.Slice:interface) .'
          type:
            - 'office!Office.File#getSliceAsync~0:complex'
  - uid: 'office!Office.File#size:member'
    summary: Obtiene el tamaño del archivo de documento en bytes.
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
  - uid: 'office!Office.File#sliceCount:member'
    summary: Obtiene el número de segmentos en los que está dividido el archivo.
    name: sliceCount
    fullName: sliceCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sliceCount: number;'
      return:
        type:
          - number
references:
  - uid: 'office!Office.File#closeAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.File#getSliceAsync~0:complex'
    name: '(result: AsyncResult<Office.Slice>) => void'
    fullName: '(result: Office.AsyncResult<Office.Slice>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Slice:interface'
        name: Office.Slice
        fullName: Office.Slice
      - name: '>) => void'
        fullName: '>) => void'