### YamlMime:TSType
name: Office.File
uid: office!Office.File:interface
package: office!
fullName: Office.File
summary: Representa el archivo de documento asociado a un complemento de Office.
remarks: Obtenga acceso al objeto File con la propiedad AsyncResult.value en la función de devolución de llamada pasada al método Document.getFileAsync.
isPreview: false
isDeprecated: false
type: interface
properties:
- name: size
  uid: office!Office.File#size:member
  package: office!
  fullName: size
  summary: Obtiene el tamaño del archivo de documento en bytes.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'size: number;'
    return:
      type: number
- name: sliceCount
  uid: office!Office.File#sliceCount:member
  package: office!
  fullName: sliceCount
  summary: Obtiene el número de segmentos en los que está dividido el archivo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sliceCount: number;'
    return:
      type: number
methods:
- name: closeAsync(callback)
  uid: office!Office.File#closeAsync:member(1)
  package: office!
  fullName: closeAsync(callback)
  summary: Cierra el archivo de documento.
  remarks: >-
    **Conjunto de requisitos**: [Archivo](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)


    No se permite que haya más de dos documentos en la memoria; de lo contrario, la operación Document.getFileAsync fallará. Use el método File.closeAsync para cerrar el archivo cuando haya terminado de trabajar con él.


    En la función de devolución de llamada que se ha remitido al método closeAsync, puede usar las propiedades del objeto AsyncResult para devolver la siguiente información.


    <table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Devuelve siempre undefined porque no hay ningún objeto o dato que recuperar.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si no se ha completado correctamente la operación.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'closeAsync(callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Opcional. Función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getSliceAsync(sliceIndex, callback)
  uid: office!Office.File#getSliceAsync:member(1)
  package: office!
  fullName: getSliceAsync(sliceIndex, callback)
  summary: Devuelve el segmento especificado.
  remarks: "**Conjunto de requisitos**: [Archivo](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)\n\nIn the callback function passed to the getSliceAsync method, you can use the properties of the AsyncResult object to return the following information.\n\n<table> <tr> <th>Propiedad</th> <th>Usar para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Tener acceso al objeto Slice.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar si la operación se ha completado correctamente o no.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Tener acceso a un objeto Error que proporcione información sobre el error si no se ha completado correctamente la operación.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Un elemento de cualquier tipo definido por el usuario que se devuelve en el objeto AsyncResult sin sufrir modificaciones.</td> </tr> </table>\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// This sample shows how to get all the slices of a file. \n// The asynchronous operation returns a Promise so it can be awaited.\nprivate getAllSlices(file: any): Promise<any> {\n    var self = this;\n    var isError = false;\n\n    return new Promise(async (resolve, reject) => {\n        var documentFileData = [];\n        for (var sliceIndex = 0; (sliceIndex < file.sliceCount) && !isError; sliceIndex++) {\n            var sliceReadPromise = new Promise((sliceResolve, sliceReject) => {\n                file.getSliceAsync(sliceIndex, (asyncResult) => {\n                    if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n                        documentFileData = documentFileData.concat(asyncResult.value.data);\n                        sliceResolve({\n                            IsSuccess: true,\n                            Data: documentFileData\n                        });\n                    } else {\n                        file.closeAsync();\n                        sliceReject({\n                            IsSuccess: false,\n                            ErrorMessage: `Error in reading the slice: ${sliceIndex} of the document`\n                        });\n                    }\n                });\n            });\n            await sliceReadPromise.catch((error) => {\n                isError = true;\n            });\n        }\n\n        if (isError || !documentFileData.length) {\n            reject('Error while reading document. Please try it again.');\n            return;\n        }\n\n        file.closeAsync();\n\n        resolve({\n            IsSuccess: true,\n            Data: documentFileData\n        });\n    });\n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSliceAsync(sliceIndex: number, callback?: (result: AsyncResult<Office.Slice>) => void): void;'
    parameters:
    - id: sliceIndex
      description: Especifica el índice de base cero del segmento que hay que recuperar. Necesario.
      type: number
    - id: callback
      description: Opcional. Función que se invoca cuando se devuelve la devolución de llamada, cuyo único parámetro es de tipo [Office.AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. La `value` propiedad del resultado es el objeto [Office.Slice.](xref:office!Office.Slice:interface)
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Slice:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 86beb27ff140734a445272a2236e141c12e34263
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51307261"
