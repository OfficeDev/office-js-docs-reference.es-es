### YamlMime:UniversalReference
ms.openlocfilehash: 42466a5288cabb1db2887aad482991dab6115b1d
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30097952"
items:
- uid: visio.Visio.CommentCollection
  summary: >-
    <span data-ttu-id="822b4-101">Representa el elemento CommentCollection de una forma determinada.</span><span class="sxs-lookup"><span data-stu-id="822b4-101">Represents the CommentCollection for a given Shape.</span></span>


    <span data-ttu-id="822b4-102">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="822b4-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.CommentCollection
  fullName: Visio.CommentCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.CommentCollection.getCount
  - visio.Visio.CommentCollection.getItem
  - visio.Visio.CommentCollection.items
  - visio.Visio.CommentCollection.load
  - visio.Visio.CommentCollection.load_1
  - visio.Visio.CommentCollection.load_2
  - visio.Visio.CommentCollection.toJSON
- uid: visio.Visio.CommentCollection.getCount
  summary: >-
    <span data-ttu-id="822b4-103">Obtiene el número de comentarios.</span><span class="sxs-lookup"><span data-stu-id="822b4-103">Gets the number of Comments.</span></span>


    <span data-ttu-id="822b4-104">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="822b4-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.CommentCollection.getItem
  summary: >-
    <span data-ttu-id="822b4-105">Obtiene el comentario por medio de su nombre.</span><span class="sxs-lookup"><span data-stu-id="822b4-105">Gets the Comment using its name.</span></span>


    <span data-ttu-id="822b4-106">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="822b4-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="822b4-107">"Key" corresponde al nombre del comentario que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="822b4-107">Key is the name of the Comment to be retrieved.</span></span>
      type:
      - string
- uid: visio.Visio.CommentCollection.items
  summary: <span data-ttu-id="822b4-108">Obtiene los elementos secundarios cargados de esta colección.</span><span class="sxs-lookup"><span data-stu-id="822b4-108">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Comment[];'
    return:
      type:
      - Visio.Comment[]
- uid: visio.Visio.CommentCollection.load
  summary: <span data-ttu-id="822b4-109">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="822b4-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="822b4-110">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="822b4-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="822b4-111">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="822b4-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="822b4-112">`load(option?: string | string[]): Visio.CommentCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="822b4-112">`load(option?: string | string[]): Visio.CommentCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="822b4-113">`load(option?: { select?: string; expand?: string; }): Visio.CommentCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="822b4-113">`load(option?: { select?: string; expand?: string; }): Visio.CommentCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="822b4-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="822b4-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection` - Only available on collection types.</span></span> <span data-ttu-id="822b4-115">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="822b4-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="822b4-116">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="822b4-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="822b4-117">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="822b4-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="822b4-118">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="822b4-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="822b4-119">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="822b4-119">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.CommentCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.CommentCollection;'
    return:
      type:
      - Visio.CommentCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.CommentCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.CommentCollection.load_1
  summary: <span data-ttu-id="822b4-120">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="822b4-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="822b4-121">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="822b4-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.CommentCollection;'
    return:
      type:
      - Visio.CommentCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="822b4-122">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="822b4-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.CommentCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.CommentCollection;'
    return:
      type:
      - Visio.CommentCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.CommentCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentCollectionData;'
    return:
      type:
      - Visio.Interfaces.CommentCollectionData
      description: ''
