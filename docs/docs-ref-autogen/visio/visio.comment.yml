### YamlMime:UniversalReference
ms.openlocfilehash: 00ae7bcdacc66d5a320c026e3950d5fb570ccb46
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30094235"
items:
- uid: visio.Visio.Comment
  summary: >-
    <span data-ttu-id="2d2c9-101">Representa el comentario.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-101">Represents the Comment.</span></span>


    <span data-ttu-id="2d2c9-102">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2d2c9-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Comment
  fullName: Visio.Comment
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Comment.author
  - visio.Visio.Comment.date
  - visio.Visio.Comment.load
  - visio.Visio.Comment.load_1
  - visio.Visio.Comment.load_2
  - visio.Visio.Comment.set
  - visio.Visio.Comment.set_1
  - visio.Visio.Comment.text
  - visio.Visio.Comment.toJSON
- uid: visio.Visio.Comment.author
  summary: >-
    <span data-ttu-id="2d2c9-103">Cadena que especifica el nombre del autor del comentario.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-103">A string that specifies the name of the author of the comment.</span></span>


    <span data-ttu-id="2d2c9-104">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2d2c9-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: author
  fullName: author
  langs:
  - typeScript
  type: property
  syntax:
    content: 'author: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.date
  summary: >-
    <span data-ttu-id="2d2c9-105">Cadena que especifica la fecha de creación del comentario.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-105">A string that specifies the date when the comment was created.</span></span>


    <span data-ttu-id="2d2c9-106">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2d2c9-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.load
  summary: <span data-ttu-id="2d2c9-107">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2d2c9-108">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="2d2c9-109">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="2d2c9-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="2d2c9-110">`load(option?: string | string[]): Visio.Comment`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-110">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="2d2c9-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="2d2c9-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="2d2c9-113">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="2d2c9-114">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2d2c9-115">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2d2c9-116">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="2d2c9-117">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2d2c9-117">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.CommentLoadOptions
- uid: visio.Visio.Comment.load_1
  summary: <span data-ttu-id="2d2c9-118">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2d2c9-119">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="2d2c9-120">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Comment.load_2
  summary: <span data-ttu-id="2d2c9-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2d2c9-122">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-122">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
    return:
      type:
      - Visio.Comment
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="2d2c9-123">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-123">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Comment.set
  summary: <span data-ttu-id="2d2c9-124">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="2d2c9-125">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="2d2c9-126">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="2d2c9-126">This method has the following additional signature:</span></span>


    `set(properties: Visio.Comment): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="2d2c9-127">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.CommentUpdateData
    - id: options
      description: <span data-ttu-id="2d2c9-128">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Comment.set_1
  summary: <span data-ttu-id="2d2c9-129">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Comment): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Visio.Comment
- uid: visio.Visio.Comment.text
  summary: >-
    <span data-ttu-id="2d2c9-130">Cadena que contiene el texto del comentario.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-130">A string that contains the comment text.</span></span>


    <span data-ttu-id="2d2c9-131">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2d2c9-131">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentData;'
    return:
      type:
      - Visio.Interfaces.CommentData
      description: ''
