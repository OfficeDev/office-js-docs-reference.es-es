### YamlMime:UniversalReference
ms.openlocfilehash: c7617837624fb7fbad977c4d5ec1a417b4084867
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 11/09/2018
ms.locfileid: "26225073"
items:
- uid: visio.Visio.PageCollection
  summary: >-
    <span data-ttu-id="73251-101">Representa una colección de objetos Page que forman parte del documento.</span><span class="sxs-lookup"><span data-stu-id="73251-101">Represents a collection of Page objects that are part of the document.</span></span>


    <span data-ttu-id="73251-102">\[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="73251-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageCollection
  fullName: Visio.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageCollection.getCount
  - visio.Visio.PageCollection.getItem
  - visio.Visio.PageCollection.items
  - visio.Visio.PageCollection.load
  - visio.Visio.PageCollection.toJSON
- uid: visio.Visio.PageCollection.getCount
  summary: >-
    <span data-ttu-id="73251-103">Obtiene el número de páginas de una colección.</span><span class="sxs-lookup"><span data-stu-id="73251-103">Gets the number of pages in the collection.</span></span>


    <span data-ttu-id="73251-104">\[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="73251-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.PageCollection.getItem
  summary: >-
    <span data-ttu-id="73251-105">Obtiene una página mediante su clave (nombre o identificador).</span><span class="sxs-lookup"><span data-stu-id="73251-105">Gets a page using its key (name or Id).</span></span>


    <span data-ttu-id="73251-106">\[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="73251-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"73251-107\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"73251-107\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pageName = 'Page-1';\n    var page = ctx.document.pages.getItem(pageName);\n    page.activate();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="73251-108">Clave es el nombre o el identificador de la página que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="73251-108">Key is the name or Id of the page to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.PageCollection.items
  summary: <span data-ttu-id="73251-109">Obtiene al secundario cargado los elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="73251-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Page[];'
    return:
      type:
      - Visio.Page[]
- uid: visio.Visio.PageCollection.load
  summary: <span data-ttu-id="73251-110">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="73251-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="73251-111">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="73251-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="73251-112">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="73251-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="73251-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="73251-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="73251-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="73251-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id="73251-115">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="73251-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="73251-116">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="73251-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="73251-117">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="73251-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="73251-118">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="73251-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="73251-119">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="73251-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
    return:
      type:
      - Visio.Interfaces.PageCollectionData
      description: ''
