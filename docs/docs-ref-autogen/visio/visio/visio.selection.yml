### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Selection
    summary: |-
      <span data-ttu-id="3847c-101">Representa la selección de la página.</span><span class="sxs-lookup"><span data-stu-id="3847c-101">Represents the Selection in the page.</span></span>

      <span data-ttu-id="3847c-102">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3847c-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Selection
    fullName: Visio.Selection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: visio
    children:
      - visio.Visio.Selection.context
      - visio.Visio.Selection.load
      - visio.Visio.Selection.load_1
      - visio.Visio.Selection.shapes
      - visio.Visio.Selection.toJSON
  - uid: visio.Visio.Selection.context
    summary: <span data-ttu-id="3847c-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="3847c-103">The request context associated with the object.</span></span> <span data-ttu-id="3847c-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="3847c-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - visio.Visio.RequestContext
  - uid: visio.Visio.Selection.load
    summary: <span data-ttu-id="3847c-105">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="3847c-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3847c-106">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3847c-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3847c-107">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="3847c-107">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Selection.load_1
    summary: <span data-ttu-id="3847c-108">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="3847c-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3847c-109">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3847c-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="3847c-110">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="3847c-110">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Selection.shapes
    summary: |-
      <span data-ttu-id="3847c-111">Obtiene las formas de la selección.</span><span class="sxs-lookup"><span data-stu-id="3847c-111">Gets the Shapes of the Selection.</span></span> <span data-ttu-id="3847c-112">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="3847c-112">Read-only.</span></span>

      <span data-ttu-id="3847c-113">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3847c-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Visio.ShapeCollection;'
      return:
        type:
          - visio.Visio.ShapeCollection
  - uid: visio.Visio.Selection.toJSON
    summary: '<span data-ttu-id="3847c-114">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3847c-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3847c-115">.</span><span class="sxs-lookup"><span data-stu-id="3847c-115"></span></span> <span data-ttu-id="3847c-116">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3847c-116"></span></span><!-- --><span data-ttu-id="3847c-117">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Visio. Selection original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Visio.Interfaces.SelectionData`</span><span class="sxs-lookup"><span data-stu-id="3847c-117">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Selection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.SelectionData`</span></span><!-- --><span data-ttu-id="3847c-118">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="3847c-118">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.SelectionData;'
      return:
        type:
          - visio.Visio.Interfaces.SelectionData
        description: ''