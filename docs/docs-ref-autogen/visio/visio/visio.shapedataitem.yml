### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeDataItem:class'
    summary: |-
      Representa el elemento ShapeDataItem.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.ShapeDataItem
    fullName: Visio.ShapeDataItem
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.ShapeDataItem#context:member'
      - 'visio!Visio.ShapeDataItem#format:member'
      - 'visio!Visio.ShapeDataItem#formattedValue:member'
      - 'visio!Visio.ShapeDataItem#label:member'
      - 'visio!Visio.ShapeDataItem#load:member(1)'
      - 'visio!Visio.ShapeDataItem#load:member(2)'
      - 'visio!Visio.ShapeDataItem#load:member(3)'
      - 'visio!Visio.ShapeDataItem#toJSON:member(1)'
      - 'visio!Visio.ShapeDataItem#value:member'
  - uid: 'visio!Visio.ShapeDataItem#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.ShapeDataItem#format:member'
    summary: |-
      Cadena que especifica el formato del elemento de datos de formas. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeDataItem#formattedValue:member'
    summary: |-
      Cadena que especifica el valor con formato del elemento de datos de formas. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: formattedValue
    fullName: formattedValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly formattedValue: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeDataItem#label:member'
    summary: |-
      Una cadena que especifica la etiqueta del elemento de datos de formas. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly label: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeDataItem#load:member(1)'
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Visio.ShapeDataItem`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItem`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItem`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.

      #### <a name="examples"></a>Ejemplos

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var shapeDataItem = shape.shapeDataItems.getItem(0);
          shapeDataItem.load(["label", "value"]);
              return ctx.sync().then(function() {
                  console.log(shapeDataItem.label);
                  console.log(shapeDataItem.value);
              });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeDataItemLoadOptions): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.ShapeDataItemLoadOptions:interface'
  - uid: 'visio!Visio.ShapeDataItem#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.ShapeDataItem#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.ShapeDataItem#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Visio. ShapeDataItem original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Visio.Interfaces.ShapeDataItemData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeDataItemData:interface'
        description: ''
  - uid: 'visio!Visio.ShapeDataItem#value:member'
    summary: |-
      Una cadena que especifica el valor del elemento de datos de formas. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: string;'
      return:
        type:
          - string
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.ShapeDataItem:class'
    name: Visio.ShapeDataItem
  - uid: 'visio!Visio.Interfaces.ShapeDataItemLoadOptions:interface'
    name: Visio.Interfaces.ShapeDataItemLoadOptions
  - uid: 'visio!Visio.Interfaces.ShapeDataItemData:interface'
    name: Visio.Interfaces.ShapeDataItemData