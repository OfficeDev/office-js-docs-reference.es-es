### YamlMime:TSType
name: Visio.ShapeDataItem
uid: visio!Visio.ShapeDataItem:class
package: visio!
fullName: Visio.ShapeDataItem
summary: >-
  Representa el elemento ShapeDataItem.


  \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeDataItem#context:member
  package: visio!
  fullName: context
  summary: Contexto de solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: format
  uid: visio!Visio.ShapeDataItem#format:member
  package: visio!
  fullName: format
  summary: >-
    Cadena que especifica el formato del elemento de datos de formas. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: string;'
    return:
      type: string
- name: formattedValue
  uid: visio!Visio.ShapeDataItem#formattedValue:member
  package: visio!
  fullName: formattedValue
  summary: >-
    Cadena que especifica el valor con formato del elemento de datos de formas. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly formattedValue: string;'
    return:
      type: string
- name: label
  uid: visio!Visio.ShapeDataItem#label:member
  package: visio!
  fullName: label
  summary: >-
    Una cadena que especifica la etiqueta del elemento de datos de formas. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly label: string;'
    return:
      type: string
- name: value
  uid: visio!Visio.ShapeDataItem#value:member
  package: visio!
  fullName: value
  summary: >-
    Una cadena que especifica el valor del elemento de datos de formas. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: string;'
    return:
      type: string
methods:
- name: load(option)
  uid: visio!Visio.ShapeDataItem#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Visio.ShapeDataItem` - Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItem` - Donde option.select es una cadena delimitada por comas que especifica las propiedades que se cargarán y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación que se cargarán.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItem` - Solo disponible en tipos de colección. Es similar a la firma anterior. Option.top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. Option.skip especifica el número de elementos que se van a omitir y que no se incluyen en el resultado. Si se especifica option.top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.


    #### <a name="examples"></a>Ejemplos


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        var shapeDataItem = shape.shapeDataItems.getItem(0);
        shapeDataItem.load(["label", "value"]);
            return ctx.sync().then(function() {
                console.log(shapeDataItem.label);
                console.log(shapeDataItem.value);
            });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeDataItemLoadOptions): Visio.ShapeDataItem;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeDataItem#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItem;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItem#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): Visio.ShapeDataItem;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeDataItem#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Invalida el método JavaScript para proporcionar resultados más útiles cuando se pasa un objeto API a `toJSON()``JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se pasa a él). Mientras que el objeto Visio.ShapeDataItem original es un objeto API, el método devuelve un objeto JavaScript sin formato `toJSON` (con el tipo como `Visio.Interfaces.ShapeDataItemData`<!-- -->) que contiene copias superficiales de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeDataItemData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4401373e466c71b9208deb97190f442b24ee9fce
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50539916"
