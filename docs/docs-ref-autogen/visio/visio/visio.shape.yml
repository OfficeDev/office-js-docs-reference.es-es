### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Shape:class'
    summary: |-
      Representa la clase Shape.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.Shape
    fullName: Visio.Shape
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Shape#comments:member'
      - 'visio!Visio.Shape#context:member'
      - 'visio!Visio.Shape#getBounds:member(1)'
      - 'visio!Visio.Shape#hyperlinks:member'
      - 'visio!Visio.Shape#id:member'
      - 'visio!Visio.Shape#load:member(1)'
      - 'visio!Visio.Shape#load:member(2)'
      - 'visio!Visio.Shape#load:member(3)'
      - 'visio!Visio.Shape#name:member'
      - 'visio!Visio.Shape#select:member'
      - 'visio!Visio.Shape#set:member(1)'
      - 'visio!Visio.Shape#set:member(2)'
      - 'visio!Visio.Shape#shapeDataItems:member'
      - 'visio!Visio.Shape#subShapes:member'
      - 'visio!Visio.Shape#text:member'
      - 'visio!Visio.Shape#toJSON:member(1)'
      - 'visio!Visio.Shape#view:member'
  - uid: 'visio!Visio.Shape#comments:member'
    summary: |-
      Devuelve la colección de comentarios. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Visio.CommentCollection;'
      return:
        type:
          - 'visio!Visio.CommentCollection:class'
  - uid: 'visio!Visio.Shape#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Shape#getBounds:member(1)'
    summary: |-
      Devuelve el objeto BoundingBox que especifica el cuadro de límite de la forma.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: getBounds()
    fullName: getBounds()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
      return:
        type:
          - 'visio!Visio.Shape#getBounds~0:complex'
        description: ''
  - uid: 'visio!Visio.Shape#hyperlinks:member'
    summary: |-
      Devuelve la colección hipervínculos para un objeto de forma. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: hyperlinks
    fullName: hyperlinks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
      return:
        type:
          - 'visio!Visio.HyperlinkCollection:class'
  - uid: 'visio!Visio.Shape#id:member'
    summary: |-
      Identificador de la forma. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'visio!Visio.Shape#load:member(1)'
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Visio.Shape`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Visio.Shape`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
      return:
        type:
          - 'visio!Visio.Shape:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.ShapeLoadOptions:interface'
  - uid: 'visio!Visio.Shape#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Shape;'
      return:
        type:
          - 'visio!Visio.Shape:class'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shapeName = "Sample Name";
              var shape = activePage.shapes.getItem(shapeName);
              shape.load(["name", "id", "text", "select"]);
              return ctx.sync().then(function () {
                  console.log(shape.name);
                  console.log(shape.id);
                  console.log(shape.text);
                  console.log(shape.select);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.highlight = { color: "#E7E7E7", width: 100 };
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Shape#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
      return:
        type:
          - 'visio!Visio.Shape:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Shape#name:member'
    summary: |-
      Nombre de la forma. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Shape#select:member'
    summary: |-
      Devuelve True, si la forma está seleccionada. Usuario puede establecer True para seleccionar la forma explícitamente.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: select
    fullName: select
    langs:
      - typeScript
    type: property
    syntax:
      content: 'select: boolean;'
      return:
        type:
          - boolean
  - uid: 'visio!Visio.Shape#set:member(1)'
    summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
    remarks: |-
      Este método tiene la siguiente firma adicional:

      `set(properties: Visio.Shape): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
          type:
            - 'visio!Visio.Interfaces.ShapeUpdateData:interface'
        - id: options
          description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Shape#set:member(2)'
    summary: 'Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Shape): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Shape:class'
  - uid: 'visio!Visio.Shape#shapeDataItems:member'
    summary: |-
      Devuelve la sección de datos de la forma. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: shapeDataItems
    fullName: shapeDataItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
  - uid: 'visio!Visio.Shape#subShapes:member'
    summary: |-
      Obtiene la colección de subformas. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: subShapes
    fullName: subShapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subShapes: Visio.ShapeCollection;'
      return:
        type:
          - 'visio!Visio.ShapeCollection:class'
  - uid: 'visio!Visio.Shape#text:member'
    summary: |-
      Texto de la forma. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Shape#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Visio. Shape original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Visio.Interfaces.ShapeData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeData:interface'
        description: ''
  - uid: 'visio!Visio.Shape#view:member'
    summary: |-
      Devuelve la vista de la forma. Solo lectura.

      \[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.ShapeView;'
      return:
        type:
          - 'visio!Visio.ShapeView:class'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.CommentCollection:class'
    name: Visio.CommentCollection
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Shape#getBounds~0:complex'
    name: OfficeExtension.ClientResult<Visio.BoundingBox>
    fullName: OfficeExtension.ClientResult<Visio.BoundingBox>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'visio!Visio.BoundingBox:interface'
        name: Visio.BoundingBox
        fullName: Visio.BoundingBox
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.HyperlinkCollection:class'
    name: Visio.HyperlinkCollection
  - uid: 'visio!Visio.Shape:class'
    name: Visio.Shape
  - uid: 'visio!Visio.Interfaces.ShapeLoadOptions:interface'
    name: Visio.Interfaces.ShapeLoadOptions
  - uid: 'visio!Visio.Interfaces.ShapeUpdateData:interface'
    name: Interfaces.ShapeUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    name: Visio.ShapeDataItemCollection
  - uid: 'visio!Visio.ShapeCollection:class'
    name: Visio.ShapeCollection
  - uid: 'visio!Visio.Interfaces.ShapeData:interface'
    name: Visio.Interfaces.ShapeData
  - uid: 'visio!Visio.ShapeView:class'
    name: Visio.ShapeView