### YamlMime:TSType
name: Visio.Shape
uid: visio!Visio.Shape:class
package: visio!
fullName: Visio.Shape
summary: >-
  Representa la clase Shape.


  \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: comments
  uid: visio!Visio.Shape#comments:member
  package: visio!
  fullName: comments
  summary: >-
    Devuelve la colección de comentarios. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
- name: context
  uid: visio!Visio.Shape#context:member
  package: visio!
  fullName: context
  summary: Contexto de solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: hyperlinks
  uid: visio!Visio.Shape#hyperlinks:member
  package: visio!
  fullName: hyperlinks
  summary: >-
    Devuelve la colección hipervínculos para un objeto de forma. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
- name: id
  uid: visio!Visio.Shape#id:member
  package: visio!
  fullName: id
  summary: >-
    Identificador de la forma. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: name
  uid: visio!Visio.Shape#name:member
  package: visio!
  fullName: name
  summary: >-
    Nombre de la forma. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: select
  uid: visio!Visio.Shape#select:member
  package: visio!
  fullName: select
  summary: >-
    Devuelve True, si la forma está seleccionada. Usuario puede establecer True para seleccionar la forma explícitamente.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select: boolean;'
    return:
      type: boolean
- name: shapeDataItems
  uid: visio!Visio.Shape#shapeDataItems:member
  package: visio!
  fullName: shapeDataItems
  summary: >-
    Devuelve la sección de datos de la forma. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
- name: subShapes
  uid: visio!Visio.Shape#subShapes:member
  package: visio!
  fullName: subShapes
  summary: >-
    Obtiene la colección de subformas. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
- name: text
  uid: visio!Visio.Shape#text:member
  package: visio!
  fullName: text
  summary: >-
    Texto de la forma. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: view
  uid: visio!Visio.Shape#view:member
  package: visio!
  fullName: view
  summary: >-
    Devuelve la vista de la forma. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
methods:
- name: getBounds()
  uid: visio!Visio.Shape#getBounds:member(1)
  package: visio!
  fullName: getBounds()
  summary: >-
    Devuelve el objeto BoundingBox que especifica el cuadro de límite de la forma.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface" />&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.Shape#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Visio.Shape` - Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.


    `load(option?: { select?: string; expand?: string; }): Visio.Shape` - Donde option.select es una cadena delimitada por comas que especifica las propiedades que se cargarán y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación que se cargarán.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` - Solo disponible en tipos de colección. Es similar a la firma anterior. Option.top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. Option.skip especifica el número de elementos que se van a omitir y que no se incluyen en el resultado. Si option.top se especifica, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Shape#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Sample Name\";\n    var shape = activePage.shapes.getItem(shapeName);\n    shape.load([\"name\", \"id\", \"text\", \"select\"]);\n    return ctx.sync().then(function () {\n        console.log(shape.name);\n        console.log(shape.id);\n        console.log(shape.text);\n        console.log(shape.select);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.highlight = { color: \"#E7E7E7\", width: 100 };\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Shape#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    parameters:
    - id: propertyNamesAndPaths
      description: Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades que se cargarán y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación que se cargarán.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Shape#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades adecuadas u otro objeto API del mismo tipo.
  remarks: >-
    Este método tiene la siguiente firma adicional:


    `set(properties: Visio.Shape): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Un objeto JavaScript con propiedades que se estructuran isomórficamente en las propiedades del objeto en el que se llama al método.
      type: <xref uid="visio!Visio.Interfaces.ShapeUpdateData:interface" />
    - id: options
      description: Proporciona una opción para suprimir errores si el objeto properties intenta establecer propiedades de solo lectura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Shape#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Shape:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.Shape#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Invalida el método JavaScript para proporcionar resultados más útiles cuando se pasa un objeto API a `toJSON()``JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se pasa a él). Mientras que el objeto Visio.Shape original es un objeto API, el método devuelve un objeto JavaScript sin formato (con el tipo `toJSON` como `Visio.Interfaces.ShapeData`<!-- -->) que contiene copias superficiales de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2ae337630aa8a8cbd8c71b845e4d3436538b5a1c
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51358000"
