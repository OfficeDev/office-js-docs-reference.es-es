### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    summary: |-
      <span data-ttu-id="a3548-101">Representa la clase ShapeDataItemCollection de una forma determinada.</span><span class="sxs-lookup"><span data-stu-id="a3548-101">Represents the ShapeDataItemCollection for a given Shape.</span></span>

      <span data-ttu-id="a3548-102">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a3548-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeDataItemCollection
    fullName: Visio.ShapeDataItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.ShapeDataItemCollection#context:member'
      - 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#items:member'
      - 'visio!Visio.ShapeDataItemCollection#load:member(1)'
      - 'visio!Visio.ShapeDataItemCollection#load:member(2)'
      - 'visio!Visio.ShapeDataItemCollection#load:member(3)'
      - 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
  - uid: 'visio!Visio.ShapeDataItemCollection#context:member'
    summary: <span data-ttu-id="a3548-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="a3548-103">The request context associated with the object.</span></span> <span data-ttu-id="a3548-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="a3548-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.ShapeDataItemCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="a3548-105">Obtiene el número de elementos de datos de formas.</span><span class="sxs-lookup"><span data-stu-id="a3548-105">Gets the number of Shape Data Items.</span></span>

      <span data-ttu-id="a3548-106">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a3548-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection#getCount~0:complex'
        description: ''
  - uid: 'visio!Visio.ShapeDataItemCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="a3548-107">Obtiene el ShapeDataItem mediante su nombre.</span><span class="sxs-lookup"><span data-stu-id="a3548-107">Gets the ShapeDataItem using its name.</span></span>

      <span data-ttu-id="a3548-108">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a3548-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="a3548-109">La clave es el nombre de la ShapeDataItem que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="a3548-109">Key is the name of the ShapeDataItem to be retrieved.</span></span>
          type:
            - string
  - uid: 'visio!Visio.ShapeDataItemCollection#items:member'
    summary: <span data-ttu-id="a3548-110">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="a3548-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.ShapeDataItem[];'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection#items~0:complex'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(1)'
    summary: '<span data-ttu-id="a3548-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a3548-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a3548-112">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="a3548-112">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="a3548-113">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="a3548-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a3548-114">`load(option?: string | string[]): Visio.ShapeDataItemCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="a3548-114">`load(option?: string | string[]): Visio.ShapeDataItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a3548-115">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="a3548-115">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a3548-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="a3548-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="a3548-117">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="a3548-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="a3548-118">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a3548-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a3548-119">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a3548-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a3548-120">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a3548-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="a3548-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="a3548-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var shapeDataItems = shape.shapeDataItems;
          shapeDataItems.load(["label", "value"]);
          return ctx.sync().then(function() {
              for (var i = 0; i < shapeDataItems.items.length; i++) {
                  console.log(shapeDataItems.items[i].label);
                  console.log(shapeDataItems.items[i].value);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.ShapeDataItemCollection#load~0:complex'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(2)'
    summary: <span data-ttu-id="a3548-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a3548-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a3548-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a3548-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a3548-124">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="a3548-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.ShapeDataItemCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
      return:
        type:
          - 'visio!Visio.ShapeDataItemCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!OfficeExtension.LoadOption:interface'
  - uid: 'visio!Visio.ShapeDataItemCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="a3548-125">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a3548-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a3548-126">.</span><span class="sxs-lookup"><span data-stu-id="a3548-126"></span></span> <span data-ttu-id="a3548-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a3548-127"></span></span><!-- --><span data-ttu-id="a3548-128">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Visio.ShapeDataItemCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Visio.Interfaces.ShapeDataItemCollectionData`</span><span class="sxs-lookup"><span data-stu-id="a3548-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeDataItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeDataItemCollectionData`</span></span><!-- --><span data-ttu-id="a3548-129">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a3548-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeDataItemCollectionData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.ShapeDataItemCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'visio!Visio.ShapeDataItem:class'
    name: Visio.ShapeDataItem
  - uid: 'visio!Visio.ShapeDataItemCollection#items~0:complex'
    name: 'Visio.ShapeDataItem[]'
    fullName: 'Visio.ShapeDataItem[]'
    spec.typeScript:
      - uid: 'visio!Visio.ShapeDataItem:class'
        name: Visio.ShapeDataItem
        fullName: Visio.ShapeDataItem
      - name: '[]'
        fullName: '[]'
  - uid: 'visio!Visio.ShapeDataItemCollection:class'
    name: Visio.ShapeDataItemCollection
  - uid: 'visio!Visio.ShapeDataItemCollection#load~0:complex'
    name: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    fullName: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface'
        name: Visio.Interfaces.ShapeDataItemCollectionLoadOptions
        fullName: Visio.Interfaces.ShapeDataItemCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'visio!Visio.Interfaces.CollectionLoadOptions:interface'
        name: Visio.Interfaces.CollectionLoadOptions
        fullName: Visio.Interfaces.CollectionLoadOptions
  - uid: 'visio!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'visio!Visio.Interfaces.ShapeDataItemCollectionData:interface'
    name: Visio.Interfaces.ShapeDataItemCollectionData