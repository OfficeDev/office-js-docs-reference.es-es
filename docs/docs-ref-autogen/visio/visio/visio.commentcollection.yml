### YamlMime:TSType
name: Visio.CommentCollection
uid: visio!Visio.CommentCollection:class
package: visio!
fullName: Visio.CommentCollection
summary: >-
  Representa el elemento CommentCollection de una forma determinada.


  \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.CommentCollection#context:member
  package: visio!
  fullName: context
  summary: Contexto de solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.CommentCollection#items:member
  package: visio!
  fullName: items
  summary: Obtiene los elementos secundarios cargados en esta colección.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.Comment[];'
    return:
      type: <xref uid="visio!Visio.Comment:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.CommentCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Obtiene el número de comentarios.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: visio!Visio.CommentCollection#getItem:member(1)
  package: visio!
  fullName: getItem(key)
  summary: >-
    Obtiene el comentario por medio de su nombre.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Visio.Comment;'
    parameters:
    - id: key
      description: "\"Key\" corresponde al nombre del comentario que se va a recuperar."
      type: string
    return:
      type: <xref uid="visio!Visio.Comment:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.CommentCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Visio.CommentCollection` - Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.


    `load(option?: { select?: string; expand?: string; }): Visio.CommentCollection` - Donde option.select es una cadena delimitada por comas que especifica las propiedades que se cargarán y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación que se cargarán.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection` - Solo disponible en tipos de colección. Es similar a la firma anterior. Option.top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. Option.skip especifica el número de elementos que se van a omitir y que no se incluyen en el resultado. Si option.top se especifica, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.


    #### <a name="examples"></a>Ejemplos


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapeComments= shape.comments;
        shapeComments.load(["author", "text"]);
        return ctx.sync().then(function () {
            for(var i = 0; i < shapeComments.items.length; i++)
            {
                var comment = shapeComments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.CommentCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.CommentCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.CommentCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.CommentCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.CommentCollection;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.CommentCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.CommentCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.CommentCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Invalida el método JavaScript para proporcionar resultados más útiles cuando se pasa un objeto API a `toJSON()``JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se pasa a él). Mientras que el objeto original es un objeto API, el método devuelve un objeto JavaScript sin formato `Visio.CommentCollection` `toJSON` (se escribe como `Visio.Interfaces.CommentCollectionData`<!-- -->) que contiene una matriz "items" con copias superficiales de las propiedades cargadas de los elementos de la colección.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.CommentCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 126b46718e748a4eba5ea30f95730eaafa85e2b5
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51277298"
