### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeCollection
    summary: |-
      <span data-ttu-id="0a591-101">Representa la colección de formas.</span><span class="sxs-lookup"><span data-stu-id="0a591-101">Represents the Shape Collection.</span></span>

      <span data-ttu-id="0a591-102">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0a591-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeCollection
    fullName: Visio.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeCollection.context
      - visio.Visio.ShapeCollection.getCount
      - visio.Visio.ShapeCollection.getItem
      - visio.Visio.ShapeCollection.items
      - visio.Visio.ShapeCollection.load
      - visio.Visio.ShapeCollection.load_1
      - visio.Visio.ShapeCollection.load_2
      - visio.Visio.ShapeCollection.toJSON
  - uid: visio.Visio.ShapeCollection.context
    summary: <span data-ttu-id="0a591-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="0a591-103">The request context associated with the object.</span></span> <span data-ttu-id="0a591-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="0a591-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.ShapeCollection.getCount
    summary: |-
      <span data-ttu-id="0a591-105">Obtiene el número de formas de una colección.</span><span class="sxs-lookup"><span data-stu-id="0a591-105">Gets the number of Shapes in the collection.</span></span>

      <span data-ttu-id="0a591-106">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0a591-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a591-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="0a591-107">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var numShapesActivePage = activePage.shapes.getCount();
              return ctx.sync().then(function () {
                  console.log("Shapes Count: " + numShapesActivePage.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.ShapeCollection.getItem
    summary: |-
      <span data-ttu-id="0a591-108">Obtiene una forma mediante su clave (nombre o índice).</span><span class="sxs-lookup"><span data-stu-id="0a591-108">Gets a Shape using its key (name or Index).</span></span>

      <span data-ttu-id="0a591-109">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0a591-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="0a591-110">Clave es el nombre o el índice de la forma que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="0a591-110">Key is the Name or Index of the shape to be retrieved.</span></span>
          type:
            - number | string
  - uid: visio.Visio.ShapeCollection.items
    summary: <span data-ttu-id="0a591-111">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="0a591-111">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Shape[];'
      return:
        type:
          - 'Visio.Shape[]'
  - uid: visio.Visio.ShapeCollection.load
    summary: '<span data-ttu-id="0a591-112">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="0a591-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a591-113">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="0a591-113">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="0a591-114">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="0a591-114">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0a591-115">`load(option?: string | string[]): Visio.ShapeCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="0a591-115">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0a591-116">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="0a591-116">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0a591-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="0a591-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="0a591-118">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="0a591-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="0a591-119">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0a591-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0a591-120">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0a591-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0a591-121">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="0a591-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.ShapeCollection.load_1
    summary: <span data-ttu-id="0a591-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="0a591-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a591-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="0a591-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0a591-124">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="0a591-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.ShapeCollection.toJSON
    summary: '<span data-ttu-id="0a591-125">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0a591-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0a591-126">.</span><span class="sxs-lookup"><span data-stu-id="0a591-126"></span></span> <span data-ttu-id="0a591-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0a591-127"></span></span><!-- --><span data-ttu-id="0a591-128">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Visio.ShapeCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Visio.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="0a591-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="0a591-129">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="0a591-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
      return:
        type:
          - Visio.Interfaces.ShapeCollectionData
        description: ''