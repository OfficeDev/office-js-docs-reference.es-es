### YamlMime:UniversalReference
ms.openlocfilehash: 8f4bc60ae424ee68581aea187ec124cc434a80e7
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/07/2019
ms.locfileid: "29770005"
items:
- uid: visio.Visio.Document
  summary: >-
    Representa la clase Document.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: Visio.Document
  fullName: Visio.Document
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Document.application
  - visio.Visio.Document.getActivePage
  - visio.Visio.Document.load
  - visio.Visio.Document.onDataRefreshComplete
  - visio.Visio.Document.onDocumentLoadComplete
  - visio.Visio.Document.onPageLoadComplete
  - visio.Visio.Document.onSelectionChanged
  - visio.Visio.Document.onShapeMouseEnter
  - visio.Visio.Document.onShapeMouseLeave
  - visio.Visio.Document.pages
  - visio.Visio.Document.set
  - visio.Visio.Document.setActivePage
  - visio.Visio.Document.startDataRefresh
  - visio.Visio.Document.toJSON
  - visio.Visio.Document.view
- uid: visio.Visio.Document.application
  summary: >-
    Representa una instancia de aplicación de Visio que contiene este documento. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: application
  fullName: application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Visio.Application;'
    return:
      type:
      - Visio.Application
- uid: visio.Visio.Document.getActivePage
  summary: >-
    Devuelve la página activa del documento.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: getActivePage()
  fullName: getActivePage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePage(): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var activePage = document.getActivePage();\n    activePage.load();\n    return ctx.sync().then(function () {\n        console.log(\"pageName: \" +activePage.name);\n    });   \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Document.load
  summary: Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas. Se debe llamar a "context.sync()" antes de leer las propiedades.
  remarks: >-
    Además de esta firma, este método no tiene las siguientes firmas:


    `load(option?: { select?: string; expand?: string; }): Visio.Document`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document`-Sólo está disponible en los tipos de colección. Es similar a la firma precedente. Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado. Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado. Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.

    #### <a name="examples"></a>Ejemplos


    ```javascript

    Visio.run(session, function (ctx) {
        var pages = ctx.document.pages;
        var pageCount = pages.getCount();
        return ctx.sync().then(function () {
            console.log("Pages Count: " +pageCount.value);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var documentView = ctx.document.view;
        documentView.disableHyperlinks();
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var application = ctx.document.application;
        application.showToolbars = false;
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Document;'
    return:
      type:
      - Visio.Document
      description: ''
    parameters:
    - id: option
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.
      type:
      - string | string[]
- uid: visio.Visio.Document.onDataRefreshComplete
  summary: >-
    Se produce cuando se actualizan los datos en el diagrama.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: onDataRefreshComplete
  fullName: onDataRefreshComplete
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
- uid: visio.Visio.Document.onDocumentLoadComplete
  summary: >-
    Se produce cuando se cargan, se actualiza o se ha cambiado el documento.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: onDocumentLoadComplete
  fullName: onDocumentLoadComplete
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
- uid: visio.Visio.Document.onPageLoadComplete
  summary: >-
    Se produce cuando finalice la página cargar.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: onPageLoadComplete
  fullName: onPageLoadComplete
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
- uid: visio.Visio.Document.onSelectionChanged
  summary: >-
    Se produce cuando cambia la selección actual de las formas.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
- uid: visio.Visio.Document.onShapeMouseEnter
  summary: >-
    Se produce cuando el usuario mueve el puntero del mouse en el cuadro de límite de una forma.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: onShapeMouseEnter
  fullName: onShapeMouseEnter
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
- uid: visio.Visio.Document.onShapeMouseLeave
  summary: >-
    Se produce cuando el usuario mueve el mouse fuera del cuadro delimitador de una forma.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: onShapeMouseLeave
  fullName: onShapeMouseLeave
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
- uid: visio.Visio.Document.pages
  summary: >-
    Representa una colección de páginas asociadas con el documento. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: pages
  fullName: pages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pages: Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
- uid: visio.Visio.Document.set
  summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.
  remarks: >-
    Este método no tiene la siguiente firma adicional:


    `set(properties: Visio.Document): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.
      type:
      - Interfaces.DocumentUpdateData
    - id: options
      description: Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Document.setActivePage
  summary: >-
    Establece la página activa del documento.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: setActivePage(PageName)
  fullName: setActivePage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setActivePage(PageName: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var pageName = \"Page-1\";\n    document.setActivePage(pageName);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: PageName
      description: Nombre de la página
      type:
      - string
- uid: visio.Visio.Document.startDataRefresh
  summary: >-
    Activa la actualización de los datos del diagrama en todas las páginas.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: startDataRefresh()
  fullName: startDataRefresh
  langs:
  - typeScript
  type: method
  syntax:
    content: 'startDataRefresh(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    document.startDataRefresh();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Document.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.DocumentData;'
    return:
      type:
      - visio.Visio.Interfaces.DocumentData
      description: ''
- uid: visio.Visio.Document.view
  summary: >-
    Devuelve el objeto DocumentView. Solo lectura.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: view
  fullName: view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.DocumentView;'
    return:
      type:
      - visio.Visio.DocumentView
