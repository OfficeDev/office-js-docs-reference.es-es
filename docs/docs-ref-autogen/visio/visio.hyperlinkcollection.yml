### YamlMime:UniversalReference
items:
  - uid: visio.Visio.HyperlinkCollection
    summary: |-
      <span data-ttu-id="8aee4-101">Representa la colección de hipervínculos.</span><span class="sxs-lookup"><span data-stu-id="8aee4-101">Represents the Hyperlink Collection.</span></span>

      <span data-ttu-id="8aee4-102">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8aee4-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.HyperlinkCollection
    fullName: Visio.HyperlinkCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.HyperlinkCollection.context
      - visio.Visio.HyperlinkCollection.getCount
      - visio.Visio.HyperlinkCollection.getItem
      - visio.Visio.HyperlinkCollection.items
      - visio.Visio.HyperlinkCollection.load
      - visio.Visio.HyperlinkCollection.load_1
      - visio.Visio.HyperlinkCollection.load_2
      - visio.Visio.HyperlinkCollection.toJSON
  - uid: visio.Visio.HyperlinkCollection.context
    summary: <span data-ttu-id="8aee4-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="8aee4-103">The request context associated with the object.</span></span> <span data-ttu-id="8aee4-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="8aee4-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.HyperlinkCollection.getCount
    summary: |-
      <span data-ttu-id="8aee4-105">Obtiene el número de hipervínculos.</span><span class="sxs-lookup"><span data-stu-id="8aee4-105">Gets the number of hyperlinks.</span></span>

      <span data-ttu-id="8aee4-106">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8aee4-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: visio.Visio.HyperlinkCollection.getItem
    summary: |-
      <span data-ttu-id="8aee4-107">Obtiene un hipervínculo mediante su clave (nombre o identificador).</span><span class="sxs-lookup"><span data-stu-id="8aee4-107">Gets a Hyperlink using its key (name or Id).</span></span>

      <span data-ttu-id="8aee4-108">\[[Conjunto de API: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="8aee4-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(Key)
    fullName: getItem(Key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(Key: number | string): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: Key
          description: <span data-ttu-id="8aee4-109">Clave es el nombre o el índice del hipervínculo que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="8aee4-109">Key is the name or index of the Hyperlink to be retrieved.</span></span>
          type:
            - number | string
  - uid: visio.Visio.HyperlinkCollection.items
    summary: <span data-ttu-id="8aee4-110">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="8aee4-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Hyperlink[];'
      return:
        type:
          - 'Visio.Hyperlink[]'
  - uid: visio.Visio.HyperlinkCollection.load
    summary: '<span data-ttu-id="8aee4-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="8aee4-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8aee4-112">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="8aee4-112">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="8aee4-113">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="8aee4-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8aee4-114">`load(option?: string | string[]): Visio.HyperlinkCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="8aee4-114">`load(option?: string | string[]): Visio.HyperlinkCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8aee4-115">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="8aee4-115">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8aee4-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="8aee4-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection` - Only available on collection types.</span></span> <span data-ttu-id="8aee4-117">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="8aee4-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="8aee4-118">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="8aee4-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8aee4-119">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="8aee4-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8aee4-120">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="8aee4-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="8aee4-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8aee4-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Manager Belt";
          var shape = activePage.shapes.getItem(shapeName);
          var hyperlinks = shape.hyperlinks;
          shapeHyperlinks.load();
              ctx.sync().then(function () {
                  for(var i=0; i<shapeHyperlinks.items.length;i++)
                  {
                      var hyperlink = shapeHyperlinks.items[i];
                      console.log(
                          "Description:"+hyperlink.description +"Address:"+hyperlink.address +"SubAddress:  " + 
                          hyperlink.subAddress);
                  }
              });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.HyperlinkCollection.load_1
    summary: <span data-ttu-id="8aee4-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="8aee4-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8aee4-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8aee4-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8aee4-124">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="8aee4-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.HyperlinkCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.HyperlinkCollection.toJSON
    summary: '<span data-ttu-id="8aee4-125">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8aee4-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8aee4-126">.</span><span class="sxs-lookup"><span data-stu-id="8aee4-126"></span></span> <span data-ttu-id="8aee4-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8aee4-127"></span></span><!-- --><span data-ttu-id="8aee4-128">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Visio.HyperlinkCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Visio.Interfaces.HyperlinkCollectionData`</span><span class="sxs-lookup"><span data-stu-id="8aee4-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.HyperlinkCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.HyperlinkCollectionData`</span></span><!-- --><span data-ttu-id="8aee4-129">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="8aee4-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.HyperlinkCollectionData;'
      return:
        type:
          - visio.Visio.Interfaces.HyperlinkCollectionData
        description: ''