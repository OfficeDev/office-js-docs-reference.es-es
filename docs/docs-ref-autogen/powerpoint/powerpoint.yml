### YamlMime:UniversalReference
items:
  - uid: powerpoint!
    name: powerpoint
    fullName: powerpoint
    langs:
      - typeScript
    type: package
    children:
      - 'powerpoint!PowerPoint.createPresentation:function(1)'
  - uid: 'powerpoint!PowerPoint.createPresentation:function(1)'
    summary: |-
      Crea y abre una nueva presentación. Opcionalmente, la presentación se puede rellenar previamente con un archivo. pptx codificado en Base64.

      \[[Conjunto de API: PowerPointApi 1,1](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    name: PowerPoint.createPresentation(base64File)
    fullName: PowerPoint.createPresentation(base64File)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function createPresentation(base64File?: string): Promise<void>;'
      return:
        type:
          - 'powerpoint!PowerPoint.createPresentation~0:complex'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          var myFile = document.getElementById("file");
          var reader = new FileReader();

          reader.onload = function (event) {
              // strip off the metadata before the base64-encoded string
              var startIndex = event.target.result.indexOf("base64,");
              var copyBase64 = event.target.result.substr(startIndex + 7);

              PowerPoint.createPresentation(copyBase64);        
          };

          // read in the file as a data URL so we can parse the base64-encoded string
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64File
          description: Opcional. El archivo. pptx codificado en Base64. El valor predeterminado es null.
          type:
            - string
references:
  - uid: 'powerpoint!PowerPoint.createPresentation~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>