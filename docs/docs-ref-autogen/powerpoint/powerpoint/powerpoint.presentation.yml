### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    summary: '\[[Conjunto de API: PowerPointApi 1,0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
    name: PowerPoint.Presentation
    fullName: PowerPoint.Presentation
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Presentation#context:member'
      - 'powerpoint!PowerPoint.Presentation#insertSlidesFromBase64:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(2)'
      - 'powerpoint!PowerPoint.Presentation#load:member(3)'
      - 'powerpoint!PowerPoint.Presentation#slides:member'
      - 'powerpoint!PowerPoint.Presentation#title:member'
      - 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Presentation#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Presentation#insertSlidesFromBase64:member(1)'
    summary: |-
      Inserta las diapositivas especificadas de una presentación en la presentación actual.

      \[[Conjunto de API: POWERPOINTAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: 'insertSlidesFromBase64(base64File, options)'
    fullName: 'insertSlidesFromBase64(base64File, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSlidesFromBase64(base64File: string, options?: PowerPoint.InsertSlideOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: La cadena codificada en Base64 que representa el archivo de presentación de origen.
          type:
            - string
        - id: options
          description: 'Las opciones que definen qué diapositivas se insertarán, dónde irán las diapositivas y el formato de la presentación que se va a usar.'
          type:
            - 'powerpoint!PowerPoint.InsertSlideOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: PowerPoint.Interfaces.PresentationLoadOptions): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: options
          description: Proporciona opciones para las propiedades del objeto que se va a cargar.
          type:
            - 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Presentation;
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'powerpoint!PowerPoint.Presentation#slides:member'
    summary: |-
      Devuelve una colección ordenada de diapositivas de la presentación.

      \[[Conjunto de API: POWERPOINTAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: slides
    fullName: slides
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slides: PowerPoint.SlideCollection;'
      return:
        type:
          - 'powerpoint!PowerPoint.SlideCollection:class'
  - uid: 'powerpoint!PowerPoint.Presentation#title:member'
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: string;'
      return:
        type:
          - string
  - uid: 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
    summary: 'Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el objeto PowerPoint. Presentation original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como `PowerPoint.Interfaces.PresentationData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.PresentationData;'
      return:
        type:
          - 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.InsertSlideOptions:interface'
    name: PowerPoint.InsertSlideOptions
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    name: PowerPoint.Presentation
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
    name: PowerPoint.Interfaces.PresentationLoadOptions
  - uid: 'powerpoint!PowerPoint.SlideCollection:class'
    name: PowerPoint.SlideCollection
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
    name: PowerPoint.Interfaces.PresentationData