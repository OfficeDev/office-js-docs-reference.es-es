### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ChartPointsCollection
    summary: |-
      <span data-ttu-id="2f06b-101">Colección de todos los puntos del gráfico dentro de una serie de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="2f06b-101">A collection of all the chart points within a series inside a chart.</span></span>

      <span data-ttu-id="2f06b-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f06b-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartPointsCollection
    fullName: Excel.ChartPointsCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ChartPointsCollection.context
      - excel_release.Excel.ChartPointsCollection.count
      - excel_release.Excel.ChartPointsCollection.getCount
      - excel_release.Excel.ChartPointsCollection.getItemAt
      - excel_release.Excel.ChartPointsCollection.items
      - excel_release.Excel.ChartPointsCollection.load
      - excel_release.Excel.ChartPointsCollection.load_1
      - excel_release.Excel.ChartPointsCollection.load_2
      - excel_release.Excel.ChartPointsCollection.toJSON
  - uid: excel_release.Excel.ChartPointsCollection.context
    summary: <span data-ttu-id="2f06b-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="2f06b-103">The request context associated with the object.</span></span> <span data-ttu-id="2f06b-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="2f06b-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ChartPointsCollection.count
    summary: |-
      <span data-ttu-id="2f06b-105">Devuelve el número de puntos del gráfico de la serie.</span><span class="sxs-lookup"><span data-stu-id="2f06b-105">Returns the number of chart points in the series.</span></span> <span data-ttu-id="2f06b-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2f06b-106">Read-only.</span></span>

      <span data-ttu-id="2f06b-107">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f06b-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartPointsCollection.getCount
    summary: |-
      <span data-ttu-id="2f06b-108">Devuelve el número de puntos del gráfico de la serie.</span><span class="sxs-lookup"><span data-stu-id="2f06b-108">Returns the number of chart points in the series.</span></span>

      <span data-ttu-id="2f06b-109">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f06b-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.ChartPointsCollection.getItemAt
    summary: |-
      <span data-ttu-id="2f06b-110">Recupera un punto basándose en su posición dentro de la serie.</span><span class="sxs-lookup"><span data-stu-id="2f06b-110">Retrieve a point based on its position within the series.</span></span>

      <span data-ttu-id="2f06b-111">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f06b-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      return:
        type:
          - excel.Excel.ChartPoint
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f06b-112">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2f06b-112">Examples</span></span>

          ```javascript
          // Set the border color for the first points in the points collection
          Excel.run(function (ctx) { 
              var points = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
              return ctx.sync().then(function() {
                  console.log("Point Border Color Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="2f06b-113">Valor de índice del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2f06b-113">Index value of the object to be retrieved.</span></span> <span data-ttu-id="2f06b-114">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="2f06b-114">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.ChartPointsCollection.items
    summary: <span data-ttu-id="2f06b-115">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="2f06b-115">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type:
          - 'Excel.ChartPoint[]'
  - uid: excel_release.Excel.ChartPointsCollection.load
    summary: '<span data-ttu-id="2f06b-116">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2f06b-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f06b-117">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="2f06b-117">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="2f06b-118">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="2f06b-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2f06b-119">`load(option?: string | string[]): Excel.ChartPointsCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="2f06b-119">`load(option?: string | string[]): Excel.ChartPointsCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2f06b-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="2f06b-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2f06b-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="2f06b-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` - Only available on collection types.</span></span> <span data-ttu-id="2f06b-122">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="2f06b-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="2f06b-123">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="2f06b-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2f06b-124">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="2f06b-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2f06b-125">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="2f06b-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.ChartPointsCollection.load_1
    summary: <span data-ttu-id="2f06b-126">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="2f06b-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f06b-127">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="2f06b-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f06b-128">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="2f06b-128">Examples</span></span>

          ```javascript
          // Get the names of points in the points collection
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('items');
              return ctx.sync().then(function() {
                  console.log("Points Collection loaded");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of points
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("points: Count= " + pointsCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2f06b-129">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="2f06b-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ChartPointsCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.ChartPointsCollection.toJSON
    summary: '<span data-ttu-id="2f06b-130">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2f06b-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2f06b-131">.</span><span class="sxs-lookup"><span data-stu-id="2f06b-131"></span></span> <span data-ttu-id="2f06b-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2f06b-132"></span></span><!-- --><span data-ttu-id="2f06b-133">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.ChartPointsCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ChartPointsCollectionData`</span><span class="sxs-lookup"><span data-stu-id="2f06b-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`</span></span><!-- --><span data-ttu-id="2f06b-134">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="2f06b-134">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartPointsCollectionData
        description: ''