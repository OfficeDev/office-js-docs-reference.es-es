### YamlMime:UniversalReference
ms.openlocfilehash: b5f9eea27761a5dbb39d9c1e9fadbd7404df4bfb
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30115229"
items:
- uid: excel_release.Excel.ColorScaleConditionalFormat
  summary: >-
    <span data-ttu-id="d6110-101">Representa un criterio IconSet para el formato condicional.</span><span class="sxs-lookup"><span data-stu-id="d6110-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="d6110-102">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6110-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ColorScaleConditionalFormat
  fullName: Excel.ColorScaleConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ColorScaleConditionalFormat.context
  - excel_release.Excel.ColorScaleConditionalFormat.criteria
  - excel_release.Excel.ColorScaleConditionalFormat.load
  - excel_release.Excel.ColorScaleConditionalFormat.load_1
  - excel_release.Excel.ColorScaleConditionalFormat.load_2
  - excel_release.Excel.ColorScaleConditionalFormat.set
  - excel_release.Excel.ColorScaleConditionalFormat.set_1
  - excel_release.Excel.ColorScaleConditionalFormat.threeColorScale
  - excel_release.Excel.ColorScaleConditionalFormat.toJSON
- uid: excel_release.Excel.ColorScaleConditionalFormat.context
  summary: <span data-ttu-id="d6110-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="d6110-103">The request context associated with the object.</span></span> <span data-ttu-id="d6110-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="d6110-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ColorScaleConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="d6110-p102">Criterios de la escala de colores. El punto medio es opcional cuando se usa una escala de colores de dos puntos.</span><span class="sxs-lookup"><span data-stu-id="d6110-p102">The criteria of the color scale. Midpoint is optional when using a two point color scale.</span></span>


    <span data-ttu-id="d6110-107">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6110-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalColorScaleCriteria;'
    return:
      type:
      - excel.Excel.ConditionalColorScaleCriteria
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d6110-108\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6110-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ColorScaleConditionalFormat.load
  summary: <span data-ttu-id="d6110-109">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d6110-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6110-110">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6110-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d6110-111">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="d6110-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d6110-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d6110-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d6110-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d6110-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d6110-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="d6110-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="d6110-115">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="d6110-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="d6110-116">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d6110-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d6110-117">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d6110-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d6110-118">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="d6110-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
- uid: excel_release.Excel.ColorScaleConditionalFormat.load_1
  summary: <span data-ttu-id="d6110-119">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d6110-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6110-120">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6110-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d6110-121">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d6110-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.ColorScaleConditionalFormat.load_2
  summary: <span data-ttu-id="d6110-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d6110-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6110-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6110-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d6110-124">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d6110-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.ColorScaleConditionalFormat.set
  summary: <span data-ttu-id="d6110-125">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="d6110-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d6110-126">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="d6110-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="d6110-127">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="d6110-127">This method has the following additional signature:</span></span>


    `set(properties: Excel.ColorScaleConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="d6110-128">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="d6110-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ColorScaleConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="d6110-129">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d6110-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.ColorScaleConditionalFormat.set_1
  summary: <span data-ttu-id="d6110-130">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="d6110-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel_release.Excel.ColorScaleConditionalFormat.threeColorScale
  summary: >-
    <span data-ttu-id="d6110-131">Si es true, la escala de colores tendrá tres puntos (mínimo, punto medio, máximo); de lo contrario, tendrá dos (mínimo, máximo).</span><span class="sxs-lookup"><span data-stu-id="d6110-131">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>


    <span data-ttu-id="d6110-132">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6110-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: threeColorScale
  fullName: threeColorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly threeColorScale: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.ColorScaleConditionalFormat.toJSON
  summary: <span data-ttu-id="d6110-133">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="d6110-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d6110-134">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. ColorScaleConditionalFormat original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.ColorScaleConditionalFormatData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="d6110-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
      description: ''
