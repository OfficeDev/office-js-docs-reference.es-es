### YamlMime:UniversalReference
ms.openlocfilehash: f8da0aa8f211304f6d54fd119af4a484795c66ae
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105359"
items:
- uid: excel_release.Excel.Binding
  summary: >-
    <span data-ttu-id="e5f23-101">Representa un enlace de Office.js que se define en el libro.</span><span class="sxs-lookup"><span data-stu-id="e5f23-101">Represents an Office.js binding that is defined in the workbook.</span></span>


    <span data-ttu-id="e5f23-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Binding
  fullName: Excel.Binding
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Binding.context
  - excel_release.Excel.Binding.delete
  - excel_release.Excel.Binding.getRange
  - excel_release.Excel.Binding.getTable
  - excel_release.Excel.Binding.getText
  - excel_release.Excel.Binding.id
  - excel_release.Excel.Binding.load
  - excel_release.Excel.Binding.load_1
  - excel_release.Excel.Binding.load_2
  - excel_release.Excel.Binding.onDataChanged
  - excel_release.Excel.Binding.onSelectionChanged
  - excel_release.Excel.Binding.toJSON
  - excel_release.Excel.Binding.type
- uid: excel_release.Excel.Binding.context
  summary: <span data-ttu-id="e5f23-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-103">The request context associated with the object.</span></span> <span data-ttu-id="e5f23-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="e5f23-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Binding.delete
  summary: >-
    <span data-ttu-id="e5f23-105">Elimina el enlace.</span><span class="sxs-lookup"><span data-stu-id="e5f23-105">Deletes the binding.</span></span>


    <span data-ttu-id="e5f23-106">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-106">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.Binding.getRange
  summary: >-
    <span data-ttu-id="e5f23-p102">Devuelve el intervalo representado por el enlace. Se producirá un error si el enlace no es del tipo correcto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-p102">Returns the range represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="e5f23-109">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5f23-110\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f23-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var range = binding.getRange();\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.getTable
  summary: >-
    <span data-ttu-id="e5f23-p103">Devuelve la tabla representada por el enlace. Se producirá un error si el enlace no es del tipo correcto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-p103">Returns the table represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="e5f23-113">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTable()
  fullName: getTable()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTable(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5f23-114\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f23-114\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var table = binding.getTable();\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.getText
  summary: >-
    <span data-ttu-id="e5f23-p104">Devuelve el texto representado por el enlace. Se producirá un error si el enlace no es del tipo correcto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-p104">Returns the text represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="e5f23-117">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getText()
  fullName: getText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getText(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5f23-118\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f23-118\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var text = binding.getText();\n    binding.load('text');\n    return ctx.sync().then(function() {\n        console.log(text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.id
  summary: >-
    <span data-ttu-id="e5f23-p105">Representa el identificador de enlace. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e5f23-p105">Represents binding identifier. Read-only.</span></span>


    <span data-ttu-id="e5f23-121">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Binding.load
  summary: <span data-ttu-id="e5f23-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5f23-123">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e5f23-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="e5f23-124">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="e5f23-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="e5f23-125">`load(option?: string | string[]): Excel.Binding`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="e5f23-125">`load(option?: string | string[]): Excel.Binding` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="e5f23-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="e5f23-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="e5f23-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="e5f23-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id="e5f23-128">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="e5f23-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="e5f23-129">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="e5f23-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e5f23-130">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="e5f23-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e5f23-131">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="e5f23-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.BindingLoadOptions
- uid: excel_release.Excel.Binding.load_1
  summary: <span data-ttu-id="e5f23-132">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5f23-133">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e5f23-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5f23-134\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f23-134\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    binding.load('type');\n    return ctx.sync().then(function() {\n        console.log(binding.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="e5f23-135">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="e5f23-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.Binding.load_2
  summary: <span data-ttu-id="e5f23-136">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5f23-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5f23-137">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e5f23-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="e5f23-138">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="e5f23-138">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Binding.onDataChanged
  summary: >-
    <span data-ttu-id="e5f23-139">Se produce al cambiar los datos del enlace o al darles formato.</span><span class="sxs-lookup"><span data-stu-id="e5f23-139">Occurs when data or formatting within the binding is changed.</span></span>


    <span data-ttu-id="e5f23-140">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-140">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDataChanged
  fullName: onDataChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5f23-141\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5f23-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");    \n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), \"Table\", \"SalesByQuarter\");\n    salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);\n\n    console.log(\"The data changed handler is registered.\");\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.Binding.onSelectionChanged
  summary: >-
    <span data-ttu-id="e5f23-142">Se produce cuando cambia el contenido seleccionado en el enlace.</span><span class="sxs-lookup"><span data-stu-id="e5f23-142">Occurs when the selected content in the binding is changed.</span></span>


    <span data-ttu-id="e5f23-143">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-143">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
- uid: excel_release.Excel.Binding.toJSON
  summary: <span data-ttu-id="e5f23-144">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="e5f23-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e5f23-145">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. Binding original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.BindingData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="e5f23-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingData
      description: ''
- uid: excel_release.Excel.Binding.type
  summary: >-
    <span data-ttu-id="e5f23-146">Devuelve el tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="e5f23-146">Returns the type of the binding.</span></span> <span data-ttu-id="e5f23-147">Consulte Excel. BindingType para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="e5f23-147">See Excel.BindingType for details.</span></span> <span data-ttu-id="e5f23-148">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e5f23-148">Read-only.</span></span>


    <span data-ttu-id="e5f23-149">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5f23-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
    return:
      type:
      - Excel.BindingType | "Range" | "Table" | "Text"
