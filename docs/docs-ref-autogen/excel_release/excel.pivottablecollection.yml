### YamlMime:UniversalReference
ms.openlocfilehash: e470adee49d76d433d82bd11de38179849b6ad57
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30111995"
items:
- uid: excel_release.Excel.PivotTableCollection
  summary: >-
    Representa una colección de todas las tablas dinámicas que forman parte del libro o de la hoja de cálculo.


    \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.PivotTableCollection.add
  - excel_release.Excel.PivotTableCollection.context
  - excel_release.Excel.PivotTableCollection.getCount
  - excel_release.Excel.PivotTableCollection.getItem
  - excel_release.Excel.PivotTableCollection.getItemOrNullObject
  - excel_release.Excel.PivotTableCollection.items
  - excel_release.Excel.PivotTableCollection.load
  - excel_release.Excel.PivotTableCollection.load_1
  - excel_release.Excel.PivotTableCollection.load_2
  - excel_release.Excel.PivotTableCollection.refreshAll
  - excel_release.Excel.PivotTableCollection.toJSON
- uid: excel_release.Excel.PivotTableCollection.add
  summary: >-
    Agrega una tabla dinámica basada en los datos de origen especificados y la inserta en la celda superior izquierda del rango de destino.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: add(name, source, destination)
  fullName: add(name, source, destination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        Devuelve la tabla dinámica que se acaba de insertar.

        #### <a name="examples"></a>Ejemplos


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: Nombre de la nueva tabla dinámica.
      type:
      - string
    - id: source
      description: Los datos de origen de la nueva tabla dinámica, pueden ser un intervalo (o una dirección de cadena que incluya el nombre de la hoja de cálculo) o una tabla.
      type:
      - Range | string | Table
    - id: destination
      description: La celda de la esquina superior izquierda del rango de destino del informe de tabla dinámica (el rango de la hoja de cálculo donde se colocará el informe resultante).
      type:
      - Range | string
- uid: excel_release.Excel.PivotTableCollection.context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.PivotTableCollection.getCount
  summary: >-
    Obtiene el número de tablas dinámicas de una colección.


    \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.PivotTableCollection.getItem
  summary: >-
    Obtiene una tabla dinámica por nombre.


    \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: Nombre de la tabla dinámica que se va a recuperar.
      type:
      - string
- uid: excel_release.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    Obtiene una tabla dinámica por nombre. Si no existe la tabla dinámica, devolverá un objeto NULL.


    \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: Nombre de la tabla dinámica que se va a recuperar.
      type:
      - string
- uid: excel_release.Excel.PivotTableCollection.items
  summary: Obtiene los elementos secundarios cargados de esta colección.
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel_release.Excel.PivotTableCollection.load
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a "context. Sync ()" antes de leer las propiedades.
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Excel.PivotTableCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.


    `load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.PivotTableCollection.load_1
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type:
      - string | string[]
- uid: excel_release.Excel.PivotTableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.PivotTableCollection.refreshAll
  summary: >-
    Actualiza todas las tablas dinámicas de la colección.


    \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.PivotTableCollection.toJSON
  summary: Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API. (`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el `Excel.PivotTableCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.PivotTableCollectionData` <!-- -->como) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
