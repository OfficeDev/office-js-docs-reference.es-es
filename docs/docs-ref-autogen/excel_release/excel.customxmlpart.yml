### YamlMime:UniversalReference
ms.openlocfilehash: b9420bad9229b84588315e3bf95650b7493504b5
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30115880"
items:
- uid: excel_release.Excel.CustomXmlPart
  summary: >-
    <span data-ttu-id="80e9c-101">Representa un objeto de elemento XML personalizado de un libro.</span><span class="sxs-lookup"><span data-stu-id="80e9c-101">Represents a custom XML part object in a workbook.</span></span>


    <span data-ttu-id="80e9c-102">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="80e9c-102">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.CustomXmlPart
  fullName: Excel.CustomXmlPart
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.CustomXmlPart.context
  - excel_release.Excel.CustomXmlPart.delete
  - excel_release.Excel.CustomXmlPart.getXml
  - excel_release.Excel.CustomXmlPart.id
  - excel_release.Excel.CustomXmlPart.load
  - excel_release.Excel.CustomXmlPart.load_1
  - excel_release.Excel.CustomXmlPart.load_2
  - excel_release.Excel.CustomXmlPart.namespaceUri
  - excel_release.Excel.CustomXmlPart.setXml
  - excel_release.Excel.CustomXmlPart.toJSON
- uid: excel_release.Excel.CustomXmlPart.context
  summary: <span data-ttu-id="80e9c-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="80e9c-103">The request context associated with the object.</span></span> <span data-ttu-id="80e9c-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="80e9c-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.CustomXmlPart.delete
  summary: >-
    <span data-ttu-id="80e9c-105">Elimina el elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="80e9c-105">Deletes the custom XML part.</span></span>


    <span data-ttu-id="80e9c-106">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="80e9c-106">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"80e9c-107\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"80e9c-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    const xmlPartIDSetting = settings.getItemOrNullObject(\"ContosoReviewXmlPartId\").load(\"value\");\n    await context.sync();\n\n    if (xmlPartIDSetting.value) {   \n        let customXmlPart = context.workbook.customXmlParts.getItem(xmlPartIDSetting.value);\n        const xmlBlob = customXmlPart.getXml();\n        customXmlPart.delete();\n        customXmlPart = context.workbook.customXmlParts.getItemOrNullObject(xmlPartIDSetting.value);\n\n        await context.sync();\n\n        if (customXmlPart.isNullObject) {\n            $(\"#display-xml\").text(`The XML part with the id ${xmlPartIDSetting.value} has been deleted.`);\n\n            // Delete the unneeded setting too.\n            xmlPartIDSetting.delete();            \n        } else {\n            const readableXml = addLineBreaksToXML(xmlBlob.value);\n            const strangeMessage = `This is strange. The XML part with the id ${xmlPartIDSetting.value} has not been deleted:\\n${readableXml}`\n            $(\"#display-xml\").text(strangeMessage);\n        }\n\n        await context.sync();\n    }\n});\n```"
- uid: excel_release.Excel.CustomXmlPart.getXml
  summary: >-
    <span data-ttu-id="80e9c-108">Obtiene el contenido XML completo del elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="80e9c-108">Gets the custom XML part's full XML content.</span></span>


    <span data-ttu-id="80e9c-109">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="80e9c-109">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getXml()
  fullName: getXml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"80e9c-110\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"80e9c-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    // You must have the xmlns attribute to populate the \n    // CustomXml.namespaceUri property.\n    const originalXml = \"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>\";\n    const customXmlPart = context.workbook.customXmlParts.add(originalXml);\n    customXmlPart.load(\"id\");\n    const xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    const readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    // Store the XML part's ID in a setting.\n    const settings = context.workbook.settings;\n    settings.add(\"ContosoReviewXmlPartId\", customXmlPart.id);\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.CustomXmlPart.id
  summary: >-
    <span data-ttu-id="80e9c-p102">Identificador del elemento XML personalizado. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="80e9c-p102">The custom XML part's ID. Read-only.</span></span>


    <span data-ttu-id="80e9c-113">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="80e9c-113">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"80e9c-114\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"80e9c-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    // You must have the xmlns attribute to populate the \n    // CustomXml.namespaceUri property.\n    const originalXml = \"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>\";\n    const customXmlPart = context.workbook.customXmlParts.add(originalXml);\n    customXmlPart.load(\"id\");\n    const xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    const readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    // Store the XML part's ID in a setting.\n    const settings = context.workbook.settings;\n    settings.add(\"ContosoReviewXmlPartId\", customXmlPart.id);\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.CustomXmlPart.load
  summary: <span data-ttu-id="80e9c-115">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="80e9c-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="80e9c-116">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="80e9c-116">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="80e9c-117">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="80e9c-117">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="80e9c-118">`load(option?: string | string[]): Excel.CustomXmlPart`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="80e9c-118">`load(option?: string | string[]): Excel.CustomXmlPart` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="80e9c-119">`load(option?: { select?: string; expand?: string; }): Excel.CustomXmlPart`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="80e9c-119">`load(option?: { select?: string; expand?: string; }): Excel.CustomXmlPart` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="80e9c-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomXmlPart`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="80e9c-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomXmlPart` - Only available on collection types.</span></span> <span data-ttu-id="80e9c-121">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="80e9c-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="80e9c-122">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="80e9c-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="80e9c-123">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="80e9c-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="80e9c-124">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="80e9c-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.CustomXmlPartLoadOptions): Excel.CustomXmlPart;'
    return:
      type:
      - excel.Excel.CustomXmlPart
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.CustomXmlPartLoadOptions
- uid: excel_release.Excel.CustomXmlPart.load_1
  summary: <span data-ttu-id="80e9c-125">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="80e9c-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="80e9c-126">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="80e9c-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.CustomXmlPart;'
    return:
      type:
      - excel.Excel.CustomXmlPart
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="80e9c-127">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="80e9c-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.CustomXmlPart.load_2
  summary: <span data-ttu-id="80e9c-128">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="80e9c-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="80e9c-129">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="80e9c-129">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.CustomXmlPart;'
    return:
      type:
      - excel.Excel.CustomXmlPart
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="80e9c-130">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="80e9c-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.CustomXmlPart.namespaceUri
  summary: >-
    <span data-ttu-id="80e9c-p107">URI de espacio de nombres del elemento XML personalizado. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="80e9c-p107">The custom XML part's namespace URI. Read-only.</span></span>


    <span data-ttu-id="80e9c-133">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="80e9c-133">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: namespaceUri
  fullName: namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly namespaceUri: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.CustomXmlPart.setXml
  summary: >-
    <span data-ttu-id="80e9c-134">Establece el contenido XML completo del elemento XML personalizado.</span><span class="sxs-lookup"><span data-stu-id="80e9c-134">Sets the custom XML part's full XML content.</span></span>


    <span data-ttu-id="80e9c-135">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="80e9c-135">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setXml(xml)
  fullName: setXml(xml)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXml(xml: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"80e9c-136\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"80e9c-136\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    const xmlPartIDSetting = settings.getItemOrNullObject(\"ContosoReviewXmlPartId\").load(\"value\");\n    await context.sync();\n\n    if (xmlPartIDSetting.value) {   \n        const customXmlPart = context.workbook.customXmlParts.getItem(xmlPartIDSetting.value);\n\n        // The setXml method does a whole-for-whole replacement \n        // of the entire XML.\n        customXmlPart.setXml(\"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>John</Reviewer><Reviewer>Hitomi</Reviewer></Reviewers>\");\n        const xmlBlob = customXmlPart.getXml();\n        await context.sync();\n\n        const readableXml = addLineBreaksToXML(xmlBlob.value);\n        $(\"#display-xml\").text(readableXml);\n        await context.sync();\n    }\n});\n```"
    parameters:
    - id: xml
      description: <span data-ttu-id="80e9c-137">Contenido XML del elemento.</span><span class="sxs-lookup"><span data-stu-id="80e9c-137">XML content for the part.</span></span>
      type:
      - string
- uid: excel_release.Excel.CustomXmlPart.toJSON
  summary: <span data-ttu-id="80e9c-138">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="80e9c-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="80e9c-139">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. CustomXmlPart original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.CustomXmlPartData` <!-- -->como) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="80e9c-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CustomXmlPart object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomXmlPartData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CustomXmlPartData;'
    return:
      type:
      - excel.Excel.Interfaces.CustomXmlPartData
      description: ''
