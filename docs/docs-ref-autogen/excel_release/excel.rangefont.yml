### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeFont
    summary: |-
      <span data-ttu-id="13714-101">Este objeto representa los atributos de fuente (nombre de fuente, tamaño de fuente, color, etc.) de un objeto.</span><span class="sxs-lookup"><span data-stu-id="13714-101">This object represents the font attributes (font name, font size, color, etc.) for an object.</span></span>

      <span data-ttu-id="13714-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeFont
    fullName: Excel.RangeFont
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeFont.bold
      - excel_release.Excel.RangeFont.color
      - excel_release.Excel.RangeFont.context
      - excel_release.Excel.RangeFont.italic
      - excel_release.Excel.RangeFont.load
      - excel_release.Excel.RangeFont.load_1
      - excel_release.Excel.RangeFont.load_2
      - excel_release.Excel.RangeFont.name
      - excel_release.Excel.RangeFont.set
      - excel_release.Excel.RangeFont.set_1
      - excel_release.Excel.RangeFont.size
      - excel_release.Excel.RangeFont.toJSON
      - excel_release.Excel.RangeFont.underline
  - uid: excel_release.Excel.RangeFont.bold
    summary: |-
      <span data-ttu-id="13714-103">Representa el estado de negrita de la fuente.</span><span class="sxs-lookup"><span data-stu-id="13714-103">Represents the bold status of font.</span></span>

      <span data-ttu-id="13714-104">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeFont.color
    summary: |-
      <span data-ttu-id="13714-105">Representación del código de color HTML del color del texto.</span><span class="sxs-lookup"><span data-stu-id="13714-105">HTML color code representation of the text color.</span></span> <span data-ttu-id="13714-106">Por ejemplo</span><span class="sxs-lookup"><span data-stu-id="13714-106">E.g.</span></span> <span data-ttu-id="13714-107">\#FF0000 representa el rojo.</span><span class="sxs-lookup"><span data-stu-id="13714-107">\#FF0000 represents Red.</span></span>

      <span data-ttu-id="13714-108">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.RangeFont.context
    summary: <span data-ttu-id="13714-109">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="13714-109">The request context associated with the object.</span></span> <span data-ttu-id="13714-110">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="13714-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeFont.italic
    summary: |-
      <span data-ttu-id="13714-111">Representa el estado de cursiva de la fuente.</span><span class="sxs-lookup"><span data-stu-id="13714-111">Represents the italic status of the font.</span></span>

      <span data-ttu-id="13714-112">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeFont.load
    summary: '<span data-ttu-id="13714-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="13714-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13714-114">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="13714-114">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="13714-115">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="13714-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="13714-116">`load(option?: string | string[]): Excel.RangeFont`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="13714-116">`load(option?: string | string[]): Excel.RangeFont` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="13714-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="13714-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="13714-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="13714-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont` - Only available on collection types.</span></span> <span data-ttu-id="13714-119">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="13714-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="13714-120">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="13714-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="13714-121">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="13714-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="13714-122">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="13714-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeFontLoadOptions
  - uid: excel_release.Excel.RangeFont.load_1
    summary: <span data-ttu-id="13714-123">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="13714-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13714-124">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="13714-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13714-125">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="13714-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var rangeFont = range.format.font;
              rangeFont.load('name');
              return ctx.sync().then(function() {
                  console.log(rangeFont.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.font.name = 'Times New Roman';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="13714-126">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="13714-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.RangeFont.load_2
    summary: <span data-ttu-id="13714-127">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="13714-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13714-128">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="13714-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="13714-129">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="13714-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.RangeFont.name
    summary: |-
      <span data-ttu-id="13714-130">Nombre de fuente (por ejemplo, "Calibri")</span><span class="sxs-lookup"><span data-stu-id="13714-130">Font name (e.g. "Calibri")</span></span>

      <span data-ttu-id="13714-131">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.RangeFont.set
    summary: '<span data-ttu-id="13714-132">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="13714-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="13714-133">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="13714-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="13714-134">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="13714-134">This method has the following additional signature:</span></span>

      `set(properties: Excel.RangeFont): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="13714-135">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="13714-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.RangeFontUpdateData
        - id: options
          description: <span data-ttu-id="13714-136">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="13714-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.RangeFont.set_1
    summary: '<span data-ttu-id="13714-137">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="13714-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFont): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeFont
  - uid: excel_release.Excel.RangeFont.size
    summary: |-
      <span data-ttu-id="13714-138">Tamaño de fuente.</span><span class="sxs-lookup"><span data-stu-id="13714-138">Font size.</span></span>

      <span data-ttu-id="13714-139">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeFont.toJSON
    summary: '<span data-ttu-id="13714-140">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="13714-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="13714-141">.</span><span class="sxs-lookup"><span data-stu-id="13714-141"></span></span> <span data-ttu-id="13714-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="13714-142"></span></span><!-- --><span data-ttu-id="13714-143">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. RangeFont original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.RangeFontData`</span><span class="sxs-lookup"><span data-stu-id="13714-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFontData`</span></span><!-- --><span data-ttu-id="13714-144">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="13714-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFontData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeFontData
        description: ''
  - uid: excel_release.Excel.RangeFont.underline
    summary: |-
      <span data-ttu-id="13714-145">Tipo de subrayado aplicado a la fuente.</span><span class="sxs-lookup"><span data-stu-id="13714-145">Type of underline applied to the font.</span></span> <span data-ttu-id="13714-146">Consulte Excel. RangeUnderlineStyle para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="13714-146">See Excel.RangeUnderlineStyle for details.</span></span>

      <span data-ttu-id="13714-147">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13714-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
      return:
        type:
          - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"