### YamlMime:UniversalReference
ms.openlocfilehash: 8c3288be5aa8e5d49c1608aa409e9d99d515c4c8
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114606"
items:
- uid: excel_release.Excel.WorkbookCreated
  summary: >-
    <span data-ttu-id="c1e52-101">El objeto WorkbookCreated es el objeto de nivel superior creado por Application. CreateWorkbook.</span><span class="sxs-lookup"><span data-stu-id="c1e52-101">The WorkbookCreated object is the top level object created by Application.CreateWorkbook.</span></span> <span data-ttu-id="c1e52-102">Un objeto WorkbookCreated es un objeto de libro especial.</span><span class="sxs-lookup"><span data-stu-id="c1e52-102">A WorkbookCreated object is a special Workbook object.</span></span>


    <span data-ttu-id="c1e52-103">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1e52-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookCreated
  fullName: Excel.WorkbookCreated
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorkbookCreated.context
  - excel_release.Excel.WorkbookCreated.load
  - excel_release.Excel.WorkbookCreated.load_1
  - excel_release.Excel.WorkbookCreated.toJSON
- uid: excel_release.Excel.WorkbookCreated.context
  summary: <span data-ttu-id="c1e52-104">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="c1e52-104">The request context associated with the object.</span></span> <span data-ttu-id="c1e52-105">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="c1e52-105">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorkbookCreated.load
  summary: <span data-ttu-id="c1e52-106">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c1e52-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1e52-107">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1e52-107">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookCreated;'
    return:
      type:
      - excel.Excel.WorkbookCreated
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c1e52-108">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="c1e52-108">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorkbookCreated.load_1
  summary: <span data-ttu-id="c1e52-109">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c1e52-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1e52-110">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1e52-110">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookCreated;'
    return:
      type:
      - excel.Excel.WorkbookCreated
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="c1e52-111">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="c1e52-111">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorkbookCreated.toJSON
  summary: <span data-ttu-id="c1e52-112">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="c1e52-112">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c1e52-113">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. WorkbookCreated original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.WorkbookCreatedData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="c1e52-113">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookCreated object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookCreatedData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookCreatedData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookCreatedData
      description: ''
