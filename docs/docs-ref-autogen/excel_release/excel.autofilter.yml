### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.AutoFilter
    summary: |-
      Representa el objeto AutoFilter. Autofiltro convierte los valores de la columna de Excel en filtros específicos basándose en el contenido de las celdas.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.AutoFilter
    fullName: Excel.AutoFilter
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.AutoFilter.apply
      - excel_release.Excel.AutoFilter.clearCriteria
      - excel_release.Excel.AutoFilter.context
      - excel_release.Excel.AutoFilter.criteria
      - excel_release.Excel.AutoFilter.enabled
      - excel_release.Excel.AutoFilter.getRange
      - excel_release.Excel.AutoFilter.getRangeOrNullObject
      - excel_release.Excel.AutoFilter.isDataFiltered
      - excel_release.Excel.AutoFilter.load
      - excel_release.Excel.AutoFilter.load_1
      - excel_release.Excel.AutoFilter.load_2
      - excel_release.Excel.AutoFilter.reapply
      - excel_release.Excel.AutoFilter.remove
      - excel_release.Excel.AutoFilter.toJSON
  - uid: excel_release.Excel.AutoFilter.apply
    summary: |-
      Aplica el Autofiltro a un rango. Esto filtra la columna si se especifican el índice de columna y los criterios de filtro.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(range, columnIndex, criteria)'
    fullName: 'apply(range, columnIndex, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(range: Range | string, columnIndex?: number, criteria?: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
      parameters:
        - id: range
          description: El intervalo en el que se aplicará el Autofiltro.
          type:
            - Range | string
        - id: columnIndex
          description: Índice de columna de base cero al que se aplica el Autofiltro.
          type:
            - number
        - id: criteria
          description: Los criterios de filtro.
          type:
            - excel.Excel.FilterCriteria
  - uid: excel_release.Excel.AutoFilter.clearCriteria
    summary: |-
      Borra los criterios de filtro del Autofiltro.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearCriteria()
    fullName: clearCriteria()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearCriteria(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.AutoFilter.context
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.AutoFilter.criteria
    summary: |-
      Una matriz que contiene todos los criterios de filtro en el rango autofiltrado. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria[];'
      return:
        type:
          - 'Excel.FilterCriteria[]'
  - uid: excel_release.Excel.AutoFilter.enabled
    summary: |-
      Indica si AutoFilter está habilitada o no. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly enabled: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.AutoFilter.getRange
    summary: |-
      Devuelve un objeto Range que representa el intervalo al que se aplica el objeto AutoFilter.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.AutoFilter.getRangeOrNullObject
    summary: |-
      Devuelve un objeto Range que representa el intervalo al que se aplica el objeto AutoFilter. Si no hay ningún objeto Range asociado al Autofiltro, este método devuelve un objeto null.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.AutoFilter.isDataFiltered
    summary: |-
      Indica si AutoFilter tiene criterios de filtro. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isDataFiltered
    fullName: isDataFiltered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDataFiltered: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.AutoFilter.load
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.AutoFilter`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.AutoFilter`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.AutoFilterLoadOptions): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.AutoFilterLoadOptions
  - uid: excel_release.Excel.AutoFilter.load_1
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.AutoFilter.load_2
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.AutoFilter.reapply
    summary: |-
      Aplica el objeto Autofilter especificado actualmente en el intervalo.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.AutoFilter.remove
    summary: |-
      Quita el AutoFilter para el intervalo.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: remove()
    fullName: remove()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.AutoFilter.toJSON
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. AutoFilter original es un objeto API `toJSON` , el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.AutoFilterData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.AutoFilterData;'
      return:
        type:
          - excel.Excel.Interfaces.AutoFilterData
        description: ''