### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Worksheet
    summary: |-
      <span data-ttu-id="23034-101">Una hoja de cálculo de Excel es una cuadrícula de celdas.</span><span class="sxs-lookup"><span data-stu-id="23034-101">An Excel worksheet is a grid of cells.</span></span> <span data-ttu-id="23034-102">Puede contener datos, tablas, gráficos, etc.</span><span class="sxs-lookup"><span data-stu-id="23034-102">It can contain data, tables, charts, etc.</span></span>

      <span data-ttu-id="23034-103">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-103">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Worksheet
    fullName: Excel.Worksheet
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Worksheet.activate
      - excel_release.Excel.Worksheet.calculate
      - excel_release.Excel.Worksheet.charts
      - excel_release.Excel.Worksheet.context
      - excel_release.Excel.Worksheet.copy
      - excel_release.Excel.Worksheet.copy_1
      - excel_release.Excel.Worksheet.delete
      - excel_release.Excel.Worksheet.freezePanes
      - excel_release.Excel.Worksheet.getCell
      - excel_release.Excel.Worksheet.getNext
      - excel_release.Excel.Worksheet.getNextOrNullObject
      - excel_release.Excel.Worksheet.getPrevious
      - excel_release.Excel.Worksheet.getPreviousOrNullObject
      - excel_release.Excel.Worksheet.getRange
      - excel_release.Excel.Worksheet.getRangeByIndexes
      - excel_release.Excel.Worksheet.getUsedRange
      - excel_release.Excel.Worksheet.getUsedRangeOrNullObject
      - excel_release.Excel.Worksheet.id
      - excel_release.Excel.Worksheet.load
      - excel_release.Excel.Worksheet.load_1
      - excel_release.Excel.Worksheet.load_2
      - excel_release.Excel.Worksheet.name
      - excel_release.Excel.Worksheet.names
      - excel_release.Excel.Worksheet.onActivated
      - excel_release.Excel.Worksheet.onCalculated
      - excel_release.Excel.Worksheet.onChanged
      - excel_release.Excel.Worksheet.onDeactivated
      - excel_release.Excel.Worksheet.onSelectionChanged
      - excel_release.Excel.Worksheet.pivotTables
      - excel_release.Excel.Worksheet.position
      - excel_release.Excel.Worksheet.protection
      - excel_release.Excel.Worksheet.set
      - excel_release.Excel.Worksheet.set_1
      - excel_release.Excel.Worksheet.showGridlines
      - excel_release.Excel.Worksheet.showHeadings
      - excel_release.Excel.Worksheet.standardHeight
      - excel_release.Excel.Worksheet.standardWidth
      - excel_release.Excel.Worksheet.tabColor
      - excel_release.Excel.Worksheet.tables
      - excel_release.Excel.Worksheet.toJSON
      - excel_release.Excel.Worksheet.visibility
  - uid: excel_release.Excel.Worksheet.activate
    summary: |-
      <span data-ttu-id="23034-104">Activa la hoja de cálculo en la interfaz de usuario de Excel.</span><span class="sxs-lookup"><span data-stu-id="23034-104">Activate the worksheet in the Excel UI.</span></span>

      <span data-ttu-id="23034-105">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-106">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.activate();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.Worksheet.calculate
    summary: |-
      <span data-ttu-id="23034-107">Calcula todas las celdas de una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-107">Calculates all cells on a worksheet.</span></span>

      <span data-ttu-id="23034-108">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-108">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(markAllDirty)
    fullName: calculate(markAllDirty)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(markAllDirty: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: markAllDirty
          description: '<span data-ttu-id="23034-109">True, para marcar todos como modificados.</span><span class="sxs-lookup"><span data-stu-id="23034-109">True, to mark all as dirty.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.charts
    summary: |-
      <span data-ttu-id="23034-110">Devuelve la colección de gráficos que forman parte de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-110">Returns collection of charts that are part of the worksheet.</span></span> <span data-ttu-id="23034-111">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-111">Read-only.</span></span>

      <span data-ttu-id="23034-112">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: charts
    fullName: charts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly charts: Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
  - uid: excel_release.Excel.Worksheet.context
    summary: <span data-ttu-id="23034-113">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="23034-113">The request context associated with the object.</span></span> <span data-ttu-id="23034-114">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="23034-114">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Worksheet.copy
    summary: |-
      <span data-ttu-id="23034-115">Copia una hoja de cálculo y la coloca en la posición especificada.</span><span class="sxs-lookup"><span data-stu-id="23034-115">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="23034-116">Devuelve la hoja de cálculo copiada.</span><span class="sxs-lookup"><span data-stu-id="23034-116">Return the copied worksheet.</span></span>

      <span data-ttu-id="23034-117">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionType, relativeTo)'
    fullName: 'copy(positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionType?: Excel.WorksheetPositionType, relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-118">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-118">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let sampleSheet = myWorkbook.worksheets.getActiveWorksheet();
              let copiedSheet = sampleSheet.copy("End")

              sampleSheet.load("name");
              copiedSheet.load("name");

              await context.sync();

              console.log("'" + sampleSheet.name + "' was copied to '" + copiedSheet.name + "'")
          });
          ```
      parameters:
        - id: positionType
          description: <span data-ttu-id="23034-119">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-119">Optional.</span></span>
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: <span data-ttu-id="23034-120">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-120">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel_release.Excel.Worksheet.copy_1
    summary: |-
      <span data-ttu-id="23034-121">Copia una hoja de cálculo y la coloca en la posición especificada.</span><span class="sxs-lookup"><span data-stu-id="23034-121">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="23034-122">Devuelve la hoja de cálculo copiada.</span><span class="sxs-lookup"><span data-stu-id="23034-122">Return the copied worksheet.</span></span>

      <span data-ttu-id="23034-123">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionTypeString, relativeTo)'
    fullName: 'copy(positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: positionTypeString
          description: <span data-ttu-id="23034-124">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-124">Optional.</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: <span data-ttu-id="23034-125">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-125">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel_release.Excel.Worksheet.delete
    summary: |-
      <span data-ttu-id="23034-126">Elimina la hoja de cálculo del libro.</span><span class="sxs-lookup"><span data-stu-id="23034-126">Deletes the worksheet from the workbook.</span></span>

      <span data-ttu-id="23034-127">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-128">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.Worksheet.freezePanes
    summary: |-
      <span data-ttu-id="23034-129">Obtiene un objeto que se puede usar para manipular paneles inmovilizados en la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-129">Gets an object that can be used to manipulate frozen panes on the worksheet.</span></span> <span data-ttu-id="23034-130">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-130">Read-only.</span></span>

      <span data-ttu-id="23034-131">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-131">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezePanes
    fullName: freezePanes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly freezePanes: Excel.WorksheetFreezePanes;'
      return:
        type:
          - excel.Excel.WorksheetFreezePanes
  - uid: excel_release.Excel.Worksheet.getCell
    summary: |-
      <span data-ttu-id="23034-132">Obtiene el objeto de intervalo que contiene la celda en función de los números de fila y columna.</span><span class="sxs-lookup"><span data-stu-id="23034-132">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="23034-133">La celda puede estar fuera de los límites de su rango primario, siempre y cuando se mantenga dentro de la cuadrícula de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-133">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>

      <span data-ttu-id="23034-134">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-135">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var cell = worksheet.getCell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="23034-136">Número de fila de la celda que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="23034-136">The row number of the cell to be retrieved.</span></span> <span data-ttu-id="23034-137">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="23034-137">Zero-indexed.</span></span>
          type:
            - number
        - id: column
          description: <span data-ttu-id="23034-138">Número de columna de la celda que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="23034-138">the column number of the cell to be retrieved.</span></span> <span data-ttu-id="23034-139">Indexado con cero.</span><span class="sxs-lookup"><span data-stu-id="23034-139">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.Worksheet.getNext
    summary: |-
      <span data-ttu-id="23034-140">Obtiene la hoja de cálculo que sigue a este.</span><span class="sxs-lookup"><span data-stu-id="23034-140">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="23034-141">Si no hay ninguna hoja de cálculo después de esta, este método producirá un error.</span><span class="sxs-lookup"><span data-stu-id="23034-141">If there are no worksheets following this one, this method will throw an error.</span></span>

      <span data-ttu-id="23034-142">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-142">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNext(visibleOnly)
    fullName: getNext(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-143">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-143">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="23034-144">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-144">Optional.</span></span> <span data-ttu-id="23034-145">Si es true, solo tiene en cuenta las hojas de cálculo visibles y se omite sobre las ocultas.</span><span class="sxs-lookup"><span data-stu-id="23034-145">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getNextOrNullObject
    summary: |-
      <span data-ttu-id="23034-146">Obtiene la hoja de cálculo que sigue a este.</span><span class="sxs-lookup"><span data-stu-id="23034-146">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="23034-147">Si no hay ninguna hoja de cálculo después de ésta, este método devolverá un objeto null.</span><span class="sxs-lookup"><span data-stu-id="23034-147">If there are no worksheets following this one, this method will return a null object.</span></span>

      <span data-ttu-id="23034-148">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-148">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject(visibleOnly)
    fullName: getNextOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="23034-149">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-149">Optional.</span></span> <span data-ttu-id="23034-150">Si es true, solo tiene en cuenta las hojas de cálculo visibles y se omite sobre las ocultas.</span><span class="sxs-lookup"><span data-stu-id="23034-150">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getPrevious
    summary: |-
      <span data-ttu-id="23034-151">Obtiene la hoja de cálculo que precede a esta.</span><span class="sxs-lookup"><span data-stu-id="23034-151">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="23034-152">Si no hay ninguna hoja de cálculo anterior, este método producirá un error.</span><span class="sxs-lookup"><span data-stu-id="23034-152">If there are no previous worksheets, this method will throw an error.</span></span>

      <span data-ttu-id="23034-153">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-153">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrevious(visibleOnly)
    fullName: getPrevious(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-154">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-154">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;
              const currentSheet = sheets.getActiveWorksheet();
              const previousYearSheet = currentSheet.getPrevious();
              const currentTaxDueRange = currentSheet.getRange("C2");
              const previousTaxDueRange = previousYearSheet.getRange("C2");

              currentSheet.load("name");
              previousYearSheet.load("name");
              currentTaxDueRange.load("text");
              previousTaxDueRange.load("text");

              await context.sync();

              let currentYear = currentSheet.name.substr(5, 4);
              let previousYear = previousYearSheet.name.substr(5, 4);
              console.log("Two Year Tax Due Comparison", `Tax due for ${currentYear} was ${currentTaxDueRange.text[0][0]}\nTax due for ${previousYear} was ${previousTaxDueRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="23034-155">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-155">Optional.</span></span> <span data-ttu-id="23034-156">Si es true, solo tiene en cuenta las hojas de cálculo visibles y se omite sobre las ocultas.</span><span class="sxs-lookup"><span data-stu-id="23034-156">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getPreviousOrNullObject
    summary: |-
      <span data-ttu-id="23034-157">Obtiene la hoja de cálculo que precede a esta.</span><span class="sxs-lookup"><span data-stu-id="23034-157">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="23034-158">Si no hay ninguna hoja de cálculo anterior, este método devolverá un objetos null.</span><span class="sxs-lookup"><span data-stu-id="23034-158">If there are no previous worksheets, this method will return a null objet.</span></span>

      <span data-ttu-id="23034-159">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-159">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject(visibleOnly)
    fullName: getPreviousOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="23034-160">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-160">Optional.</span></span> <span data-ttu-id="23034-161">Si es true, solo tiene en cuenta las hojas de cálculo visibles y se omite sobre las ocultas.</span><span class="sxs-lookup"><span data-stu-id="23034-161">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getRange
    summary: |-
      <span data-ttu-id="23034-162">Obtiene el objeto de intervalo, que representa un único bloque rectangular de celdas, especificado por la dirección o el nombre.</span><span class="sxs-lookup"><span data-stu-id="23034-162">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>

      <span data-ttu-id="23034-163">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange(address)
    fullName: getRange(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(address?: string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-164">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-164">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeName = 'MyRange';
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="23034-165">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-165">Optional.</span></span> <span data-ttu-id="23034-166">La cadena que representa la dirección o el nombre del intervalo.</span><span class="sxs-lookup"><span data-stu-id="23034-166">The string representing the address or name of the range.</span></span> <span data-ttu-id="23034-167">Por ejemplo, "a1: B2".</span><span class="sxs-lookup"><span data-stu-id="23034-167">For example, "A1:B2".</span></span> <span data-ttu-id="23034-168">Si no se especifica, se devuelve todo el intervalo de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-168">If not specified, the entire worksheet range is returned.</span></span>'
          type:
            - string
  - uid: excel_release.Excel.Worksheet.getRangeByIndexes
    summary: |-
      <span data-ttu-id="23034-169">Obtiene el objeto de intervalo comenzando en un índice de columna y fila determinado, y que abarca un determinado número de filas y columnas.</span><span class="sxs-lookup"><span data-stu-id="23034-169">Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.</span></span>

      <span data-ttu-id="23034-170">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-170">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    fullName: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeByIndexes(startRow: number, startColumn: number, rowCount: number, columnCount: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: startRow
          description: <span data-ttu-id="23034-171">Fila de inicio (indizado con ceros).</span><span class="sxs-lookup"><span data-stu-id="23034-171">Start row (zero-indexed).</span></span>
          type:
            - number
        - id: startColumn
          description: <span data-ttu-id="23034-172">Columna de inicio (indizado con ceros).</span><span class="sxs-lookup"><span data-stu-id="23034-172">Start column (zero-indexed).</span></span>
          type:
            - number
        - id: rowCount
          description: <span data-ttu-id="23034-173">Número de filas que se van a incluir en el rango.</span><span class="sxs-lookup"><span data-stu-id="23034-173">Number of rows to include in the range.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="23034-174">Número de columnas que se van a incluir en el rango.</span><span class="sxs-lookup"><span data-stu-id="23034-174">Number of columns to include in the range.</span></span>
          type:
            - number
  - uid: excel_release.Excel.Worksheet.getUsedRange
    summary: |-
      <span data-ttu-id="23034-175">El rango usado es el rango más pequeño que abarque todas las celdas que tengan asignado un valor o un formato.</span><span class="sxs-lookup"><span data-stu-id="23034-175">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them.</span></span> <span data-ttu-id="23034-176">Si toda la hoja de cálculo está en blanco, esta función devolverá la celda superior izquierda (es decir, *no* generará un error).</span><span class="sxs-lookup"><span data-stu-id="23034-176">If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).</span></span>

      <span data-ttu-id="23034-177">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-177">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRange(valuesOnly)
    fullName: getUsedRange(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-178">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-178">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              var usedRange = worksheet.getUsedRange();
              usedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(usedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: valuesOnly
          description: '<span data-ttu-id="23034-179">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-179">Optional.</span></span> <span data-ttu-id="23034-180">Si es true, solo tiene en cuenta las celdas con valores como celdas usadas (ignora el formato).</span><span class="sxs-lookup"><span data-stu-id="23034-180">If true, considers only cells with values as used cells (ignoring formatting).</span></span> <span data-ttu-id="23034-181">\[Conjunto de API: ExcelApi 1,2\]</span><span class="sxs-lookup"><span data-stu-id="23034-181">\[Api set: ExcelApi 1.2\]</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getUsedRangeOrNullObject
    summary: |-
      <span data-ttu-id="23034-p121">El rango usado es el rango más pequeño que abarque todas las celdas que tengan asignado un valor o un formato. Si toda la hoja está en blanco, esta función devolverá un objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="23034-p121">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.</span></span>

      <span data-ttu-id="23034-184">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-184">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRangeOrNullObject(valuesOnly)
    fullName: getUsedRangeOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: valuesOnly
          description: <span data-ttu-id="23034-185">Opcional.</span><span class="sxs-lookup"><span data-stu-id="23034-185">Optional.</span></span> <span data-ttu-id="23034-186">Solo tiene en cuenta las celdas con valores como celdas usadas.</span><span class="sxs-lookup"><span data-stu-id="23034-186">Considers only cells with values as used cells.</span></span>
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.id
    summary: |-
      <span data-ttu-id="23034-p123">Devuelve un valor que identifica de forma única la hoja de cálculo de un libro determinado. El valor del identificador permanece igual, incluso cuando se cambia el nombre de la hoja de cálculo o cuando esta se mueve. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-p123">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>

      <span data-ttu-id="23034-190">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-190">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Worksheet.load
    summary: '<span data-ttu-id="23034-191">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="23034-191">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23034-192">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="23034-192">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="23034-193">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="23034-193">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="23034-194">`load(option?: string | string[]): Excel.Worksheet`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="23034-194">`load(option?: string | string[]): Excel.Worksheet` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="23034-195">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="23034-195">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="23034-196">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="23034-196">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id="23034-197">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="23034-197">It is similar to the preceding signature.</span></span> <span data-ttu-id="23034-198">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="23034-198">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="23034-199">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="23034-199">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="23034-200">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="23034-200">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetLoadOptions): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorksheetLoadOptions
  - uid: excel_release.Excel.Worksheet.load_1
    summary: <span data-ttu-id="23034-201">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="23034-201">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23034-202">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="23034-202">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-203">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-203">Examples</span></span>

          ```javascript
          // Get worksheet properties based on sheet name.
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.load('position')
              return ctx.sync().then(function() {
                      console.log(worksheet.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set worksheet position. 
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.position = 2;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="23034-204">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="23034-204">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Worksheet.load_2
    summary: <span data-ttu-id="23034-205">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="23034-205">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23034-206">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="23034-206">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="23034-207">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="23034-207">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Worksheet.name
    summary: |-
      <span data-ttu-id="23034-208">Nombre para mostrar de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-208">The display name of the worksheet.</span></span>

      <span data-ttu-id="23034-209">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-209">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Worksheet.names
    summary: |-
      <span data-ttu-id="23034-210">Colección de nombres en el ámbito de la hoja de cálculo actual.</span><span class="sxs-lookup"><span data-stu-id="23034-210">Collection of names scoped to the current worksheet.</span></span> <span data-ttu-id="23034-211">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-211">Read-only.</span></span>

      <span data-ttu-id="23034-212">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-212">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel_release.Excel.Worksheet.onActivated
    summary: |-
      <span data-ttu-id="23034-213">Se produce cuando se activa la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-213">Occurs when the worksheet is activated.</span></span>

      <span data-ttu-id="23034-214">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-214">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-215">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-215">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The activated worksheet ID is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.onCalculated
    summary: |-
      <span data-ttu-id="23034-216">Se produce cuando se calcula la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-216">Occurs when the worksheet is calculated.</span></span>

      <span data-ttu-id="23034-217">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-217">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-218">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-218">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onCalculated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The worksheet has recalculated.");
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.onChanged
    summary: |-
      <span data-ttu-id="23034-219">Se produce cuando cambian los datos en una hoja de cálculo específica.</span><span class="sxs-lookup"><span data-stu-id="23034-219">Occurs when data changed on a specific worksheet.</span></span>

      <span data-ttu-id="23034-220">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-220">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-221">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-221">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event.");
          });
          ```
  - uid: excel_release.Excel.Worksheet.onDeactivated
    summary: |-
      <span data-ttu-id="23034-222">Se produce cuando se desactiva la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-222">Occurs when the worksheet is deactivated.</span></span>

      <span data-ttu-id="23034-223">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-223">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-224">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-224">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The deactivated worksheet is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.onSelectionChanged
    summary: |-
      <span data-ttu-id="23034-225">Se produce cuando la selección cambia en una hoja de cálculo específica.</span><span class="sxs-lookup"><span data-stu-id="23034-225">Occurs when the selection changes on a specific worksheet.</span></span>

      <span data-ttu-id="23034-226">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-226">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-227">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-227">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onSelectionChanged.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The selected range has changed to: " + event.address);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.pivotTables
    summary: |-
      <span data-ttu-id="23034-228">Colección de tablas dinámicas que forman parte de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-228">Collection of PivotTables that are part of the worksheet.</span></span> <span data-ttu-id="23034-229">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-229">Read-only.</span></span>

      <span data-ttu-id="23034-230">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-230">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel_release.Excel.Worksheet.position
    summary: |-
      <span data-ttu-id="23034-231">Posición de base cero de la hoja de cálculo dentro del libro.</span><span class="sxs-lookup"><span data-stu-id="23034-231">The zero-based position of the worksheet within the workbook.</span></span>

      <span data-ttu-id="23034-232">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-232">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Worksheet.protection
    summary: |-
      <span data-ttu-id="23034-233">Devuelve el objeto de protección de hoja de una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-233">Returns sheet protection object for a worksheet.</span></span> <span data-ttu-id="23034-234">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-234">Read-only.</span></span>

      <span data-ttu-id="23034-235">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-235">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
  - uid: excel_release.Excel.Worksheet.set
    summary: '<span data-ttu-id="23034-236">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="23034-236">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="23034-237">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="23034-237">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="23034-238">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="23034-238">This method has the following additional signature:</span></span>

      `set(properties: Excel.Worksheet): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorksheetUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="23034-239">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="23034-239">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.WorksheetUpdateData
        - id: options
          description: <span data-ttu-id="23034-240">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-240">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.Worksheet.set_1
    summary: '<span data-ttu-id="23034-241">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="23034-241">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Worksheet): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Worksheet
  - uid: excel_release.Excel.Worksheet.showGridlines
    summary: |-
      <span data-ttu-id="23034-242">Obtiene o establece la marca de las líneas de cuadrícula de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-242">Gets or sets the worksheet's gridlines flag.</span></span> <span data-ttu-id="23034-243">Esta marca determina si el usuario puede ver las líneas de la cuadrícula.</span><span class="sxs-lookup"><span data-stu-id="23034-243">This flag determines whether gridlines are visible to the user.</span></span>

      <span data-ttu-id="23034-244">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-244">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showGridlines
    fullName: showGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showGridlines: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-245">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-245">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.showGridlines = true;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.showHeadings
    summary: |-
      <span data-ttu-id="23034-246">Obtiene o establece la marca de títulos de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-246">Gets or sets the worksheet's headings flag.</span></span> <span data-ttu-id="23034-247">Esta marca determina si los encabezados son visibles para el usuario.</span><span class="sxs-lookup"><span data-stu-id="23034-247">This flag determines whether headings are visible to the user.</span></span>

      <span data-ttu-id="23034-248">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-248">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeadings
    fullName: showHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.Worksheet.standardHeight
    summary: |-
      <span data-ttu-id="23034-249">Devuelve el ancho estándar (predeterminado) de todas las filas de la hoja de cálculo, en puntos.</span><span class="sxs-lookup"><span data-stu-id="23034-249">Returns the standard (default) height of all the rows in the worksheet, in points.</span></span> <span data-ttu-id="23034-250">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-250">Read-only.</span></span>

      <span data-ttu-id="23034-251">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-251">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardHeight
    fullName: standardHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly standardHeight: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Worksheet.standardWidth
    summary: |-
      <span data-ttu-id="23034-252">Devuelve o establece el ancho estándar (predeterminado) de todas las columnas en la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-252">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="23034-253">Una unidad de ancho de columna equivale al ancho de un carácter con el estilo Normal.</span><span class="sxs-lookup"><span data-stu-id="23034-253">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="23034-254">En las fuentes proporcionales se utiliza el ancho del carácter 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="23034-254">For proportional fonts, the width of the character 0 (zero) is used.</span></span>

      <span data-ttu-id="23034-255">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-255">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardWidth
    fullName: standardWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'standardWidth: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Worksheet.tabColor
    summary: |-
      <span data-ttu-id="23034-256">Obtiene o establece el color de pestaña de hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-256">Gets or sets the worksheet tab color.</span></span> <span data-ttu-id="23034-257">Al recuperar el color de la pestaña, si la hoja de cálculo es invisible, el valor será null.</span><span class="sxs-lookup"><span data-stu-id="23034-257">When retrieving the tab color, if the worksheet is invisible, the value will be null.</span></span> <span data-ttu-id="23034-258">Si la hoja de cálculo está visible pero el color de la pestaña está establecido en automático, se devolverá una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="23034-258">If the worksheet is visible but the tab color is set to auto, an empty string will be returned.</span></span> <span data-ttu-id="23034-259">De lo contrario, la propiedad se establecerá en un color, con el\#formato "123456" cuando se establezca el color, use una cadena vacía para establecer un color "auto" o un color real en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="23034-259">Otherwise, the property will be set to a color, in the form "\#123456" When setting the color, use an empty-string to set an "auto" color, or a real color otherwise.</span></span>

      <span data-ttu-id="23034-260">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-260">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tabColor
    fullName: tabColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tabColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="23034-261">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="23034-261">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.tabColor = "#FF0000";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.tables
    summary: |-
      <span data-ttu-id="23034-262">Colección de tablas que forman parte de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-262">Collection of tables that are part of the worksheet.</span></span> <span data-ttu-id="23034-263">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="23034-263">Read-only.</span></span>

      <span data-ttu-id="23034-264">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23034-264">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel_release.Excel.Worksheet.toJSON
    summary: '<span data-ttu-id="23034-265">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="23034-265">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="23034-266">.</span><span class="sxs-lookup"><span data-stu-id="23034-266"></span></span> <span data-ttu-id="23034-267">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="23034-267"></span></span><!-- --><span data-ttu-id="23034-268">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Worksheet original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.WorksheetData`</span><span class="sxs-lookup"><span data-stu-id="23034-268">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`</span></span><!-- --><span data-ttu-id="23034-269">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="23034-269">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetData
        description: ''
  - uid: excel_release.Excel.Worksheet.visibility
    summary: |-
      <span data-ttu-id="23034-270">Visibilidad de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="23034-270">The Visibility of the worksheet.</span></span>

      <span data-ttu-id="23034-271">\[[Conjunto de API: ExcelApi 1,1 para la visibilidad de lectura; 1,2 para establecerla.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="23034-271">\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="23034-272">\]</span><span class="sxs-lookup"><span data-stu-id="23034-272"></span></span>
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
      return:
        type:
          - Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"