### YamlMime:UniversalReference
ms.openlocfilehash: 305ae1cf89ec36fb2facf30722812b7e6783aea7
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30112828"
items:
- uid: excel_release.Excel.Application
  summary: >-
    <span data-ttu-id="fb655-101">Representa la aplicación de Excel que administra el libro.</span><span class="sxs-lookup"><span data-stu-id="fb655-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="fb655-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fb655-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Application.calculate
  - excel_release.Excel.Application.calculate_1
  - excel_release.Excel.Application.calculationMode
  - excel_release.Excel.Application.context
  - excel_release.Excel.Application.load
  - excel_release.Excel.Application.load_1
  - excel_release.Excel.Application.load_2
  - excel_release.Excel.Application.set
  - excel_release.Excel.Application.set_1
  - excel_release.Excel.Application.suspendApiCalculationUntilNextSync
  - excel_release.Excel.Application.toJSON
- uid: excel_release.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="fb655-103">Recalcula todos los libros abiertos actualmente en Excel.</span><span class="sxs-lookup"><span data-stu-id="fb655-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="fb655-104">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fb655-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: calculate(calculationType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: calculationType
      description: <span data-ttu-id="fb655-105">Especifica el tipo de cálculo que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="fb655-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="fb655-106">Consulte Excel. CalculationType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="fb655-106">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel_release.Excel.Application.calculate_1
  summary: >-
    <span data-ttu-id="fb655-107">Recalcula todos los libros abiertos actualmente en Excel.</span><span class="sxs-lookup"><span data-stu-id="fb655-107">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="fb655-108">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fb655-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationTypeString)
  fullName: calculate(calculationTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"fb655-109\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"fb655-109\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationTypeString
      description: <span data-ttu-id="fb655-110">Especifica el tipo de cálculo que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="fb655-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="fb655-111">Consulte Excel. CalculationType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="fb655-111">See Excel.CalculationType for details.</span></span>
      type:
      - "\"Recalculate\" | \"Full\" | \"FullRebuild\""
- uid: excel_release.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="fb655-112">Devuelve el modo de cálculo utilizado en el libro, tal y como se define en las constantes de Excel. CalculationMode.</span><span class="sxs-lookup"><span data-stu-id="fb655-112">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="fb655-113">Los valores posibles son `Automatic` <!-- -->:, donde Excel controla la actualización; `AutomaticExceptTables`, donde Excel controla la actualización de cálculos, pero ignora los cambios en las <!-- -->tablas; `Manual`, donde se realiza el cálculo cuando el usuario lo <!-- -->solicita.</span><span class="sxs-lookup"><span data-stu-id="fb655-113">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="fb655-114">\[[Conjunto de API: ExcelApi 1,1 para get, 1,8 para Set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fb655-114">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel_release.Excel.Application.context
  summary: <span data-ttu-id="fb655-115">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="fb655-115">The request context associated with the object.</span></span> <span data-ttu-id="fb655-116">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="fb655-116">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Application.load
  summary: <span data-ttu-id="fb655-117">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="fb655-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fb655-118">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb655-118">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="fb655-119">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="fb655-119">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="fb655-120">`load(option?: string | string[]): Excel.Application`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="fb655-120">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="fb655-121">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="fb655-121">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="fb655-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="fb655-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="fb655-123">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="fb655-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="fb655-124">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="fb655-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fb655-125">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="fb655-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fb655-126">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="fb655-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ApplicationLoadOptions
- uid: excel_release.Excel.Application.load_1
  summary: <span data-ttu-id="fb655-127">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="fb655-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fb655-128">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb655-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"fb655-129\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"fb655-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="fb655-130">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="fb655-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.Application.load_2
  summary: <span data-ttu-id="fb655-131">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="fb655-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fb655-132">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb655-132">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="fb655-133">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="fb655-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Application.set
  summary: <span data-ttu-id="fb655-134">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="fb655-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="fb655-135">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="fb655-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="fb655-136">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="fb655-136">This method has the following additional signature:</span></span>


    `set(properties: Excel.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="fb655-137">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="fb655-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: <span data-ttu-id="fb655-138">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="fb655-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.Application.set_1
  summary: <span data-ttu-id="fb655-139">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="fb655-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Application
- uid: excel_release.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="fb655-p110">Suspende el cálculo hasta que se llama al siguiente "context.sync()". Una vez establecido, será responsabilidad del desarrollador actualizar el libro para asegurarse de que se propaguen las dependencias.</span><span class="sxs-lookup"><span data-stu-id="fb655-p110">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="fb655-142">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fb655-142">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: suspendApiCalculationUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.Application.toJSON
  summary: <span data-ttu-id="fb655-143">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="fb655-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="fb655-144">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. Application original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.ApplicationData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="fb655-144">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
