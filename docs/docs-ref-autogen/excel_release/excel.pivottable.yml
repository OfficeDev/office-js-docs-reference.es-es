### YamlMime:UniversalReference
ms.openlocfilehash: bc724ea7fc6e5a67dd34313d83f94878fd6f9895
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105499"
items:
- uid: excel_release.Excel.PivotTable
  summary: >-
    <span data-ttu-id="adbb7-101">Representa una tabla dinámica de Excel.</span><span class="sxs-lookup"><span data-stu-id="adbb7-101">Represents an Excel PivotTable.</span></span>


    <span data-ttu-id="adbb7-102">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTable
  fullName: Excel.PivotTable
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.PivotTable.columnHierarchies
  - excel_release.Excel.PivotTable.context
  - excel_release.Excel.PivotTable.dataHierarchies
  - excel_release.Excel.PivotTable.delete
  - excel_release.Excel.PivotTable.filterHierarchies
  - excel_release.Excel.PivotTable.hierarchies
  - excel_release.Excel.PivotTable.id
  - excel_release.Excel.PivotTable.layout
  - excel_release.Excel.PivotTable.load
  - excel_release.Excel.PivotTable.load_1
  - excel_release.Excel.PivotTable.load_2
  - excel_release.Excel.PivotTable.name
  - excel_release.Excel.PivotTable.refresh
  - excel_release.Excel.PivotTable.rowHierarchies
  - excel_release.Excel.PivotTable.set
  - excel_release.Excel.PivotTable.set_1
  - excel_release.Excel.PivotTable.toJSON
  - excel_release.Excel.PivotTable.worksheet
- uid: excel_release.Excel.PivotTable.columnHierarchies
  summary: >-
    <span data-ttu-id="adbb7-103">Las jerarquías dinámicas de columna de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-103">The Column Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-104">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHierarchies
  fullName: columnHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"adbb7-105\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"adbb7-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");       \n\n    // check if the PivotTable already has a column\n    const column = pivotTable.columnHierarchies.getItemOrNullObject(\"Farm\");\n    column.load(\"id\");\n    await context.sync();\n\n    if (column.isNullObject) {\n        // ading the farm column to the column hierarchy automatically removes it from the row hierarchy\n        pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem(\"Farm\"));\n    } else {\n        pivotTable.columnHierarchies.remove(column);\n    }\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.PivotTable.context
  summary: <span data-ttu-id="adbb7-106">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="adbb7-106">The request context associated with the object.</span></span> <span data-ttu-id="adbb7-107">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="adbb7-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.PivotTable.dataHierarchies
  summary: >-
    <span data-ttu-id="adbb7-108">Las jerarquías dinámicas de datos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-108">The Data Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-109">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataHierarchies
  fullName: dataHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.DataPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"adbb7-110\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"adbb7-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold at Farm\"));\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold Wholesale\"));\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.PivotTable.delete
  summary: >-
    <span data-ttu-id="adbb7-111">Elimina la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-111">Deletes the PivotTable.</span></span>


    <span data-ttu-id="adbb7-112">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"adbb7-113\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"adbb7-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.getItem(\"Farm Sales\").delete();\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.PivotTable.filterHierarchies
  summary: >-
    <span data-ttu-id="adbb7-114">Las jerarquías dinámicas de filtro de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-114">The Filter Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-115">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filterHierarchies
  fullName: filterHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.FilterPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"adbb7-116\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"adbb7-116\">Examples</span></span>\n\n```typescript\nasync function filter(functionType: Excel.AggregationFunction) {\n    await Excel.run(async (context) => {\n        const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n        const filters = pivotTable.filterHierarchies;\n        const filter = filters.getItemOrNullObject(\"Classification\");\n        filter.load();\n        await context.sync();\n\n        // add the Classification hierarchy to the filter, if it's not already there\n        if (filter.isNullObject) {\n            filters.add(pivotTable.hierarchies.getItem(\"Classification\"));\n            await context.sync();\n        }\n    });\n}\n```"
- uid: excel_release.Excel.PivotTable.hierarchies
  summary: >-
    <span data-ttu-id="adbb7-117">Las jerarquías dinámicas de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-117">The Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-118">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hierarchies
  fullName: hierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.PivotHierarchyCollection
- uid: excel_release.Excel.PivotTable.id
  summary: >-
    <span data-ttu-id="adbb7-p102">ID de la tabla dinámica. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="adbb7-p102">Id of the PivotTable. Read-only.</span></span>


    <span data-ttu-id="adbb7-121">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-121">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.PivotTable.layout
  summary: >-
    <span data-ttu-id="adbb7-122">El PivotLayout que describe el diseño y la estructura visual de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-122">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-123">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layout
  fullName: layout
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly layout: Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"adbb7-124\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"adbb7-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.layout.load(\"layoutType\");\n    await context.sync();\n\n    // cycle between the three layout types\n    if (pivotTable.layout.layoutType === \"Compact\") {\n        pivotTable.layout.layoutType = \"Outline\";\n    } else if (pivotTable.layout.layoutType === \"Outline\") {\n        pivotTable.layout.layoutType = \"Tabular\";\n    } else {\n        pivotTable.layout.layoutType = \"Compact\";\n    }\n    await context.sync();\n    console.log(\"Pivot layout is now \" + pivotTable.layout.layoutType);\n});\n```"
- uid: excel_release.Excel.PivotTable.load
  summary: <span data-ttu-id="adbb7-125">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="adbb7-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="adbb7-126">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="adbb7-126">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="adbb7-127">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="adbb7-127">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="adbb7-128">`load(option?: string | string[]): Excel.PivotTable`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="adbb7-128">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="adbb7-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="adbb7-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="adbb7-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="adbb7-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="adbb7-131">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="adbb7-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="adbb7-132">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="adbb7-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="adbb7-133">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="adbb7-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="adbb7-134">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="adbb7-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotTableLoadOptions
- uid: excel_release.Excel.PivotTable.load_1
  summary: <span data-ttu-id="adbb7-135">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="adbb7-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="adbb7-136">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="adbb7-136">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="adbb7-137">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="adbb7-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.PivotTable.load_2
  summary: <span data-ttu-id="adbb7-138">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="adbb7-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="adbb7-139">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="adbb7-139">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="adbb7-140">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="adbb7-140">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.PivotTable.name
  summary: >-
    <span data-ttu-id="adbb7-141">Nombre la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-141">Name of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-142">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-142">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.PivotTable.refresh
  summary: >-
    <span data-ttu-id="adbb7-143">Actualiza la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-143">Refreshes the PivotTable.</span></span>


    <span data-ttu-id="adbb7-144">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refresh()
  fullName: refresh()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refresh(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.PivotTable.rowHierarchies
  summary: >-
    <span data-ttu-id="adbb7-145">Las jerarquías dinámicas de fila de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="adbb7-145">The Row Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="adbb7-146">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHierarchies
  fullName: rowHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
- uid: excel_release.Excel.PivotTable.set
  summary: <span data-ttu-id="adbb7-147">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="adbb7-147">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="adbb7-148">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="adbb7-148">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="adbb7-149">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="adbb7-149">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotTable): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="adbb7-150">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="adbb7-150">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotTableUpdateData
    - id: options
      description: <span data-ttu-id="adbb7-151">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="adbb7-151">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.PivotTable.set_1
  summary: <span data-ttu-id="adbb7-152">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="adbb7-152">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotTable): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotTable
- uid: excel_release.Excel.PivotTable.toJSON
  summary: <span data-ttu-id="adbb7-153">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="adbb7-153">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="adbb7-154">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. PivotTable original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.PivotTableData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="adbb7-154">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableData
      description: ''
- uid: excel_release.Excel.PivotTable.worksheet
  summary: >-
    <span data-ttu-id="adbb7-155">La hoja de cálculo que contiene la tabla dinámica actual.</span><span class="sxs-lookup"><span data-stu-id="adbb7-155">The worksheet containing the current PivotTable.</span></span>


    <span data-ttu-id="adbb7-156">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="adbb7-156">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
