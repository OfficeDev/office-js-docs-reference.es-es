### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.NamedItem
    summary: |-
      Representa un nombre definido para un rango de celdas o un valor. Los nombres pueden ser objetos con nombre primitivo (como se ve en el tipo siguiente), un objeto de intervalo o una referencia a un rango. Este objeto puede usarse para obtener un objeto de rango asociado a nombres.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.NamedItem.arrayValues
      - excel_release.Excel.NamedItem.comment
      - excel_release.Excel.NamedItem.context
      - excel_release.Excel.NamedItem.delete
      - excel_release.Excel.NamedItem.formula
      - excel_release.Excel.NamedItem.getRange
      - excel_release.Excel.NamedItem.getRangeOrNullObject
      - excel_release.Excel.NamedItem.load
      - excel_release.Excel.NamedItem.load_1
      - excel_release.Excel.NamedItem.load_2
      - excel_release.Excel.NamedItem.name
      - excel_release.Excel.NamedItem.scope
      - excel_release.Excel.NamedItem.set
      - excel_release.Excel.NamedItem.set_1
      - excel_release.Excel.NamedItem.toJSON
      - excel_release.Excel.NamedItem.type
      - excel_release.Excel.NamedItem.value
      - excel_release.Excel.NamedItem.visible
      - excel_release.Excel.NamedItem.worksheet
      - excel_release.Excel.NamedItem.worksheetOrNullObject
  - uid: excel_release.Excel.NamedItem.arrayValues
    summary: |-
      Devuelve un objeto que contiene los valores y tipos del elemento con nombre. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: arrayValues
    fullName: arrayValues
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
      return:
        type:
          - excel.Excel.NamedItemArrayValues
  - uid: excel_release.Excel.NamedItem.comment
    summary: |-
      Representa el comentario asociado a este nombre.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: comment
    fullName: comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.NamedItem.context
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.NamedItem.delete
    summary: |-
      Elimina el nombre especificado.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const totalName = sheet.names.getItemOrNullObject("TotalAmount");
              totalName.load();
              await context.sync();

              if (totalName.value) {
                  totalName.delete();

                  // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
                  sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
              } else {
                  console.log("No named item created for the formula.");
              }

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.NamedItem.formula
    summary: |-
      Obtiene o establece la fórmula del elemento con nombre. La fórmula siempre comienza con el signo "=".

      \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Get the named item
              const myNamedItem = sheet.names.getItemOrNullObject("MyRange");
              myNamedItem.load("name, formula");
              await context.sync();

              if (myNamedItem.isNullObject) {
                  console.log(`There is no named item. Create it with "Add named item for a range" first.`);
              } else {                    
                  // Update named item to point to the second range
                  myNamedItem.formula = "=Sample!$B$10:$D$14";
                  sheet.getRange("B10:D14").select();
                  await context.sync();

                  console.log(`Just updated the named item "${myNamedItem.name}" -- it's now located here: ${myNamedItem.formula}`);
              }
          });
          ```
  - uid: excel_release.Excel.NamedItem.getRange
    summary: |-
      Devuelve el objeto de rango asociado al nombre. Se produce un error si el tipo del elemento con nombre no es un rango.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.NamedItem.getRangeOrNullObject
    summary: |-
      Devuelve el objeto de rango asociado al nombre. Devuelve un objeto NULL si el tipo de elemento con nombre no es un rango.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.NamedItem.load
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.NamedItem`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.NamedItemLoadOptions
  - uid: excel_release.Excel.NamedItem.load_1
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.NamedItem.load_2
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.NamedItem.name
    summary: |-
      Nombre del objeto. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.NamedItem.scope
    summary: |-
      Indica si el nombre está en el ámbito del libro o de una hoja de cálculo específica. Los valores posibles son: Worksheet, Workbook. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: scope
    fullName: scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type:
          - Excel.NamedItemScope | "Worksheet" | "Workbook"
  - uid: excel_release.Excel.NamedItem.set
    summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
    remarks: |-
      Este método tiene la siguiente firma adicional:

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.NamedItem.set_1
    summary: 'Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.NamedItem
  - uid: excel_release.Excel.NamedItem.toJSON
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. NamedItem original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.NamedItemData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemData
        description: ''
  - uid: excel_release.Excel.NamedItem.type
    summary: |-
      Indica el tipo del valor que devuelve la fórmula del nombre. Consulte Excel. NamedItemType para obtener información detallada. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1 para String, integer, Double, Boolean, Range, error; 1,7 para array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
  - uid: excel_release.Excel.NamedItem.value
    summary: |-
      Representa el valor calculado por la fórmula del nombre. Para un rango con nombre, devolverá la dirección del rango. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: excel_release.Excel.NamedItem.visible
    summary: |-
      Especifica si el objeto es visible o no.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.NamedItem.worksheet
    summary: |-
      Devuelve la hoja de cálculo que tiene como ámbito el elemento con nombre. Produce un error si el elemento se encuentra en su lugar en el ámbito del libro.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
  - uid: excel_release.Excel.NamedItem.worksheetOrNullObject
    summary: |-
      Devuelve la hoja de cálculo que tiene como ámbito el elemento con nombre. Devuelve un objeto NULL si el ámbito del elemento es el libro.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheetOrNullObject
    fullName: worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet