### YamlMime:UniversalReference
ms.openlocfilehash: 4400485bc74cc2f3d42f3a0d92d7e2aa408f813f
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30117035"
items:
- uid: excel_release.Excel.Workbook
  summary: >-
    Workbook es el objeto de nivel superior que contiene los objetos de libro relacionados, como hojas de cálculo, tablas, intervalos, etc.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Workbook
  fullName: Excel.Workbook
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Workbook.application
  - excel_release.Excel.Workbook.bindings
  - excel_release.Excel.Workbook.context
  - excel_release.Excel.Workbook.customXmlParts
  - excel_release.Excel.Workbook.dataConnections
  - excel_release.Excel.Workbook.functions
  - excel_release.Excel.Workbook.getActiveCell
  - excel_release.Excel.Workbook.getSelectedRange
  - excel_release.Excel.Workbook.load
  - excel_release.Excel.Workbook.load_1
  - excel_release.Excel.Workbook.load_2
  - excel_release.Excel.Workbook.name
  - excel_release.Excel.Workbook.names
  - excel_release.Excel.Workbook.onSelectionChanged
  - excel_release.Excel.Workbook.pivotTables
  - excel_release.Excel.Workbook.properties
  - excel_release.Excel.Workbook.protection
  - excel_release.Excel.Workbook.readOnly
  - excel_release.Excel.Workbook.set
  - excel_release.Excel.Workbook.set_1
  - excel_release.Excel.Workbook.settings
  - excel_release.Excel.Workbook.styles
  - excel_release.Excel.Workbook.tables
  - excel_release.Excel.Workbook.toJSON
  - excel_release.Excel.Workbook.worksheets
- uid: excel_release.Excel.Workbook.application
  summary: >-
    Representa la instancia de la aplicación de Excel que contiene este libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: application
  fullName: application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type:
      - excel.Excel.Application
- uid: excel_release.Excel.Workbook.bindings
  summary: >-
    Representa una colección de enlaces que forman parte del libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
- uid: excel_release.Excel.Workbook.context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Workbook.customXmlParts
  summary: >-
    Representa la colección de elementos XML personalizados incluidos en este libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type:
      - excel.Excel.CustomXmlPartCollection
- uid: excel_release.Excel.Workbook.dataConnections
  summary: >-
    Representa todas las conexiones de datos en el libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: dataConnections
  fullName: dataConnections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type:
      - excel.Excel.DataConnectionCollection
- uid: excel_release.Excel.Workbook.functions
  summary: >-
    Representa una colección de funciones de hoja de cálculo que se pueden usar para el cálculo. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: functions
  fullName: functions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type:
      - excel.Excel.Functions
- uid: excel_release.Excel.Workbook.getActiveCell
  summary: >-
    Obtiene la celda activa del libro.


    \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getActiveCell()
  fullName: getActiveCell()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- uid: excel_release.Excel.Workbook.getSelectedRange
  summary: >-
    Obtiene el intervalo único seleccionado actualmente desde el libro. Si hay varios rangos seleccionados, este método generará un error.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getSelectedRange()
  fullName: getSelectedRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Workbook.load
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a "context. Sync ()" antes de leer las propiedades.
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Excel.Workbook`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.


    `load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookLoadOptions
- uid: excel_release.Excel.Workbook.load_1
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type:
      - string | string[]
- uid: excel_release.Excel.Workbook.load_2
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Workbook.name
  summary: >-
    Obtiene el nombre del libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Workbook.names
  summary: >-
    Representa una colección de elementos con nombre en el ámbito del libro (intervalos y constantes con nombre). Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: names
  fullName: names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel_release.Excel.Workbook.onSelectionChanged
  summary: >-
    Se produce al cambiar la selección en el documento.


    \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
- uid: excel_release.Excel.Workbook.pivotTables
  summary: >-
    Representa una colección de tablas dinámicas asociadas con el libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: pivotTables
  fullName: pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel_release.Excel.Workbook.properties
  summary: >-
    Obtiene las propiedades del libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: properties
  fullName: properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type:
      - excel.Excel.DocumentProperties
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- uid: excel_release.Excel.Workbook.protection
  summary: >-
    Devuelve el objeto de protección de un libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: protection
  fullName: protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
- uid: excel_release.Excel.Workbook.readOnly
  summary: >-
    True si el libro está abierto en modo de solo lectura. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: readOnly
  fullName: readOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Workbook.set
  summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
  remarks: >-
    Este método tiene la siguiente firma adicional:


    `set(properties: Excel.Workbook): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
      type:
      - Interfaces.WorkbookUpdateData
    - id: options
      description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.Workbook.set_1
  summary: Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Workbook
- uid: excel_release.Excel.Workbook.settings
  summary: >-
    Representa una colección de configuraciones asociadas con el libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
- uid: excel_release.Excel.Workbook.styles
  summary: >-
    Representa una colección de estilos asociada con el libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: styles
  fullName: styles
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
- uid: excel_release.Excel.Workbook.tables
  summary: >-
    Representa una colección de tablas asociadas con el libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel_release.Excel.Workbook.toJSON
  summary: Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API. (`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. Workbook original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.WorkbookData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookData
      description: ''
- uid: excel_release.Excel.Workbook.worksheets
  summary: >-
    Representa una colección de hojas de cálculo asociadas con el libro. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: worksheets
  fullName: worksheets
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type:
      - excel.Excel.WorksheetCollection
