### YamlMime:UniversalReference
ms.openlocfilehash: b3d75f557edf2d2ba179c2133fb5f35f473f9816
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114319"
items:
- uid: excel_release.Excel.SettingCollection
  summary: >-
    <span data-ttu-id="be1d5-101">Representa una colección de objetos de configuración de pares clave-valor que forman parte del libro.</span><span class="sxs-lookup"><span data-stu-id="be1d5-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="be1d5-102">El ámbito se limita a la combinación por archivo y complemento (panel de tareas o contenido).</span><span class="sxs-lookup"><span data-stu-id="be1d5-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>


    <span data-ttu-id="be1d5-103">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be1d5-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.SettingCollection
  fullName: Excel.SettingCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.SettingCollection.add
  - excel_release.Excel.SettingCollection.context
  - excel_release.Excel.SettingCollection.getCount
  - excel_release.Excel.SettingCollection.getItem
  - excel_release.Excel.SettingCollection.getItemOrNullObject
  - excel_release.Excel.SettingCollection.items
  - excel_release.Excel.SettingCollection.load
  - excel_release.Excel.SettingCollection.load_1
  - excel_release.Excel.SettingCollection.load_2
  - excel_release.Excel.SettingCollection.onSettingsChanged
  - excel_release.Excel.SettingCollection.toJSON
- uid: excel_release.Excel.SettingCollection.add
  summary: >-
    <span data-ttu-id="be1d5-104">Establece o agrega la configuración especificada en el libro.</span><span class="sxs-lookup"><span data-stu-id="be1d5-104">Sets or adds the specified setting to the workbook.</span></span>


    <span data-ttu-id="be1d5-105">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be1d5-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(key, value)
  fullName: add(key, value)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be1d5-106\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"be1d5-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="be1d5-107">La clave de la nueva configuración.</span><span class="sxs-lookup"><span data-stu-id="be1d5-107">The Key of the new setting.</span></span>
      type:
      - string
    - id: value
      description: <span data-ttu-id="be1d5-108">Valor de la nueva configuración.</span><span class="sxs-lookup"><span data-stu-id="be1d5-108">The Value for the new setting.</span></span>
      type:
      - string | number | boolean | Date | Array<any> | any
- uid: excel_release.Excel.SettingCollection.context
  summary: <span data-ttu-id="be1d5-109">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="be1d5-109">The request context associated with the object.</span></span> <span data-ttu-id="be1d5-110">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="be1d5-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.SettingCollection.getCount
  summary: >-
    <span data-ttu-id="be1d5-111">Obtiene el número de configuraciones de una colección.</span><span class="sxs-lookup"><span data-stu-id="be1d5-111">Gets the number of Settings in the collection.</span></span>


    <span data-ttu-id="be1d5-112">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be1d5-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.SettingCollection.getItem
  summary: >-
    <span data-ttu-id="be1d5-113">Obtiene una entrada de configuración mediante la clave.</span><span class="sxs-lookup"><span data-stu-id="be1d5-113">Gets a Setting entry via the key.</span></span>


    <span data-ttu-id="be1d5-114">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be1d5-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="be1d5-115">Clave de la configuración.</span><span class="sxs-lookup"><span data-stu-id="be1d5-115">Key of the setting.</span></span>
      type:
      - string
- uid: excel_release.Excel.SettingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="be1d5-p103">Obtiene una entrada de configuración mediante la clave. Si el valor no existe, devolverá un objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="be1d5-p103">Gets a Setting entry via the key. If the Setting does not exist, will return a null object.</span></span>


    <span data-ttu-id="be1d5-118">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be1d5-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be1d5-119\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"be1d5-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="be1d5-120">La clave de la configuración.</span><span class="sxs-lookup"><span data-stu-id="be1d5-120">The key of the setting.</span></span>
      type:
      - string
- uid: excel_release.Excel.SettingCollection.items
  summary: <span data-ttu-id="be1d5-121">Obtiene los elementos secundarios cargados de esta colección.</span><span class="sxs-lookup"><span data-stu-id="be1d5-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Setting[];'
    return:
      type:
      - Excel.Setting[]
- uid: excel_release.Excel.SettingCollection.load
  summary: <span data-ttu-id="be1d5-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="be1d5-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be1d5-123">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="be1d5-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="be1d5-124">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="be1d5-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="be1d5-125">`load(option?: string | string[]): Excel.SettingCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="be1d5-125">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="be1d5-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="be1d5-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="be1d5-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="be1d5-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="be1d5-128">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="be1d5-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="be1d5-129">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="be1d5-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="be1d5-130">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="be1d5-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="be1d5-131">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="be1d5-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.SettingCollection.load_1
  summary: <span data-ttu-id="be1d5-132">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="be1d5-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be1d5-133">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="be1d5-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="be1d5-134">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="be1d5-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.SettingCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.SettingCollection.onSettingsChanged
  summary: >-
    <span data-ttu-id="be1d5-135">Se produce al cambiar la configuración del documento.</span><span class="sxs-lookup"><span data-stu-id="be1d5-135">Occurs when the Settings in the document are changed.</span></span>


    <span data-ttu-id="be1d5-136">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be1d5-136">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSettingsChanged
  fullName: onSettingsChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be1d5-137\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"be1d5-137\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings; \n    settings.onSettingsChanged.add(onChangedSetting);\n\n    await context.sync();\n    console.log(\"Settings changed handler registered.\");\n});\n```"
- uid: excel_release.Excel.SettingCollection.toJSON
  summary: <span data-ttu-id="be1d5-138">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="be1d5-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="be1d5-139">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el `Excel.SettingCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.SettingCollectionData` <!-- -->como) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="be1d5-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SettingCollectionData
      description: ''
