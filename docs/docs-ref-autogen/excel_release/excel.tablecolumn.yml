### YamlMime:UniversalReference
ms.openlocfilehash: c5101c3974d9926bc691047a2d9d52cb7babc8ce
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110091"
items:
- uid: excel_release.Excel.TableColumn
  summary: >-
    Representa una columna en una tabla.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.TableColumn
  fullName: Excel.TableColumn
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableColumn.context
  - excel_release.Excel.TableColumn.delete
  - excel_release.Excel.TableColumn.filter
  - excel_release.Excel.TableColumn.getDataBodyRange
  - excel_release.Excel.TableColumn.getHeaderRowRange
  - excel_release.Excel.TableColumn.getRange
  - excel_release.Excel.TableColumn.getTotalRowRange
  - excel_release.Excel.TableColumn.id
  - excel_release.Excel.TableColumn.index
  - excel_release.Excel.TableColumn.load
  - excel_release.Excel.TableColumn.load_1
  - excel_release.Excel.TableColumn.load_2
  - excel_release.Excel.TableColumn.name
  - excel_release.Excel.TableColumn.set
  - excel_release.Excel.TableColumn.set_1
  - excel_release.Excel.TableColumn.toJSON
  - excel_release.Excel.TableColumn.values
- uid: excel_release.Excel.TableColumn.context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableColumn.delete
  summary: >-
    Elimina la columna de la tabla.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.filter
  summary: >-
    Recupera el filtro aplicado a la columna. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: filter
  fullName: filter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filter: Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
- uid: excel_release.Excel.TableColumn.getDataBodyRange
  summary: >-
    Obtiene el objeto de rango asociado al cuerpo de datos de la columna.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var dataBodyRange = column.getDataBodyRange();\n    dataBodyRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(dataBodyRange.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getHeaderRowRange
  summary: >-
    Obtiene el objeto de rango asociado a la fila de encabezado de la columna.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getHeaderRowRange()
  fullName: getHeaderRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var headerRowRange = columns.getHeaderRowRange();\n    headerRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(headerRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getRange
  summary: >-
    Obtiene el objeto de rango asociado a toda la columna.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var columnRange = columns.getRange();\n    columnRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(columnRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getTotalRowRange
  summary: >-
    Obtiene el objeto de rango asociado a la fila de totales de la columna.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getTotalRowRange()
  fullName: getTotalRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var totalRowRange = columns.getTotalRowRange();\n    totalRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(totalRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.id
  summary: >-
    Devuelve una clave única que identifica la columna de la tabla. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumn.index
  summary: >-
    Devuelve el número de índice de la columna dentro de la colección de columnas de la tabla. Indizado con cero. Solo lectura.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumn.load
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a "context. Sync ()" antes de leer las propiedades.
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Excel.TableColumn`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.


    `load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableColumnLoadOptions
- uid: excel_release.Excel.TableColumn.load_1
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);\n    column.load('index');\n    return ctx.sync().then(function() {\n        console.log(column.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.values = newValues;\n    column.load('values');\n    return ctx.sync().then(function() {\n        console.log(column.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type:
      - string | string[]
- uid: excel_release.Excel.TableColumn.load_2
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.TableColumn.name
  summary: >-
    Representa el nombre de la columna de la tabla.


    \[[Conjunto de API: ExcelApi 1,1 para obtener el nombre; 1,4 para establecerlo.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.TableColumn.set
  summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
  remarks: >-
    Este método tiene la siguiente firma adicional:


    `set(properties: Excel.TableColumn): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
      type:
      - Interfaces.TableColumnUpdateData
    - id: options
      description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.TableColumn.set_1
  summary: Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.TableColumn): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.TableColumn
- uid: excel_release.Excel.TableColumn.toJSON
  summary: Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API. (`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. TableColumn original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.TableColumnData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnData
      description: ''
- uid: excel_release.Excel.TableColumn.values
  summary: >-
    Representa los valores sin formato del intervalo especificado. Los datos devueltos pueden ser de tipo String, Number o Boolean. Las celdas que contienen un error devolverán la cadena de error.


    \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
