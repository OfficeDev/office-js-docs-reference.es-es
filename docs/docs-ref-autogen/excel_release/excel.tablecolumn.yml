### YamlMime:UniversalReference
ms.openlocfilehash: c5101c3974d9926bc691047a2d9d52cb7babc8ce
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110091"
items:
- uid: excel_release.Excel.TableColumn
  summary: >-
    <span data-ttu-id="ea8e2-101">Representa una columna en una tabla.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-101">Represents a column in a table.</span></span>


    <span data-ttu-id="ea8e2-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumn
  fullName: Excel.TableColumn
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableColumn.context
  - excel_release.Excel.TableColumn.delete
  - excel_release.Excel.TableColumn.filter
  - excel_release.Excel.TableColumn.getDataBodyRange
  - excel_release.Excel.TableColumn.getHeaderRowRange
  - excel_release.Excel.TableColumn.getRange
  - excel_release.Excel.TableColumn.getTotalRowRange
  - excel_release.Excel.TableColumn.id
  - excel_release.Excel.TableColumn.index
  - excel_release.Excel.TableColumn.load
  - excel_release.Excel.TableColumn.load_1
  - excel_release.Excel.TableColumn.load_2
  - excel_release.Excel.TableColumn.name
  - excel_release.Excel.TableColumn.set
  - excel_release.Excel.TableColumn.set_1
  - excel_release.Excel.TableColumn.toJSON
  - excel_release.Excel.TableColumn.values
- uid: excel_release.Excel.TableColumn.context
  summary: <span data-ttu-id="ea8e2-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-103">The request context associated with the object.</span></span> <span data-ttu-id="ea8e2-104">Esto conecta el proceso del complemento con el proceso de la aplicaci√≥n host de Office.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableColumn.delete
  summary: >-
    <span data-ttu-id="ea8e2-105">Elimina la columna de la tabla.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-105">Deletes the column from the table.</span></span>


    <span data-ttu-id="ea8e2-106">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ea8e2-107\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ea8e2-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.filter
  summary: >-
    <span data-ttu-id="ea8e2-p102">Recupera el filtro aplicado a la columna. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-p102">Retrieve the filter applied to the column. Read-only.</span></span>


    <span data-ttu-id="ea8e2-110">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filter
  fullName: filter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filter: Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
- uid: excel_release.Excel.TableColumn.getDataBodyRange
  summary: >-
    <span data-ttu-id="ea8e2-111">Obtiene el objeto de rango asociado al cuerpo de datos de la columna.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-111">Gets the range object associated with the data body of the column.</span></span>


    <span data-ttu-id="ea8e2-112">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ea8e2-113\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ea8e2-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var dataBodyRange = column.getDataBodyRange();\n    dataBodyRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(dataBodyRange.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getHeaderRowRange
  summary: >-
    <span data-ttu-id="ea8e2-114">Obtiene el objeto de rango asociado a la fila de encabezado de la columna.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-114">Gets the range object associated with the header row of the column.</span></span>


    <span data-ttu-id="ea8e2-115">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ea8e2-116\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ea8e2-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var headerRowRange = columns.getHeaderRowRange();\n    headerRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(headerRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getRange
  summary: >-
    <span data-ttu-id="ea8e2-117">Obtiene el objeto de rango asociado a toda la columna.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-117">Gets the range object associated with the entire column.</span></span>


    <span data-ttu-id="ea8e2-118">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ea8e2-119\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ea8e2-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var columnRange = columns.getRange();\n    columnRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(columnRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getTotalRowRange
  summary: >-
    <span data-ttu-id="ea8e2-120">Obtiene el objeto de rango asociado a la fila de totales de la columna.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-120">Gets the range object associated with the totals row of the column.</span></span>


    <span data-ttu-id="ea8e2-121">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ea8e2-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ea8e2-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var totalRowRange = columns.getTotalRowRange();\n    totalRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(totalRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.id
  summary: >-
    <span data-ttu-id="ea8e2-p103">Devuelve una clave √∫nica que identifica la columna de la tabla. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-p103">Returns a unique key that identifies the column within the table. Read-only.</span></span>


    <span data-ttu-id="ea8e2-125">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumn.index
  summary: >-
    <span data-ttu-id="ea8e2-p104">Devuelve el n√∫mero de √≠ndice de la columna dentro de la colecci√≥n de columnas de la tabla. Indizado con cero. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-p104">Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="ea8e2-129">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumn.load
  summary: <span data-ttu-id="ea8e2-130">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ea8e2-131">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-131">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ea8e2-132">Adem√°s de esta firma, este m√©todo tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="ea8e2-132">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ea8e2-133">`load(option?: string | string[]): Excel.TableColumn`-Donde opci√≥n es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="ea8e2-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Where opci√≥n. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegaci√≥n que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ea8e2-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Solo disponible en tipos de colecci√≥n.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="ea8e2-136">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="ea8e2-137">Option. Top especifica el n√∫mero m√°ximo de elementos de colecci√≥n que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ea8e2-138">La opci√≥n. SKIP especifica el n√∫mero de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ea8e2-139">Si se especifica Option. Top, el conjunto de resultados se iniciar√° despu√©s de omitir el n√∫mero especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableColumnLoadOptions
- uid: excel_release.Excel.TableColumn.load_1
  summary: <span data-ttu-id="ea8e2-140">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ea8e2-141">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ea8e2-142\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ea8e2-142\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);\n    column.load('index');\n    return ctx.sync().then(function() {\n        console.log(column.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.values = newValues;\n    column.load('values');\n    return ctx.sync().then(function() {\n        console.log(column.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="ea8e2-143">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableColumn.load_2
  summary: <span data-ttu-id="ea8e2-144">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ea8e2-145">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="ea8e2-146">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegaci√≥n que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.TableColumn.name
  summary: >-
    <span data-ttu-id="ea8e2-147">Representa el nombre de la columna de la tabla.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-147">Represents the name of the table column.</span></span>


    <span data-ttu-id="ea8e2-148">\[[Conjunto de API: ExcelApi 1,1 para obtener el nombre; 1,4 para establecerlo.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="ea8e2-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="ea8e2-149">\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-149"></span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.TableColumn.set
  summary: <span data-ttu-id="ea8e2-150">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ea8e2-151">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="ea8e2-152">Este m√©todo tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="ea8e2-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.TableColumn): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="ea8e2-153">Objeto de JavaScript con propiedades que se estructuran de forma isom√≥rfico a las propiedades del objeto en el que se llama al m√©todo.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableColumnUpdateData
    - id: options
      description: <span data-ttu-id="ea8e2-154">Proporciona una opci√≥n para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.TableColumn.set_1
  summary: <span data-ttu-id="ea8e2-155">Establece varias propiedades en el objeto al mismo tiempo, bas√°ndose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.TableColumn): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.TableColumn
- uid: excel_release.Excel.TableColumn.toJSON
  summary: <span data-ttu-id="ea8e2-156">Reemplaza el m√©todo de JavaScript `toJSON()` para proporcionar un resultado m√°s √∫til cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ea8e2-157">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` m√©todo del objeto que se le pasa). Mientras que el objeto Excel. TableColumn original es un objeto API, `toJSON` el m√©todo devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.TableColumnData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnData
      description: ''
- uid: excel_release.Excel.TableColumn.values
  summary: >-
    <span data-ttu-id="ea8e2-158">Representa los valores sin formato del intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-158">Represents the raw values of the specified range.</span></span> <span data-ttu-id="ea8e2-159">Los datos devueltos pueden ser de tipo String, Number o Boolean.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-159">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="ea8e2-160">Las celdas que contienen un error devolver√°n la cadena de error.</span><span class="sxs-lookup"><span data-stu-id="ea8e2-160">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="ea8e2-161">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea8e2-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
