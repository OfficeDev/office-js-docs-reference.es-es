### YamlMime:UniversalReference
ms.openlocfilehash: 21ad62e657f0c036502f9888a70ceabe0dbd0fb2
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110000"
items:
- uid: excel_release.Excel.RangeBorderCollection
  summary: >-
    <span data-ttu-id="3f3a3-101">Representa los objetos de borde que componen el borde del rango.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-101">Represents the border objects that make up the range border.</span></span>


    <span data-ttu-id="3f3a3-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f3a3-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeBorderCollection
  fullName: Excel.RangeBorderCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.RangeBorderCollection.context
  - excel_release.Excel.RangeBorderCollection.count
  - excel_release.Excel.RangeBorderCollection.getItem
  - excel_release.Excel.RangeBorderCollection.getItem_1
  - excel_release.Excel.RangeBorderCollection.getItemAt
  - excel_release.Excel.RangeBorderCollection.items
  - excel_release.Excel.RangeBorderCollection.load
  - excel_release.Excel.RangeBorderCollection.load_1
  - excel_release.Excel.RangeBorderCollection.load_2
  - excel_release.Excel.RangeBorderCollection.toJSON
- uid: excel_release.Excel.RangeBorderCollection.context
  summary: <span data-ttu-id="3f3a3-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-103">The request context associated with the object.</span></span> <span data-ttu-id="3f3a3-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.RangeBorderCollection.count
  summary: >-
    <span data-ttu-id="3f3a3-p102">Número de objetos de borde de la colección. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-p102">Number of border objects in the collection. Read-only.</span></span>


    <span data-ttu-id="3f3a3-107">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f3a3-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.RangeBorderCollection.getItem
  summary: >-
    <span data-ttu-id="3f3a3-108">Obtiene un objeto de borde mediante su nombre.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-108">Gets a border object using its name.</span></span>


    <span data-ttu-id="3f3a3-109">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f3a3-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3f3a3-110\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"3f3a3-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borderName = 'EdgeTop';\n    var border = range.format.borders.getItem(borderName);\n    border.load('style');\n    return ctx.sync().then(function() {\n            console.log(border.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="3f3a3-111">Valor de índice del objeto Border que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="3f3a3-112">Consulte Excel. BorderIndex para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-112">See Excel.BorderIndex for details.</span></span>
      type:
      - excel.Excel.BorderIndex
- uid: excel_release.Excel.RangeBorderCollection.getItem_1
  summary: >-
    <span data-ttu-id="3f3a3-113">Obtiene un objeto de borde mediante su nombre.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-113">Gets a border object using its name.</span></span>


    <span data-ttu-id="3f3a3-114">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f3a3-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(indexString)
  fullName: getItem(indexString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: ''
    parameters:
    - id: indexString
      description: <span data-ttu-id="3f3a3-115">Valor de índice del objeto Border que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="3f3a3-116">Consulte Excel. BorderIndex para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-116">See Excel.BorderIndex for details.</span></span>
      type:
      - "\"EdgeTop\" | \"EdgeBottom\" | \"EdgeLeft\" | \"EdgeRight\" | \"InsideVertical\" | \"InsideHorizontal\" | \"DiagonalDown\" | \"DiagonalUp\""
- uid: excel_release.Excel.RangeBorderCollection.getItemAt
  summary: >-
    <span data-ttu-id="3f3a3-117">Obtiene un objeto de borde mediante su índice.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-117">Gets a border object using its index.</span></span>


    <span data-ttu-id="3f3a3-118">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f3a3-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3f3a3-119\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"3f3a3-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var border = range.format.borders.getItemAt(0);\n    border.load('sideIndex');\n    return ctx.sync().then(function() {\n        console.log(border.sideIndex);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="3f3a3-p105">Valor de índice del objeto que se va a recuperar. Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.RangeBorderCollection.items
  summary: <span data-ttu-id="3f3a3-122">Obtiene los elementos secundarios cargados de esta colección.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-122">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeBorder[];'
    return:
      type:
      - Excel.RangeBorder[]
- uid: excel_release.Excel.RangeBorderCollection.load
  summary: <span data-ttu-id="3f3a3-123">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3f3a3-124">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-124">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="3f3a3-125">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="3f3a3-125">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="3f3a3-126">`load(option?: string | string[]): Excel.RangeBorderCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-126">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="3f3a3-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="3f3a3-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id="3f3a3-129">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="3f3a3-130">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3f3a3-131">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3f3a3-132">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.RangeBorderCollection.load_1
  summary: <span data-ttu-id="3f3a3-133">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3f3a3-134">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-134">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3f3a3-135\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"3f3a3-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borders = range.format.borders;\n    border.load('items');\n    return ctx.sync().then(function() {\n        console.log(borders.count);\n        for (var i = 0; i < borders.items.length; i++)\n        {\n            console.log(borders.items[i].sideIndex);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="3f3a3-136">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.RangeBorderCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.RangeBorderCollection.toJSON
  summary: <span data-ttu-id="3f3a3-137">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="3f3a3-138">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el `Excel.RangeBorderCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.RangeBorderCollectionData` <!-- -->como) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="3f3a3-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeBorderCollectionData
      description: ''
