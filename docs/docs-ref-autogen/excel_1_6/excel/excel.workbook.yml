### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Workbook
    summary: |-
      <span data-ttu-id="be127-101">Workbook es el objeto de nivel superior que contiene los objetos de libro relacionados, como hojas de cálculo, tablas, intervalos, etc.</span><span class="sxs-lookup"><span data-stu-id="be127-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.</span></span>

      <span data-ttu-id="be127-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Workbook.application
      - excel.Excel.Workbook.bindings
      - excel.Excel.Workbook.context
      - excel.Excel.Workbook.customXmlParts
      - excel.Excel.Workbook.functions
      - excel.Excel.Workbook.getSelectedRange
      - excel.Excel.Workbook.load
      - excel.Excel.Workbook.load_1
      - excel.Excel.Workbook.load_2
      - excel.Excel.Workbook.names
      - excel.Excel.Workbook.onSelectionChanged
      - excel.Excel.Workbook.pivotTables
      - excel.Excel.Workbook.set
      - excel.Excel.Workbook.set_1
      - excel.Excel.Workbook.settings
      - excel.Excel.Workbook.tables
      - excel.Excel.Workbook.toJSON
      - excel.Excel.Workbook.worksheets
  - uid: excel.Excel.Workbook.application
    summary: |-
      <span data-ttu-id="be127-103">Representa la instancia de la aplicación de Excel que contiene este libro.</span><span class="sxs-lookup"><span data-stu-id="be127-103">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="be127-104">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-104">Read-only.</span></span>

      <span data-ttu-id="be127-105">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - excel.Excel.Application
  - uid: excel.Excel.Workbook.bindings
    summary: |-
      <span data-ttu-id="be127-106">Representa una colección de enlaces que forman parte del libro.</span><span class="sxs-lookup"><span data-stu-id="be127-106">Represents a collection of bindings that are part of the workbook.</span></span> <span data-ttu-id="be127-107">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-107">Read-only.</span></span>

      <span data-ttu-id="be127-108">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
  - uid: excel.Excel.Workbook.context
    summary: <span data-ttu-id="be127-109">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="be127-109">The request context associated with the object.</span></span> <span data-ttu-id="be127-110">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="be127-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Workbook.customXmlParts
    summary: |-
      <span data-ttu-id="be127-111">Representa la colección de elementos XML personalizados contenidos en este libro.</span><span class="sxs-lookup"><span data-stu-id="be127-111">Represents the collection of custom XML parts contained by this workbook.</span></span> <span data-ttu-id="be127-112">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-112">Read-only.</span></span>

      <span data-ttu-id="be127-113">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-113">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type:
          - excel.Excel.CustomXmlPartCollection
  - uid: excel.Excel.Workbook.functions
    summary: |-
      <span data-ttu-id="be127-114">Representa una colección de funciones de hoja de cálculo que se pueden usar para el cálculo.</span><span class="sxs-lookup"><span data-stu-id="be127-114">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="be127-115">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-115">Read-only.</span></span>

      <span data-ttu-id="be127-116">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-116">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - excel.Excel.Functions
  - uid: excel.Excel.Workbook.getSelectedRange
    summary: |-
      <span data-ttu-id="be127-117">Obtiene el intervalo único seleccionado actualmente desde el libro.</span><span class="sxs-lookup"><span data-stu-id="be127-117">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="be127-118">Si hay varios rangos seleccionados, este método generará un error.</span><span class="sxs-lookup"><span data-stu-id="be127-118">If there are multiple ranges selected, this method will throw an error.</span></span>

      <span data-ttu-id="be127-119">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="be127-120">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="be127-120">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Workbook.load
    summary: '<span data-ttu-id="be127-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="be127-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be127-122">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="be127-122">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="be127-123">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="be127-123">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="be127-124">`load(option?: string | string[]): Excel.Workbook`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="be127-124">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="be127-125">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="be127-125">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="be127-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="be127-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="be127-127">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="be127-127">It is similar to the preceding signature.</span></span> <span data-ttu-id="be127-128">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="be127-128">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="be127-129">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="be127-129">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="be127-130">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="be127-130">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookLoadOptions
  - uid: excel.Excel.Workbook.load_1
    summary: <span data-ttu-id="be127-131">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="be127-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be127-132">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="be127-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="be127-133">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="be127-133">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Workbook.load_2
    summary: <span data-ttu-id="be127-134">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="be127-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be127-135">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="be127-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="be127-136">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="be127-136">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Workbook.names
    summary: |-
      <span data-ttu-id="be127-137">Representa una colección de elementos con nombre en el ámbito del libro (intervalos y constantes con nombre).</span><span class="sxs-lookup"><span data-stu-id="be127-137">Represents a collection of workbook scoped named items (named ranges and constants).</span></span> <span data-ttu-id="be127-138">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-138">Read-only.</span></span>

      <span data-ttu-id="be127-139">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel.Excel.Workbook.onSelectionChanged
    summary: |-
      <span data-ttu-id="be127-140">Se genera al cambiar la selección en el documento.</span><span class="sxs-lookup"><span data-stu-id="be127-140">Occurs when the selection in the document is changed.</span></span>

      <span data-ttu-id="be127-141">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-141">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
  - uid: excel.Excel.Workbook.pivotTables
    summary: |-
      <span data-ttu-id="be127-142">Representa una colección de tablas dinámicas asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="be127-142">Represents a collection of PivotTables associated with the workbook.</span></span> <span data-ttu-id="be127-143">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-143">Read-only.</span></span>

      <span data-ttu-id="be127-144">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel.Excel.Workbook.set
    summary: '<span data-ttu-id="be127-145">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="be127-145">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="be127-146">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="be127-146">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="be127-147">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="be127-147">This method has the following additional signature:</span></span>

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="be127-148">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="be127-148">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.WorkbookUpdateData
        - id: options
          description: <span data-ttu-id="be127-149">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-149">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Workbook.set_1
    summary: '<span data-ttu-id="be127-150">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="be127-150">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Workbook
  - uid: excel.Excel.Workbook.settings
    summary: |-
      <span data-ttu-id="be127-151">Representa una colección de configuraciones asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="be127-151">Represents a collection of Settings associated with the workbook.</span></span> <span data-ttu-id="be127-152">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-152">Read-only.</span></span>

      <span data-ttu-id="be127-153">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-153">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
  - uid: excel.Excel.Workbook.tables
    summary: |-
      <span data-ttu-id="be127-154">Representa una colección de tablas asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="be127-154">Represents a collection of tables associated with the workbook.</span></span> <span data-ttu-id="be127-155">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-155">Read-only.</span></span>

      <span data-ttu-id="be127-156">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Workbook.toJSON
    summary: '<span data-ttu-id="be127-157">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="be127-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="be127-158">.</span><span class="sxs-lookup"><span data-stu-id="be127-158"></span></span> <span data-ttu-id="be127-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="be127-159"></span></span><!-- --><span data-ttu-id="be127-160">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Workbook original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.WorkbookData`</span><span class="sxs-lookup"><span data-stu-id="be127-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`</span></span><!-- --><span data-ttu-id="be127-161">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="be127-161">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookData
        description: ''
  - uid: excel.Excel.Workbook.worksheets
    summary: |-
      <span data-ttu-id="be127-162">Representa una colección de hojas de cálculo asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="be127-162">Represents a collection of worksheets associated with the workbook.</span></span> <span data-ttu-id="be127-163">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="be127-163">Read-only.</span></span>

      <span data-ttu-id="be127-164">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be127-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection