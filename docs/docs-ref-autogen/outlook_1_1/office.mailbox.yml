### YamlMime:UniversalReference
ms.openlocfilehash: 7c768da03e87068a6ea2190700d1d4bd5ab99736
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975252"
items:
- uid: Outlook_1_1.Office.Mailbox
  summary: >-
    Proporciona acceso al modelo de objetos del complemento de Outlook para Microsoft Outlook y Microsoft Outlook en la web.


    Espacios de nombres:


    - diagnostics: Proporciona información de diagnóstico a un complemento de Outlook.


    - item: Proporciona métodos y propiedades para tener acceso a un mensaje o cita en un complemento de Outlook.


    - userProfile: Proporciona información sobre el usuario en un complemento de Outlook.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restringido</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>
  name: Office.Mailbox
  fullName: Office.Mailbox
  langs:
  - typeScript
  type: interface
  package: Outlook_1_1
  children:
  - Outlook_1_1.Office.Mailbox.convertToLocalClientTime
  - Outlook_1_1.Office.Mailbox.convertToUtcClientTime
  - Outlook_1_1.Office.Mailbox.displayAppointmentForm
  - Outlook_1_1.Office.Mailbox.displayMessageForm
  - Outlook_1_1.Office.Mailbox.displayNewAppointmentForm
  - Outlook_1_1.Office.Mailbox.getUserIdentityTokenAsync
  - Outlook_1_1.Office.Mailbox.makeEwsRequestAsync
  - Outlook_1_1.Office.Mailbox.diagnostics
  - Outlook_1_1.Office.Mailbox.ewsUrl
  - Outlook_1_1.Office.Mailbox.item
  - Outlook_1_1.Office.Mailbox.userProfile
- uid: Outlook_1_1.Office.Mailbox.convertToLocalClientTime
  summary: >-
    Obtiene un diccionario con información de tiempo en el tiempo del cliente local.


    Las fechas y horas usadas por una aplicación de correo para Outlook o Outlook Web App pueden usar distintas zonas horarias. Outlook usa la zona horaria del equipo cliente; Outlook Web App usa la zona horaria definida en el Centro de administración de Exchange (EAC). Debería tratar los valores de fecha y hora de modo que los valores que aparezcan en la interfaz de usuario sean siempre coherentes con la zona horaria que el usuario espera.


    Si la aplicación de correo se ejecuta en Outlook, el método convertToLocalClientTime devolverá un objeto diccionario con los valores establecidos en la zona horaria del equipo cliente. Si la aplicación de correo se ejecuta en Outlook Web App, el método convertToLocalClientTime devolverá un objeto diccionario con los valores establecidos en la zona horaria especificada en el EAC.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>
  name: convertToLocalClientTime(timeValue)
  fullName: convertToLocalClientTime(timeValue)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLocalClientTime(timeValue: Date): LocalClientTime;'
    return:
      type:
      - LocalClientTime
      description: ''
    parameters:
    - id: timeValue
      description: Un objeto Date.
      type:
      - Date
- uid: Outlook_1_1.Office.Mailbox.convertToUtcClientTime
  summary: >-
    Obtiene un objeto Date del diccionario que contiene información de tiempo.


    El método convertToUtcClientTime convierte un diccionario que contiene la fecha y la hora locales en un objeto Date con los valores correctos para la fecha y la hora locales.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>
  name: convertToUtcClientTime(input)
  fullName: convertToUtcClientTime(input)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToUtcClientTime(input: LocalClientTime): Date;'
    return:
      type:
      - Date
      description: Objeto Date con el tiempo expresado en UTC.
    parameters:
    - id: input
      description: El valor de la hora local para convertir.
      type:
      - LocalClientTime
- uid: Outlook_1_1.Office.Mailbox.displayAppointmentForm
  summary: >-
    Muestra una cita de calendario existente.


    El método displayAppointmentForm abre una cita de calendario existente en una nueva ventana del escritorio o en un cuadro de diálogo en los dispositivos móviles.


    En Outlook para Mac, puede usar este método para mostrar una cita que no forme parte de una serie periódica o la cita principal de una serie periódica, pero no puede mostrar una instancia de la serie. Esto es porque en Outlook para Mac no se puede tener acceso a las propiedades (incluido el identificador de elemento) de las instancias de una serie periódica.


    En Outlook Web App, este método abre el formato especificado solo si el cuerpo del formulario es inferior o igual a 32 KB en el número de caracteres.


    Si el identificador de elemento especificado no identifica una cita existente, se abrirá una página en blanco en el dispositivo o equipo cliente y no se generará ningún mensaje de error.


    **Nota**: este método no se admite en Outlook para iOS o Outlook para Android.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>
  name: displayAppointmentForm(itemId)
  fullName: displayAppointmentForm(itemId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayAppointmentForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Identificador de los servicios web de Exchange (EWS) para una cita de calendario existente.
      type:
      - string
- uid: Outlook_1_1.Office.Mailbox.displayMessageForm
  summary: >-
    Muestra un mensaje existente.


    El método displayMessageForm abre un mensaje existente en una nueva ventana del escritorio o en un cuadro de diálogo en los dispositivos móviles.


    En Outlook Web App, este método abre el formato especificado solo si el cuerpo del formulario es inferior o igual a 32 KB en el número de caracteres.


    Si el identificador de elemento especificado no identifica un mensaje existente, no se mostrará ningún mensaje en el equipo cliente ni se generará ningún mensaje de error.


    No use el valor displayMessageForm con un itemId que represente una cita. Use el método displayAppointmentForm para mostrar una cita existente y displayNewAppointmentForm para mostrar un formulario para crear una cita nueva.


    **Nota**: este método no se admite en Outlook para iOS o Outlook para Android.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>
  name: displayMessageForm(itemId)
  fullName: displayMessageForm(itemId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayMessageForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: Identificador de los servicios web de Exchange (EWS) para un mensaje existente.
      type:
      - string
- uid: Outlook_1_1.Office.Mailbox.displayNewAppointmentForm
  summary: >-
    Muestra un formulario para crear una cita de calendario.


    El método displayNewAppointmentForm abre un formulario que permite al usuario crear una cita o reunión. Si se especifican parámetros, los campos del formulario de la cita se rellenan automáticamente con el contenido de los parámetros.


    En Outlook Web App y OWA para dispositivos, este método muestra siempre un formulario con un campo de asistentes. Si no especifica ningún asistente como argumento de entrada, el método muestra un formulario con un botón Guardar. Si ha especificado asistentes, el formulario incluirá a los asistentes y un botón Enviar.


    En el cliente enriquecido de Outlook y Outlook RT, si especifica cualquier los asistentes o los recursos en el requiredAttendees, optionalAttendees o parámetro de recursos, este método muestra un formulario de reunión con un botón de envío. Si no se especifica ningún destinatario, este método muestra un formulario de cita con un guardar &amp; botón Cerrar.


    Si cualquiera de los parámetros supera los límites de tamaño especificados o si se especifica un nombre de parámetro desconocido, se genera una excepción.


    **Nota**: este método no se admite en Outlook para iOS o Outlook para Android.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Leer</td></tr></table>

    ####Ejemplos


    ```javascript

    var start = new Date();

    var end = new Date();

    end.setHours(start.getHours() + 1);


    Office.context.mailbox.displayNewAppointmentForm(

    {
        requiredAttendees: ['bob@contoso.com'],
        optionalAttendees: ['sam@contoso.com'],
        start: start,
        end: end,
        location: 'Home',
        resources: ['projector@contoso.com'],
        subject: 'meeting',
        body: 'Hello World!'
    });

    ```
  name: displayNewAppointmentForm(parameters)
  fullName: displayNewAppointmentForm(parameters)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayNewAppointmentForm(parameters: AppointmentForm): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: parameters
      description: Un AppointmentForm que describe la nueva cita. Todas las propiedades son opcionales.
      type:
      - AppointmentForm
- uid: Outlook_1_1.Office.Mailbox.getUserIdentityTokenAsync
  summary: >-
    Obtiene un token que identifica al usuario y al complemento de Office.


    El token se proporciona como una cadena en la propiedad asyncResult.value.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción y lectura</td></tr></table>


    El método getUserIdentityTokenAsync devuelve un token que se puede usar para identificar y [autenticar el usuario con un sistema de terceros y -](https://docs.microsoft.com/outlook/add-ins/authentication)<!-- -->.

    #### <a name="examples"></a>Ejemplos


    ```javascript

    function getIdentityToken() {
        Office.context.mailbox.getUserIdentityTokenAsync(cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getUserIdentityTokenAsync(callback, userContext)
  fullName: getUserIdentityTokenAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUserIdentityTokenAsync(callback: (result: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Cuando finaliza el método, se llama a la función que se pasa en el parámetro de devolución de llamada con un parámetro único de tipo Office.AsyncResult. El token se proporciona como una cadena en la propiedad `asyncResult.value`. Si se ha producido un error, entonces el `asyncResult.error` y `asyncResult.diagnostics` propiedades pueden proporcionar información adicional.
      type:
      - '(result: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Opcional. Cualquier dato de estado que se pasa al método asincrónico.\|
      type:
      - any
- uid: Outlook_1_1.Office.Mailbox.makeEwsRequestAsync
  summary: >-
    Realiza una solicitud asincrónica a un servicio de Exchange Web Services (EWS) en el servidor de Exchange que hospeda el buzón del usuario.


    En estos casos, los complementos tendrían que usar las API de REST para obtener acceso al buzón del usuario en su lugar.


    El método makeEwsRequestAsync envía una solicitud de EWS en nombre del complemento a Exchange.


    No puede solicitar elementos asociados de las carpetas con el método makeEwsRequestAsync.


    La solicitud XML debe especificar codificación UTF-8. &lt;<!-- -->¿versión de ?xml = "1.0" encoding = "utf-8"?<!-- -->&gt;


    El complemento debe tener el permiso de ReadWriteMailbox para usar el método makeEwsRequestAsync. Para obtener información sobre cómo usar el permiso ReadWriteMailbox y las operaciones de EWS que puede llamar con el método makeEwsRequestAsync, vea [especificar permisos para correo agregar en el acceso al buzón de correo del usuario](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->.


    El resultado XML de la llamada EWS se proporciona como una cadena en la propiedad asyncResult.value. Si el resultado supera 1 MB de tamaño, se devuelve un mensaje de error en su lugar.


    **Nota**: este método no se admite en los siguientes escenarios:


    - En Outlook para iOS o Outlook para Android.


    - Cuando el complemento se carga en un buzón de Gmail.


    **Nota**: el administrador del servidor debe establecer oauthauthentication como true en el directorio EWS del servidor de acceso de cliente para permitir que el método makeEwsRequestAsync realizar solicitudes de EWS.


    *Diferencias de versión*


    Si usa el método makeEwsRequestAsync en aplicaciones de correo que se ejecutan en versiones de Outlook anteriores a 15.0.4535.1004, debe establecer el valor de codificación a ISO-8859-1.


    `<?xml version="1.0" encoding="iso-8859-1"?>`


    No es necesario establecer el valor de codificación si la aplicación de correo se ejecuta en Outlook en la web. Puede averiguar si su aplicación de correo se ejecuta en Outlook o en Outlook en la web usando la propiedad mailbox.diagnostics.hostName. Para averiguar qué versión de Outlook se está ejecutando, use la propiedad mailbox.diagnostics.hostVersion.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteMailbox</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción y lectura</td></tr></table>

    ####Ejemplos


    ```javascript

    function getSubjectRequest(id) {
        // Return a GetItem operation request for the subject of the specified item.
        var request =
            '<?xml version="1.0" encoding="utf-8"?>' +
            '<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' +
            '               xmlns:xsd="http://www.w3.org/2001/XMLSchema"' +
            '               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"' +
            '               xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types">' +
            '  <soap:Header>' +
            '    <RequestServerVersion Version="Exchange2013" xmlns="http://schemas.microsoft.com/exchange/services/2006/types" soap:mustUnderstand="0" />' +
            '  </soap:Header>' +
            '  <soap:Body>' +
            '    <GetItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">' +
            '      <ItemShape>' +
            '        <t:BaseShape>IdOnly</t:BaseShape>' +
            '        <t:AdditionalProperties>' +
            '            <t:FieldURI FieldURI="item:Subject"/>' +
            '        </t:AdditionalProperties>' +
            '      </ItemShape>' +
            '      <ItemIds><t:ItemId Id="' + id + '"/></ItemIds>' +
            '    </GetItem>' +
            '  </soap:Body>' +
            '</soap:Envelope>';

        return request;
    }


    function sendRequest() {
        // Create a local variable that contains the mailbox.
        Office.context.mailbox.makeEwsRequestAsync(
            getSubjectRequest(mailbox.item.itemId), callback);
    }


    function callback(asyncResult)  {
        var result = asyncResult.value;
        var context = asyncResult.asyncContext;

        // Process the returned response here.
    }

    ```
  name: makeEwsRequestAsync(data, callback, userContext)
  fullName: makeEwsRequestAsync(data, callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'makeEwsRequestAsync(data: any, callback: (result: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: La solicitud de EWS.
      type:
      - any
    - id: callback
      description: Cuando finaliza el método, se llama a la función que se pasa en el parámetro de devolución de llamada con un parámetro único de tipo Office.AsyncResult. El `value` propiedad del resultado es el XML de la solicitud EWS proporcionado como una cadena. Si el resultado supera 1 MB de tamaño, se devuelve un mensaje de error en su lugar.
      type:
      - '(result: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Opcional. Cualquier dato de estado que se pasa al método asincrónico.
      type:
      - any
- uid: Outlook_1_1.Office.Mailbox.diagnostics
  summary: >-
    Proporciona información de diagnóstico a un complemento de Outlook.


    Contiene a los siguientes miembros:


    - nombre de host (string): una cadena que representa el nombre de la aplicación host. Es que sea uno de los siguientes valores: Outlook, Outlook Mac, OutlookIOS o OutlookWebApp.


    - hostVersion (string): una cadena que representa la versión de la aplicación host o el servidor de Exchange. Si el complemento de correo se ejecuta en el cliente de escritorio de Outlook o Outlook para iOS, la propiedad hostVersion devuelve la versión de la aplicación host, Outlook. En Outlook Web App, la propiedad devuelve la versión del servidor de Exchange. Un ejemplo es la cadena de 15.0.468.0.


    - OWAView (MailboxEnums.OWAView o cadena): un enum (o literal de cadena) que representa la vista actual de Outlook Web App. Si la aplicación host no es Outlook Web App, obtener acceso a esta propiedad será undefined. Outlook Web App tiene tres vistas (OneColumn - que se muestra cuando la pantalla es estrecha, TwoColumns - mostrado cuando la pantalla es más amplia y ThreeColumns - que se muestra cuando la pantalla es ancho) que se corresponden con el ancho de la pantalla y la ventana y el número de columnas que se pueden mostrar.


    Obtener más información está bajo [Office.Diagnostics](xref:Outlook_1_1.Office.Diagnostics)<!-- -->.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>
  name: diagnostics
  fullName: diagnostics
  langs:
  - typeScript
  type: property
  syntax:
    content: 'diagnostics: Diagnostics;'
    return:
      type:
      - Diagnostics
- uid: Outlook_1_1.Office.Mailbox.ewsUrl
  summary: >-
    Obtiene la dirección URL del punto de conexión de servicios Web Exchange (EWS) para esta cuenta de correo electrónico. Solo modo Lectura.


    La aplicación debe tener el permiso ReadItem especificado en su manifiesto para llamar a los miembros de ewsUrl en modo de lectura.


    En el modo que se debe llamar al método saveAsync antes de poder utilizar al miembro ewsUrl de redacción. La aplicación debe tener permisos de ReadWriteItem para llamar al método saveAsync.


    \[[Conjunto de API: buzón 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción o lectura</td></tr></table>


    El valor de ewsUrl puede utilizarse por un servicio remoto para realizar llamadas EWS para el buzón del usuario. Por ejemplo, puede crear un servicio remoto para [obtener datos adjuntos desde el elemento seleccionado](https://docs.microsoft.com/outlook/add-ins/get-attachments-of-an-outlook-item)<!-- -->.


    **Nota**: este miembro no se admite en Outlook para iOS o Outlook para Android.
  name: ewsUrl
  fullName: ewsUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ewsUrl: string;'
    return:
      type:
      - string
- uid: Outlook_1_1.Office.Mailbox.item
  summary: 'El elemento de buzón de correo. Según el contexto en el que el complemento abierto, el elemento puede ser cualquier número de tipos. Si desea ver IntelliSense para solo un tipo específico, que debe convertir este elemento en uno de los siguientes: `ItemCompose` <!-- -->, `ItemRead` <!-- -->, `MessageCompose` <!-- -->, `MessageRead` <!-- -->, `AppointmentCompose` <!-- -->,`AppointmentRead`'
  name: item
  fullName: item
  langs:
  - typeScript
  type: property
  syntax:
    content: 'item: Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose;'
    return:
      type:
      - Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose
- uid: Outlook_1_1.Office.Mailbox.userProfile
  summary: >-
    Información sobre el usuario asociado con el buzón de correo. Esto incluye su tipo de cuenta, nombre para mostrar, dirección de correo electrónico y zona horaria.


    Obtener más información está bajo [Office.UserProfile](xref:Outlook_1_1.Office.UserProfile)
  name: userProfile
  fullName: userProfile
  langs:
  - typeScript
  type: property
  syntax:
    content: 'userProfile: UserProfile;'
    return:
      type:
      - UserProfile
