### YamlMime:TSType
name: PowerPoint.Presentation
uid: powerpoint!PowerPoint.Presentation:class
package: powerpoint!
fullName: PowerPoint.Presentation
summary: '\[[Conjunto de API: PowerPointApi 1,0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.Presentation#context:member
  package: powerpoint!
  fullName: context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: title
  uid: powerpoint!PowerPoint.Presentation#title:member
  package: powerpoint!
  fullName: title
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly title: string;'
    return:
      type: string
methods:
- name: load(options)
  uid: powerpoint!PowerPoint.Presentation#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.PresentationLoadOptions): PowerPoint.Presentation;'
    parameters:
    - id: options
      description: Proporciona opciones para las propiedades del objeto que se va a cargar.
      type: <xref uid="powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.Presentation:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.Presentation#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.Presentation;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.Presentation:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.Presentation#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): PowerPoint.Presentation;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="powerpoint!PowerPoint.Presentation:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.Presentation#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el objeto PowerPoint. Presentation original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como `PowerPoint.Interfaces.PresentationData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.PresentationData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.PresentationData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 55ad55f2798ed28cdc476951cb98f0afa04a8819
  ms.sourcegitcommit: 1f0f9464639feee4f4751fda7c2a14aa0d2f8967
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 12/12/2020
  ms.locfileid: "49663745"
