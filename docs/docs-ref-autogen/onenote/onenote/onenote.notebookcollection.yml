### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.NotebookCollection:class'
    summary: |-
      <span data-ttu-id="7b64b-101">Representa una colección de blocs de notas.</span><span class="sxs-lookup"><span data-stu-id="7b64b-101">Represents a collection of notebooks.</span></span>

      <span data-ttu-id="7b64b-102">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b64b-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.NotebookCollection
    fullName: OneNote.NotebookCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.NotebookCollection#context:member'
      - 'onenote!OneNote.NotebookCollection#count:member'
      - 'onenote!OneNote.NotebookCollection#getByName:member(1)'
      - 'onenote!OneNote.NotebookCollection#getItem:member(1)'
      - 'onenote!OneNote.NotebookCollection#getItemAt:member(1)'
      - 'onenote!OneNote.NotebookCollection#items:member'
      - 'onenote!OneNote.NotebookCollection#load:member(1)'
      - 'onenote!OneNote.NotebookCollection#load:member(2)'
      - 'onenote!OneNote.NotebookCollection#load:member(3)'
      - 'onenote!OneNote.NotebookCollection#toJSON:member(1)'
      - 'onenote!OneNote.NotebookCollection#track:member(1)'
      - 'onenote!OneNote.NotebookCollection#untrack:member(1)'
  - uid: 'onenote!OneNote.NotebookCollection#context:member'
    summary: <span data-ttu-id="7b64b-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="7b64b-103">The request context associated with the object.</span></span> <span data-ttu-id="7b64b-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="7b64b-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.NotebookCollection#count:member'
    summary: |-
      <span data-ttu-id="7b64b-105">Devuelve el número de blocs de notas de una colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-105">Returns the number of notebooks in the collection.</span></span> <span data-ttu-id="7b64b-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="7b64b-106">Read-only.</span></span>

      <span data-ttu-id="7b64b-107">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b64b-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.NotebookCollection#getByName:member(1)'
    summary: |-
      <span data-ttu-id="7b64b-108">Obtiene la colección de blocs de notas con el nombre especificado que están abiertos en la instancia de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="7b64b-108">Gets the collection of notebooks with the specified name that are open in the application instance.</span></span>

      <span data-ttu-id="7b64b-109">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b64b-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getByName(name)
    fullName: getByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByName(name: string): OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b64b-110">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="7b64b-110">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the notebooks that are open in the application instance and have the specified name.
              var notebooks = context.application.notebooks.getByName("Homework");

              // Queue a command to load the notebooks. 
              // For best performance, request specific properties.           
              notebooks.load("id,name");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Iterate through the collection or access items individually by index,
                      // for example: notebooks.items[0]
                      if (notebooks.items.length > 0) {
                          console.log("Notebook name: " + notebooks.items[0].name);
                          console.log("Notebook ID: " + notebooks.items[0].id);
                      }
                          
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="7b64b-111">El nombre del bloc de notas.</span><span class="sxs-lookup"><span data-stu-id="7b64b-111">The name of the notebook.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.NotebookCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="7b64b-112">Obtiene un bloc de notas por ID o por su índice en la colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-112">Gets a notebook by ID or by its index in the collection.</span></span> <span data-ttu-id="7b64b-113">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="7b64b-113">Read-only.</span></span>

      <span data-ttu-id="7b64b-114">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b64b-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number | string): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: ''
      parameters:
        - id: index
          description: '<span data-ttu-id="7b64b-115">El id. del bloc de notas, o bien la ubicación del índice del bloc de notas en la colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-115">The ID of the notebook, or the index location of the notebook in the collection.</span></span>'
          type:
            - number | string
  - uid: 'onenote!OneNote.NotebookCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="7b64b-116">Obtiene un bloc de notas según su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-116">Gets a notebook on its position in the collection.</span></span>

      <span data-ttu-id="7b64b-117">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7b64b-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="7b64b-118">Valor de índice del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="7b64b-118">Index value of the object to be retrieved.</span></span> <span data-ttu-id="7b64b-119">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="7b64b-119">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'onenote!OneNote.NotebookCollection#items:member'
    summary: <span data-ttu-id="7b64b-120">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-120">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: OneNote.Notebook[];'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection#items~0:complex'
  - uid: 'onenote!OneNote.NotebookCollection#load:member(1)'
    summary: '<span data-ttu-id="7b64b-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="7b64b-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7b64b-122">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="7b64b-122">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="7b64b-123">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="7b64b-123">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7b64b-124">`load(option?: string | string[]): OneNote.NotebookCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="7b64b-124">`load(option?: string | string[]): OneNote.NotebookCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7b64b-125">`load(option?: { select?: string; expand?: string; }): OneNote.NotebookCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="7b64b-125">`load(option?: { select?: string; expand?: string; }): OneNote.NotebookCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7b64b-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.NotebookCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.NotebookCollection` - Only available on collection types.</span></span> <span data-ttu-id="7b64b-127">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="7b64b-127">It is similar to the preceding signature.</span></span> <span data-ttu-id="7b64b-128">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="7b64b-128">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7b64b-129">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="7b64b-129">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7b64b-130">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="7b64b-130">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.NotebookCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions): OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.NotebookCollection#load~0:complex'
  - uid: 'onenote!OneNote.NotebookCollection#load:member(2)'
    summary: <span data-ttu-id="7b64b-131">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="7b64b-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7b64b-132">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="7b64b-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7b64b-133">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="7b64b-133">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the notebooks that are open in the application instance and have the specified name.
              var notebooks = context.application.notebooks.getByName("Homework");

              // Queue a command to load the notebooks. 
              // For best performance, request specific properties.           
              notebooks.load("id");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Iterate through the collection or access items individually by index, 
                      // for example: notebooks.items[0]
                      $.each(notebooks.items, function(index, notebook) {
                          notebook.addSection("Biology");
                          notebook.addSection("Spanish");
                          notebook.addSection("Computer Science");
                      });
                      
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7b64b-134">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="7b64b-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.NotebookCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OfficeExtension.LoadOption:interface'
  - uid: 'onenote!OneNote.NotebookCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="7b64b-135">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7b64b-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7b64b-136">.</span><span class="sxs-lookup"><span data-stu-id="7b64b-136"></span></span> <span data-ttu-id="7b64b-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7b64b-137"></span></span><!-- --><span data-ttu-id="7b64b-138">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `OneNote.NotebookCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`OneNote.Interfaces.NotebookCollectionData`</span><span class="sxs-lookup"><span data-stu-id="7b64b-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `OneNote.NotebookCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.NotebookCollectionData`</span></span><!-- --><span data-ttu-id="7b64b-139">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="7b64b-139">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.NotebookCollectionData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.NotebookCollectionData:interface'
        description: ''
  - uid: 'onenote!OneNote.NotebookCollection#track:member(1)'
    summary: '<span data-ttu-id="7b64b-140">Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento.</span><span class="sxs-lookup"><span data-stu-id="7b64b-140">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="7b64b-141">Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="7b64b-141">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="7b64b-142">Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="7b64b-142">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
        description: ''
  - uid: 'onenote!OneNote.NotebookCollection#untrack:member(1)'
    summary: '<span data-ttu-id="7b64b-143">Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente.</span><span class="sxs-lookup"><span data-stu-id="7b64b-143">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="7b64b-144">Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="7b64b-144">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="7b64b-145">Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="7b64b-145">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="7b64b-146">Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.</span><span class="sxs-lookup"><span data-stu-id="7b64b-146">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.NotebookCollection:class'
    name: OneNote.NotebookCollection
  - uid: 'onenote!OneNote.Notebook:class'
    name: OneNote.Notebook
  - uid: 'onenote!OneNote.NotebookCollection#items~0:complex'
    name: 'OneNote.Notebook[]'
    fullName: 'OneNote.Notebook[]'
    spec.typeScript:
      - uid: 'onenote!OneNote.Notebook:class'
        name: OneNote.Notebook
        fullName: OneNote.Notebook
      - name: '[]'
        fullName: '[]'
  - uid: 'onenote!OneNote.NotebookCollection#load~0:complex'
    name: OneNote.Interfaces.NotebookCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    fullName: OneNote.Interfaces.NotebookCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'onenote!OneNote.Interfaces.NotebookCollectionLoadOptions:interface'
        name: OneNote.Interfaces.NotebookCollectionLoadOptions
        fullName: OneNote.Interfaces.NotebookCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'onenote!OneNote.Interfaces.CollectionLoadOptions:interface'
        name: OneNote.Interfaces.CollectionLoadOptions
        fullName: OneNote.Interfaces.CollectionLoadOptions
  - uid: 'onenote!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'onenote!OneNote.Interfaces.NotebookCollectionData:interface'
    name: OneNote.Interfaces.NotebookCollectionData