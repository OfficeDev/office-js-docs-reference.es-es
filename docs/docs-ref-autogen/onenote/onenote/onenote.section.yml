### YamlMime:TSType
name: OneNote.Section
uid: onenote!OneNote.Section:class
package: onenote!
fullName: OneNote.Section
summary: >-
  Representa una sección de OneNote. Las secciones pueden contener páginas.


  \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: clientUrl
  uid: onenote!OneNote.Section#clientUrl:member
  package: onenote!
  fullName: clientUrl
  summary: >-
    URL del cliente de la sección. Solo lectura


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly clientUrl: string;'
    return:
      type: string
- name: context
  uid: onenote!OneNote.Section#context:member
  package: onenote!
  fullName: context
  summary: Contexto de solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.Section#id:member
  package: onenote!
  fullName: id
  summary: >-
    Obtiene el identificador de la sección. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: isEncrypted
  uid: onenote!OneNote.Section#isEncrypted:member
  package: onenote!
  fullName: isEncrypted
  summary: >-
    True si esta sección está cifrada con una contraseña. Solo lectura


    \[[Conjunto de API: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEncrypted: boolean;'
    return:
      type: boolean
- name: isLocked
  uid: onenote!OneNote.Section#isLocked:member
  package: onenote!
  fullName: isLocked
  summary: >-
    True si esta sección está bloqueada. Solo lectura


    \[[Conjunto de API: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isLocked: boolean;'
    return:
      type: boolean
- name: name
  uid: onenote!OneNote.Section#name:member
  package: onenote!
  fullName: name
  summary: >-
    Obtiene el nombre de la sección. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: notebook
  uid: onenote!OneNote.Section#notebook:member
  package: onenote!
  fullName: notebook
  summary: >-
    Obtiene el bloc de notas que contiene la página. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly notebook: OneNote.Notebook;'
    return:
      type: <xref uid="onenote!OneNote.Notebook:class" />
- name: pages
  uid: onenote!OneNote.Section#pages:member
  package: onenote!
  fullName: pages
  summary: >-
    Colección de páginas de la sección. Solo lectura


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pages: OneNote.PageCollection;'
    return:
      type: <xref uid="onenote!OneNote.PageCollection:class" />
- name: parentSectionGroup
  uid: onenote!OneNote.Section#parentSectionGroup:member
  package: onenote!
  fullName: parentSectionGroup
  summary: >-
    Obtiene el grupo de secciones que contiene la sección. Genera ItemNotFound si la sección es un elemento secundario directo del bloc de notas. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
- name: parentSectionGroupOrNull
  uid: onenote!OneNote.Section#parentSectionGroupOrNull:member
  package: onenote!
  fullName: parentSectionGroupOrNull
  summary: >-
    Obtiene el grupo de secciones que contiene la sección. Devuelve nulo si la sección no es un elemento secundario directo del bloc de notas. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
- name: webUrl
  uid: onenote!OneNote.Section#webUrl:member
  package: onenote!
  fullName: webUrl
  summary: >-
    La URL de la web de la página. Solo lectura


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly webUrl: string;'
    return:
      type: string
methods:
- name: addPage(title)
  uid: onenote!OneNote.Section#addPage:member(1)
  package: onenote!
  fullName: addPage(title)
  summary: >-
    Agrega una nueva página al final de la sección.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addPage(title: string): OneNote.Page;'
    parameters:
    - id: title
      description: El título de la nueva página.
      type: string
    return:
      type: <xref uid="onenote!OneNote.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (context) {\n            \n    // Queue a command to add a page to the current section.\n    var page = context.application.getActiveSection().addPage(\"Wish list\");\n            \n    // Queue a command to load the id and title of the new page. \n    // This example loads the new page so it can read its properties later.           \n    page.load('id,title');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n             \n            // Display the properties.       \n            console.log(\"Page name: \" + page.title);\n            console.log(\"Page ID: \" + page.id);\n\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: copyToNotebook(destinationNotebook)
  uid: onenote!OneNote.Section#copyToNotebook:member(1)
  package: onenote!
  fullName: copyToNotebook(destinationNotebook)
  summary: >-
    Copia esta sección en el Bloc de notas especificado.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyToNotebook(destinationNotebook: OneNote.Notebook): OneNote.Section;'
    parameters:
    - id: destinationNotebook
      description: El bloc de notas en el que hay que copiar esta sección.
      type: <xref uid="onenote!OneNote.Notebook:class" />
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (context) {\n    var app = context.application;\n    \n    // Gets the active Notebook.\n    var notebook = app.getActiveNotebook();\n    \n    // Gets the active Section.\n    var section = app.getActiveSection();\n    \n    var newSection;\n    \n    return context.sync()\n        .then(function() {\n            newSection = section.copyToNotebook(notebook);\n            newSection.load('id');\n            return context.sync();\n        })\n        .then(function() {\n            console.log(newSection.id);\n        });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: copyToSectionGroup(destinationSectionGroup)
  uid: onenote!OneNote.Section#copyToSectionGroup:member(1)
  package: onenote!
  fullName: copyToSectionGroup(destinationSectionGroup)
  summary: >-
    Copia esta sección en el grupo de secciones especificado.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyToSectionGroup(destinationSectionGroup: OneNote.SectionGroup): OneNote.Section;'
    parameters:
    - id: destinationSectionGroup
      description: El grupo de secciones en el que hay que copiar esta sección.
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (ctx) {\n    var app = ctx.application;\n    \n    // Gets the active Notebook.\n    var notebook = app.getActiveNotebook();\n    \n    // Gets the active Section.\n    var section = app.getActiveSection();\n    \n    var newSection;\n    \n    return ctx.sync()\n        .then(function() {\n            var firstSectionGroup = notebook.sectionGroups.items[0];\n            newSection = section.copyToSectionGroup(firstSectionGroup);\n            newSection.load('id');\n            return ctx.sync();\n        })\n        .then(function() {\n            console.log(newSection.id);\n        });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRestApiId()
  uid: onenote!OneNote.Section#getRestApiId:member(1)
  package: onenote!
  fullName: getRestApiId()
  summary: >-
    Obtiene el identificador de API de REST.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function(ctx){\n    // Get the current section.         \n    var section = ctx.application.getActiveSection();\n    var restApiId = section.getRestApiId();\n\n    return ctx.sync().\n        then(function(){\n            console.log(\"The REST API ID is \" + restApiId.value);\n            // Note that the REST API ID isn't all you need to interact with the OneNote REST API. \n            // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.\n            // For SharePoint notebooks, the notebook baseUrl should be used to talk to the \n            // OneNote REST API according to the OneNote Development Blog.\n            // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/\n        });\n});\n```"
- name: insertSectionAsSibling(location, title)
  uid: onenote!OneNote.Section#insertSectionAsSibling:member(1)
  package: onenote!
  fullName: insertSectionAsSibling(location, title)
  summary: >-
    Inserta una nueva sección antes o después de la sección actual.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertSectionAsSibling(location: OneNote.InsertLocation, title: string): OneNote.Section;'
    parameters:
    - id: location
      description: La ubicación de la nueva sección relativa a la sección actual.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: title
      description: Nombre de la nueva sección.
      type: string
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: insertSectionAsSibling(locationString, title)
  uid: onenote!OneNote.Section#insertSectionAsSibling:member(2)
  package: onenote!
  fullName: insertSectionAsSibling(locationString, title)
  summary: >-
    Inserta una nueva sección antes o después de la sección actual.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertSectionAsSibling(locationString: "Before" | "After", title: string): OneNote.Section;'
    parameters:
    - id: locationString
      description: La ubicación de la nueva sección relativa a la sección actual.
      type: "\"Before\" | \"After\""
    - id: title
      description: Nombre de la nueva sección.
      type: string
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (context) {\n            \n    // Queue a command to insert a section after the current section.\n    var section = context.application.getActiveSection().insertSectionAsSibling(\"After\", \"New section\");\n            \n    // Queue a command to load the id and name of the new section. \n    // This example loads the new section so it can read its properties later.           \n    section.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n             \n            // Display the properties.       \n            console.log(\"Section name: \" + section.name);\n            console.log(\"Section ID: \" + section.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: onenote!OneNote.Section#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): OneNote.Section` - Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.


    `load(option?: { select?: string; expand?: string; }): OneNote.Section` - Donde option.select es una cadena delimitada por comas que especifica las propiedades que se cargarán y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación que se cargarán.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Section` - Solo disponible en tipos de colección. Es similar a la firma anterior. Option.top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. Option.skip especifica el número de elementos que se van a omitir y que no se incluyen en el resultado. Si se especifica option.top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.SectionLoadOptions): OneNote.Section;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.SectionLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.Section#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Section;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load(\"id\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Section ID: \" + section.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section with the specified properties. \n    section.load(\"name,notebook/name\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Section name: \" + section.name);\n            console.log(\"Parent notebook name: \" + section.notebook.name);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n    // Queue a command to add a page to the current section.\n    var section = context.application.getActiveSection();\n    section.load('clientUrl,notebook');\n    var sectionGroup = section.parentSectionGroupOrNull;\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            if(sectionGroup.isNull === false)\n            {\n                // If a parent section group exists, queue a command to add a section in it!\n                sectionGroup.addSection(\"NewSectionInSectionGroup\");\n            }\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: onenote!OneNote.Section#load:member(3)
  package: onenote!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): OneNote.Section;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: toJSON()
  uid: onenote!OneNote.Section#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: Invalida el método JavaScript para proporcionar resultados más útiles cuando se pasa un objeto API a `toJSON()``JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se pasa a él). Mientras que el objeto OneNote.Section original es un objeto API, el método devuelve un objeto JavaScript sin formato (con el tipo `toJSON` como `OneNote.Interfaces.SectionData`<!-- -->) que contiene copias superficiales de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.SectionData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.SectionData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.Section#track:member(1)
  package: onenote!
  fullName: track()
  summary: Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento. Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject). Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.Section;'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.Section#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente. Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject). Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos. Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.Section;'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 113d260f136d4414068134584c57d02d014e6f0a
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50534204"
