### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Section:class'
    summary: |-
      <span data-ttu-id="4a28c-101">Representa una sección de OneNote.</span><span class="sxs-lookup"><span data-stu-id="4a28c-101">Represents a OneNote section.</span></span> <span data-ttu-id="4a28c-102">Las secciones pueden contener páginas.</span><span class="sxs-lookup"><span data-stu-id="4a28c-102">Sections can contain pages.</span></span>

      <span data-ttu-id="4a28c-103">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Section
    fullName: OneNote.Section
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Section#addPage:member(1)'
      - 'onenote!OneNote.Section#clientUrl:member'
      - 'onenote!OneNote.Section#context:member'
      - 'onenote!OneNote.Section#copyToNotebook:member(1)'
      - 'onenote!OneNote.Section#copyToSectionGroup:member(1)'
      - 'onenote!OneNote.Section#getRestApiId:member(1)'
      - 'onenote!OneNote.Section#id:member'
      - 'onenote!OneNote.Section#insertSectionAsSibling:member(1)'
      - 'onenote!OneNote.Section#insertSectionAsSibling:member(2)'
      - 'onenote!OneNote.Section#isEncrypted:member'
      - 'onenote!OneNote.Section#isLocked:member'
      - 'onenote!OneNote.Section#load:member(1)'
      - 'onenote!OneNote.Section#load:member(2)'
      - 'onenote!OneNote.Section#load:member(3)'
      - 'onenote!OneNote.Section#name:member'
      - 'onenote!OneNote.Section#notebook:member'
      - 'onenote!OneNote.Section#pages:member'
      - 'onenote!OneNote.Section#parentSectionGroup:member'
      - 'onenote!OneNote.Section#parentSectionGroupOrNull:member'
      - 'onenote!OneNote.Section#toJSON:member(1)'
      - 'onenote!OneNote.Section#track:member(1)'
      - 'onenote!OneNote.Section#untrack:member(1)'
      - 'onenote!OneNote.Section#webUrl:member'
  - uid: 'onenote!OneNote.Section#addPage:member(1)'
    summary: |-
      <span data-ttu-id="4a28c-104">Agrega una nueva página al final de la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-104">Adds a new page to the end of the section.</span></span>

      <span data-ttu-id="4a28c-105">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: addPage(title)
    fullName: addPage(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addPage(title: string): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a28c-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4a28c-106">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                      
              // Queue a command to add a page to the current section.
              var page = context.application.getActiveSection().addPage("Wish list");
                      
              // Queue a command to load the id and title of the new page. 
              // This example loads the new page so it can read its properties later.           
              page.load('id,title');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                       
                      // Display the properties.       
                      console.log("Page name: " + page.title);
                      console.log("Page ID: " + page.id);

                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: title
          description: <span data-ttu-id="4a28c-107">El título de la nueva página.</span><span class="sxs-lookup"><span data-stu-id="4a28c-107">The title of the new page.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.Section#clientUrl:member'
    summary: |-
      <span data-ttu-id="4a28c-108">URL del cliente de la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-108">The client url of the section.</span></span> <span data-ttu-id="4a28c-109">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="4a28c-109">Read only</span></span>

      <span data-ttu-id="4a28c-110">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clientUrl
    fullName: clientUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly clientUrl: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#context:member'
    summary: <span data-ttu-id="4a28c-111">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="4a28c-111">The request context associated with the object.</span></span> <span data-ttu-id="4a28c-112">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="4a28c-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Section#copyToNotebook:member(1)'
    summary: |-
      <span data-ttu-id="4a28c-113">Copia esta sección en el Bloc de notas especificado.</span><span class="sxs-lookup"><span data-stu-id="4a28c-113">Copies this section to specified notebook.</span></span>

      <span data-ttu-id="4a28c-114">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: copyToNotebook(destinationNotebook)
    fullName: copyToNotebook(destinationNotebook)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyToNotebook(destinationNotebook: OneNote.Notebook): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a28c-115">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4a28c-115">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
              var app = context.application;
              
              // Gets the active Notebook.
              var notebook = app.getActiveNotebook();
              
              // Gets the active Section.
              var section = app.getActiveSection();
              
              var newSection;
              
              return context.sync()
                  .then(function() {
                      newSection = section.copyToNotebook(notebook);
                      newSection.load('id');
                      return context.sync();
                  })
                  .then(function() {
                      console.log(newSection.id);
                  });
          })
          .catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: destinationNotebook
          description: <span data-ttu-id="4a28c-116">El bloc de notas en el que hay que copiar esta sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-116">The notebook to copy this section to.</span></span>
          type:
            - 'onenote!OneNote.Notebook:class'
  - uid: 'onenote!OneNote.Section#copyToSectionGroup:member(1)'
    summary: |-
      <span data-ttu-id="4a28c-117">Copia esta sección en el grupo de secciones especificado.</span><span class="sxs-lookup"><span data-stu-id="4a28c-117">Copies this section to specified section group.</span></span>

      <span data-ttu-id="4a28c-118">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: copyToSectionGroup(destinationSectionGroup)
    fullName: copyToSectionGroup(destinationSectionGroup)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyToSectionGroup(destinationSectionGroup: OneNote.SectionGroup): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a28c-119">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4a28c-119">Examples</span></span>

          ```javascript
          OneNote.run(function (ctx) {
              var app = ctx.application;
              
              // Gets the active Notebook.
              var notebook = app.getActiveNotebook();
              
              // Gets the active Section.
              var section = app.getActiveSection();
              
              var newSection;
              
              return ctx.sync()
                  .then(function() {
                      var firstSectionGroup = notebook.sectionGroups.items[0];
                      newSection = section.copyToSectionGroup(firstSectionGroup);
                      newSection.load('id');
                      return ctx.sync();
                  })
                  .then(function() {
                      console.log(newSection.id);
                  });
          })
          .catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: destinationSectionGroup
          description: <span data-ttu-id="4a28c-120">El grupo de secciones en el que hay que copiar esta sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-120">The section group to copy this section to.</span></span>
          type:
            - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#getRestApiId:member(1)'
    summary: |-
      <span data-ttu-id="4a28c-121">Obtiene el identificador de la API de REST.</span><span class="sxs-lookup"><span data-stu-id="4a28c-121">Gets the REST API ID.</span></span>

      <span data-ttu-id="4a28c-122">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-122">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getRestApiId()
    fullName: getRestApiId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'onenote!OneNote.Section#getRestApiId~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a28c-123">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4a28c-123">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx){
              // Get the current section.         
              var section = ctx.application.getActiveSection();
              var restApiId = section.getRestApiId();

              return ctx.sync().
                  then(function(){
                      console.log("The REST API ID is " + restApiId.value);
                      // Note that the REST API ID isn't all you need to interact with the OneNote REST API. 
                      // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.
                      // For SharePoint notebooks, the notebook baseUrl should be used to talk to the 
                      // OneNote REST API according to the OneNote Development Blog.
                      // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/
                  });
          });
          ```
  - uid: 'onenote!OneNote.Section#id:member'
    summary: |-
      <span data-ttu-id="4a28c-124">Obtiene el identificador de la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-124">Gets the ID of the section.</span></span> <span data-ttu-id="4a28c-125">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4a28c-125">Read-only.</span></span>

      <span data-ttu-id="4a28c-126">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-126">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#insertSectionAsSibling:member(1)'
    summary: |-
      <span data-ttu-id="4a28c-127">Inserta una nueva sección antes o después de la sección actual.</span><span class="sxs-lookup"><span data-stu-id="4a28c-127">Inserts a new section before or after the current section.</span></span>

      <span data-ttu-id="4a28c-128">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-128">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertSectionAsSibling(location, title)'
    fullName: 'insertSectionAsSibling(location, title)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSectionAsSibling(location: OneNote.InsertLocation, title: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: location
          description: <span data-ttu-id="4a28c-129">La ubicación de la nueva sección relativa a la sección actual.</span><span class="sxs-lookup"><span data-stu-id="4a28c-129">The location of the new section relative to the current section.</span></span>
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: title
          description: <span data-ttu-id="4a28c-130">Nombre de la nueva sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-130">The name of the new section.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.Section#insertSectionAsSibling:member(2)'
    summary: |-
      <span data-ttu-id="4a28c-131">Inserta una nueva sección antes o después de la sección actual.</span><span class="sxs-lookup"><span data-stu-id="4a28c-131">Inserts a new section before or after the current section.</span></span>

      <span data-ttu-id="4a28c-132">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-132">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertSectionAsSibling(locationString, title)'
    fullName: 'insertSectionAsSibling(locationString, title)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSectionAsSibling(locationString: "Before" | "After", title: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a28c-133">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4a28c-133">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                      
              // Queue a command to insert a section after the current section.
              var section = context.application.getActiveSection().insertSectionAsSibling("After", "New section");
                      
              // Queue a command to load the id and name of the new section. 
              // This example loads the new section so it can read its properties later.           
              section.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                       
                      // Display the properties.       
                      console.log("Section name: " + section.name);
                      console.log("Section ID: " + section.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: locationString
          description: <span data-ttu-id="4a28c-134">La ubicación de la nueva sección relativa a la sección actual.</span><span class="sxs-lookup"><span data-stu-id="4a28c-134">The location of the new section relative to the current section.</span></span>
          type:
            - '"Before" | "After"'
        - id: title
          description: <span data-ttu-id="4a28c-135">Nombre de la nueva sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-135">The name of the new section.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.Section#isEncrypted:member'
    summary: |-
      <span data-ttu-id="4a28c-136">True si esta sección está cifrada con una contraseña.</span><span class="sxs-lookup"><span data-stu-id="4a28c-136">True if this section is encrypted with a password.</span></span> <span data-ttu-id="4a28c-137">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="4a28c-137">Read only</span></span>

      <span data-ttu-id="4a28c-138">\[[Conjunto de API: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-138">\[ [API set: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: isEncrypted
    fullName: isEncrypted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEncrypted: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Section#isLocked:member'
    summary: |-
      <span data-ttu-id="4a28c-139">True si esta sección está bloqueada.</span><span class="sxs-lookup"><span data-stu-id="4a28c-139">True if this section is locked.</span></span> <span data-ttu-id="4a28c-140">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="4a28c-140">Read only</span></span>

      <span data-ttu-id="4a28c-141">\[[Conjunto de API: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-141">\[ [API set: OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: isLocked
    fullName: isLocked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLocked: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Section#load:member(1)'
    summary: '<span data-ttu-id="4a28c-142">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="4a28c-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a28c-143">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="4a28c-143">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="4a28c-144">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="4a28c-144">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="4a28c-145">`load(option?: string | string[]): OneNote.Section`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="4a28c-145">`load(option?: string | string[]): OneNote.Section` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="4a28c-146">`load(option?: { select?: string; expand?: string; }): OneNote.Section`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="4a28c-146">`load(option?: { select?: string; expand?: string; }): OneNote.Section` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="4a28c-147">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Section`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-147">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Section` - Only available on collection types.</span></span> <span data-ttu-id="4a28c-148">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="4a28c-148">It is similar to the preceding signature.</span></span> <span data-ttu-id="4a28c-149">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="4a28c-149">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4a28c-150">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="4a28c-150">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4a28c-151">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="4a28c-151">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.SectionLoadOptions): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.SectionLoadOptions:interface'
  - uid: 'onenote!OneNote.Section#load:member(2)'
    summary: <span data-ttu-id="4a28c-152">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="4a28c-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a28c-153">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4a28c-153">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a28c-154">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4a28c-154">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load("id");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Section ID: " + section.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section with the specified properties. 
              section.load("name,notebook/name");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Section name: " + section.name);
                      console.log("Parent notebook name: " + section.notebook.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
              // Queue a command to add a page to the current section.
              var section = context.application.getActiveSection();
              section.load('clientUrl,notebook');
              var sectionGroup = section.parentSectionGroupOrNull;
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      if(sectionGroup.isNull === false)
                      {
                          // If a parent section group exists, queue a command to add a section in it!
                          sectionGroup.addSection("NewSectionInSectionGroup");
                      }
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="4a28c-155">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="4a28c-155">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Section#load:member(3)'
    summary: <span data-ttu-id="4a28c-156">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="4a28c-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a28c-157">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4a28c-157">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4a28c-158">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="4a28c-158">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Section#name:member'
    summary: |-
      <span data-ttu-id="4a28c-159">Obtiene el nombre de la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-159">Gets the name of the section.</span></span> <span data-ttu-id="4a28c-160">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4a28c-160">Read-only.</span></span>

      <span data-ttu-id="4a28c-161">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-161">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#notebook:member'
    summary: |-
      <span data-ttu-id="4a28c-162">Obtiene el bloc de notas que contiene la página.</span><span class="sxs-lookup"><span data-stu-id="4a28c-162">Gets the notebook that contains the section.</span></span> <span data-ttu-id="4a28c-163">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4a28c-163">Read-only.</span></span>

      <span data-ttu-id="4a28c-164">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-164">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: notebook
    fullName: notebook
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebook: OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
  - uid: 'onenote!OneNote.Section#pages:member'
    summary: |-
      <span data-ttu-id="4a28c-165">Colección de páginas de la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-165">The collection of pages in the section.</span></span> <span data-ttu-id="4a28c-166">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="4a28c-166">Read only</span></span>

      <span data-ttu-id="4a28c-167">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-167">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
  - uid: 'onenote!OneNote.Section#parentSectionGroup:member'
    summary: |-
      <span data-ttu-id="4a28c-168">Obtiene el grupo de secciones que contiene la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-168">Gets the section group that contains the section.</span></span> <span data-ttu-id="4a28c-169">Genera ItemNotFound si la sección es un elemento secundario directo del bloc de notas.</span><span class="sxs-lookup"><span data-stu-id="4a28c-169">Throws ItemNotFound if the section is a direct child of the notebook.</span></span> <span data-ttu-id="4a28c-170">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4a28c-170">Read-only.</span></span>

      <span data-ttu-id="4a28c-171">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-171">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentSectionGroup
    fullName: parentSectionGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#parentSectionGroupOrNull:member'
    summary: |-
      <span data-ttu-id="4a28c-172">Obtiene el grupo de secciones que contiene la sección.</span><span class="sxs-lookup"><span data-stu-id="4a28c-172">Gets the section group that contains the section.</span></span> <span data-ttu-id="4a28c-173">Devuelve nulo si la sección no es un elemento secundario directo del bloc de notas.</span><span class="sxs-lookup"><span data-stu-id="4a28c-173">Returns null if the section is a direct child of the notebook.</span></span> <span data-ttu-id="4a28c-174">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4a28c-174">Read-only.</span></span>

      <span data-ttu-id="4a28c-175">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentSectionGroupOrNull
    fullName: parentSectionGroupOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#toJSON:member(1)'
    summary: '<span data-ttu-id="4a28c-176">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4a28c-176">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4a28c-177">.</span><span class="sxs-lookup"><span data-stu-id="4a28c-177"></span></span> <span data-ttu-id="4a28c-178">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4a28c-178"></span></span><!-- --><span data-ttu-id="4a28c-179">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto OneNote. Section original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`OneNote.Interfaces.SectionData`</span><span class="sxs-lookup"><span data-stu-id="4a28c-179">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Section object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.SectionData`</span></span><!-- --><span data-ttu-id="4a28c-180">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="4a28c-180">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.SectionData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.SectionData:interface'
        description: ''
  - uid: 'onenote!OneNote.Section#track:member(1)'
    summary: '<span data-ttu-id="4a28c-181">Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento.</span><span class="sxs-lookup"><span data-stu-id="4a28c-181">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="4a28c-182">Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="4a28c-182">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="4a28c-183">Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a28c-183">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
  - uid: 'onenote!OneNote.Section#untrack:member(1)'
    summary: '<span data-ttu-id="4a28c-184">Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente.</span><span class="sxs-lookup"><span data-stu-id="4a28c-184">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="4a28c-185">Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="4a28c-185">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="4a28c-186">Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="4a28c-186">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="4a28c-187">Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.</span><span class="sxs-lookup"><span data-stu-id="4a28c-187">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
  - uid: 'onenote!OneNote.Section#webUrl:member'
    summary: |-
      <span data-ttu-id="4a28c-188">La URL de la web de la página.</span><span class="sxs-lookup"><span data-stu-id="4a28c-188">The web url of the page.</span></span> <span data-ttu-id="4a28c-189">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="4a28c-189">Read only</span></span>

      <span data-ttu-id="4a28c-190">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a28c-190">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: webUrl
    fullName: webUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly webUrl: string;'
      return:
        type:
          - string
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.Page:class'
    name: OneNote.Page
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Section:class'
    name: OneNote.Section
  - uid: 'onenote!OneNote.Notebook:class'
    name: OneNote.Notebook
  - uid: 'onenote!OneNote.SectionGroup:class'
    name: OneNote.SectionGroup
  - uid: 'onenote!OneNote.Section#getRestApiId~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'onenote!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'onenote!OneNote.InsertLocation:enum'
    name: OneNote.InsertLocation
  - uid: 'onenote!OneNote.Interfaces.SectionLoadOptions:interface'
    name: OneNote.Interfaces.SectionLoadOptions
  - uid: 'onenote!OneNote.PageCollection:class'
    name: OneNote.PageCollection
  - uid: 'onenote!OneNote.Interfaces.SectionData:interface'
    name: OneNote.Interfaces.SectionData