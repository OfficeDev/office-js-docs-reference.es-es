### YamlMime:UniversalReference
ms.openlocfilehash: 85467a8a82cfb84075328290fece3eae244f7639
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 10/17/2018
ms.locfileid: "25583451"
items:
- uid: onenote.OneNote.PageContentCollection
  summary: >-
    Representa el contenido de una página como una colección de objetos PageContent.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: OneNote.PageContentCollection
  fullName: onenote.OneNote.PageContentCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.PageContentCollection.count
  - onenote.OneNote.PageContentCollection.getItem
  - onenote.OneNote.PageContentCollection.getItemAt
  - onenote.OneNote.PageContentCollection.items
  - onenote.OneNote.PageContentCollection.load
  - onenote.OneNote.PageContentCollection.toJSON
  - onenote.OneNote.PageContentCollection.track
  - onenote.OneNote.PageContentCollection.untrack
- uid: onenote.OneNote.PageContentCollection.count
  summary: >-
    Devuelve el número de contenidos de página de la colección. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: count
  fullName: onenote.OneNote.PageContentCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.PageContentCollection.getItem
  summary: >-
    Obtiene un objeto PageContent por id. o por su índice en la colección. Solo lectura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: getItem(index)
  fullName: onenote.OneNote.PageContentCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.PageContent;'
    return:
      type:
      - onenote.OneNote.PageContent
      description: ''
    parameters:
    - id: index
      description: El id. del objeto PageContent, o bien la ubicación del índice del bloc de notas en la colección.
      type:
      - number | string
- uid: onenote.OneNote.PageContentCollection.getItemAt
  summary: >-
    Obtiene un contenido de página según su posición en la colección.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: onenote.OneNote.PageContentCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.PageContent;'
    return:
      type:
      - onenote.OneNote.PageContent
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (context) {\n\n    var page = context.application.getActivePage();\n    var pageContents = page.contents;\n    var firstPageContent = pageContents.getItemAt(0);\n    firstPageContent.load('type');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"The first page content item is of type: \" + firstPageContent.type);\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: Valor de índice del objeto que se va a recuperar. Indizado con cero.
      type:
      - number
- uid: onenote.OneNote.PageContentCollection.items
  summary: Obtiene al secundario cargado los elementos de esta colección.
  name: items
  fullName: onenote.OneNote.PageContentCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.PageContent[];'
    return:
      type:
      - OneNote.PageContent[]
- uid: onenote.OneNote.PageContentCollection.load
  summary: Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas. Se debe llamar a "context.sync()" antes de leer las propiedades.
  remarks: "Además de esta firma, este método no tiene las siguientes firmas:\n\n`load(option?: { select?: string; expand?: string; }): OneNote.PageContentCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageContentCollection`-Sólo está disponible en los tipos de colección. Es similar a la firma precedente. Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado. Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado. Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Queue a command to load the type of each pageContent.\n    pageContents.load(\"type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            $.each(pageContents.items, function(index, pageContent) {\n                console.log(\"PageContent type: \" + pageContent.type);\n            });\n        });\n})                \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n   var page = context.application.getActivePage();\n   var pageContents = page.contents;\n   pageContents.load('type');\n   var outlines = ;\n   return context.sync()\n       .then(function () {      \n              $.each(pageContents.items, function (index, pageContent) {\n                     console.log(pageContent.type);\n                     if (pageContent.type === 'Outline') {\n                           outlines.push(pageContent);\n                     }\n              });\n              $.each(outlines, function (index, outline) {\n                     outline.load(\"id,paragraphs,paragraphs/type\");\n              });\n              return context.sync();\n       })\n       .then(function () {\n              $.each(outlines, function (index, outline) {\n                     console.log(\"An outline was found with id : \" + outline.id);\n              });\n              return Promise.resolve(outlines);\n       });\n});\n```"
  name: load(option)
  fullName: onenote.OneNote.PageContentCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.PageContentCollection;'
    return:
      type:
      - onenote.OneNote.PageContentCollection
      description: ''
    parameters:
    - id: option
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.
      type:
      - string | string[]
- uid: onenote.OneNote.PageContentCollection.toJSON
  name: toJSON()
  fullName: onenote.OneNote.PageContentCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.PageContentCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.PageContentCollectionData
      description: ''
- uid: onenote.OneNote.PageContentCollection.track
  summary: Realizar un seguimiento del objeto para el ajuste automático en función de que lo rodea los cambios en el documento. Esta llamada es una forma abreviada para context.trackedObjects.add(thisObject). Si va a usar este objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto al objeto marca de revisión colección cuando el objeto se crea por primera vez.
  name: track()
  fullName: onenote.OneNote.PageContentCollection.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.PageContentCollection;'
    return:
      type:
      - onenote.OneNote.PageContentCollection
      description: ''
- uid: onenote.OneNote.PageContentCollection.untrack
  summary: La memoria asociada con este objeto, si lo se anteriormente hace el seguimiento de la versión. Esta llamada es una abreviatura de context.trackedObjects.remove(thisObject). Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos. Debe llamar a "context.sync()" antes de la versión de memoria surta efecto.
  name: untrack()
  fullName: onenote.OneNote.PageContentCollection.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.PageContentCollection;'
    return:
      type:
      - onenote.OneNote.PageContentCollection
      description: ''
