### YamlMime:UniversalReference
ms.openlocfilehash: 99be0fd3e06119510bfe903d6953053658bc010a
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981728"
items:
- uid: onenote.OneNote.Application
  summary: >-
    <span data-ttu-id="326e7-101">Representa el objeto de nivel superior que contiene todos los objetos de OneNote a los que se puede hacer referencia globalmente, como blocs de notas, el bloc de notas activo y la sección activa.</span><span class="sxs-lookup"><span data-stu-id="326e7-101">Represents the top-level object that contains all globally addressable OneNote objects such as notebooks, the active notebook, and the active section.</span></span>


    <span data-ttu-id="326e7-102">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Application
  fullName: OneNote.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Application.context
  - onenote.OneNote.Application.getActiveNotebook
  - onenote.OneNote.Application.getActiveNotebookOrNull
  - onenote.OneNote.Application.getActiveOutline
  - onenote.OneNote.Application.getActiveOutlineOrNull
  - onenote.OneNote.Application.getActivePage
  - onenote.OneNote.Application.getActivePageOrNull
  - onenote.OneNote.Application.getActiveParagraph
  - onenote.OneNote.Application.getActiveParagraphOrNull
  - onenote.OneNote.Application.getActiveSection
  - onenote.OneNote.Application.getActiveSectionOrNull
  - onenote.OneNote.Application.getWindowSize
  - onenote.OneNote.Application.insertHtmlAtCurrentPosition
  - onenote.OneNote.Application.isViewingDeletedNotes
  - onenote.OneNote.Application.load
  - onenote.OneNote.Application.load_1
  - onenote.OneNote.Application.load_2
  - onenote.OneNote.Application.navigateToPage
  - onenote.OneNote.Application.navigateToPageWithClientUrl
  - onenote.OneNote.Application.notebooks
  - onenote.OneNote.Application.toJSON
- uid: onenote.OneNote.Application.context
  summary: <span data-ttu-id="326e7-103">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="326e7-103">The request context associated with the object.</span></span> <span data-ttu-id="326e7-104">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="326e7-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Application.getActiveNotebook
  summary: >-
    <span data-ttu-id="326e7-p102">Obtiene el bloc de notas activo si existe alguno. Si no hay ningún bloc de notas activo, lanza ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="326e7-p102">Gets the active notebook if one exists. If no notebook is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="326e7-107">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveNotebook()
  fullName: getActiveNotebook()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveNotebook(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-108\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-108\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Notebook name: \" + notebook.name);\n            console.log(\"Notebook ID: \" + notebook.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveNotebookOrNull
  summary: >-
    <span data-ttu-id="326e7-p103">Obtiene el bloc de notas activo si existe alguno. Si no hay ningún bloc de notas activo, devuelve NULL.</span><span class="sxs-lookup"><span data-stu-id="326e7-p103">Gets the active notebook if one exists. If no notebook is active, returns null.</span></span>


    <span data-ttu-id="326e7-111">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveNotebookOrNull()
  fullName: getActiveNotebookOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-112\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-112\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebookOrNull();\n\n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // check if active notebook is set.\n            if (!notebook.isNull) {\n                console.log(\"Notebook name: \" + notebook.name);\n                console.log(\"Notebook ID: \" + notebook.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveOutline
  summary: >-
    <span data-ttu-id="326e7-113">Obtiene el esquema activo si existe alguno. Si no hay ninguno, lanza ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="326e7-113">Gets the active outline if one exists, If no outline is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="326e7-114">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveOutline()
  fullName: getActiveOutline()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveOutline(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-115\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutline();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Show some properties.\n            console.log(\"outline id: \" + outline.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveOutlineOrNull
  summary: >-
    <span data-ttu-id="326e7-116">Obtiene el esquema activo si existe. De lo contrario, devuelve NULL.</span><span class="sxs-lookup"><span data-stu-id="326e7-116">Gets the active outline if one exists, otherwise returns null.</span></span>


    <span data-ttu-id="326e7-117">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveOutlineOrNull()
  fullName: getActiveOutlineOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveOutlineOrNull(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-118\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-118\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutlineOrNull();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            if (!outline.isNull) {\n                console.log(\"outline id: \" + outline.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActivePage
  summary: >-
    <span data-ttu-id="326e7-p104">Obtiene la página activa si existe alguna. Si no hay ninguna página activa, lanza ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="326e7-p104">Gets the active page if one exists. If no page is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="326e7-121">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActivePage()
  fullName: getActivePage()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePage(): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-122\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active page.\n    var page = context.application.getActivePage();\n            \n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Page title: \" + page.title);\n            console.log(\"Page ID: \" + page.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActivePageOrNull
  summary: >-
    <span data-ttu-id="326e7-p105">Obtiene la página activa si existe alguna. Si no hay ninguna página activa, devuelve NULL.</span><span class="sxs-lookup"><span data-stu-id="326e7-p105">Gets the active page if one exists. If no page is active, returns null.</span></span>


    <span data-ttu-id="326e7-125">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActivePageOrNull()
  fullName: getActivePageOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePageOrNull(): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-126\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-126\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active page.\n    var page = context.application.getActivePageOrNull();\n\n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            if (!page.isNull) {\n                // Show some properties.\n                console.log(\"Page title: \" + page.title);\n                console.log(\"Page ID: \" + page.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveParagraph
  summary: >-
    <span data-ttu-id="326e7-127">Obtiene el párrafo activo si existe uno, si no hay ningún párrafo está activa, produce ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="326e7-127">Gets the active Paragraph if one exists, If no Paragraph is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="326e7-128">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-128">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveParagraph()
  fullName: getActiveParagraph()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveParagraph(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Application.getActiveParagraphOrNull
  summary: >-
    <span data-ttu-id="326e7-129">Obtiene el párrafo activo si lo hay, en caso contrario, devuelve null.</span><span class="sxs-lookup"><span data-stu-id="326e7-129">Gets the active Paragraph if one exists, otherwise returns null.</span></span>


    <span data-ttu-id="326e7-130">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-130">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveParagraphOrNull()
  fullName: getActiveParagraphOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Application.getActiveSection
  summary: >-
    <span data-ttu-id="326e7-p106">Obtiene la sección activa si existe alguna. Si no hay ninguna sección activa, lanza ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="326e7-p106">Gets the active section if one exists. If no section is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="326e7-133">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-133">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveSection()
  fullName: getActiveSection()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSection(): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-134\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-134\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Section name: \" + section.name);\n            console.log(\"Section ID: \" + section.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveSectionOrNull
  summary: >-
    <span data-ttu-id="326e7-p107">Obtiene la sección activa si existe alguna. Si no hay ninguna sección activa, devuelve NULL.</span><span class="sxs-lookup"><span data-stu-id="326e7-p107">Gets the active section if one exists. If no section is active, returns null.</span></span>


    <span data-ttu-id="326e7-137">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveSectionOrNull()
  fullName: getActiveSectionOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSectionOrNull(): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-138\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-138\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active section.\n    var section = context.application.getActiveSectionOrNull();\n\n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            if (!section.isNull) {\n                // Show some properties.\n                console.log(\"Section name: \" + section.name);\n                console.log(\"Section ID: \" + section.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getWindowSize
  name: getWindowSize()
  fullName: getWindowSize()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<number[]>
      description: ''
- uid: onenote.OneNote.Application.insertHtmlAtCurrentPosition
  name: insertHtmlAtCurrentPosition(html)
  fullName: insertHtmlAtCurrentPosition(html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAtCurrentPosition(html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: html
      description: ''
      type:
      - string
- uid: onenote.OneNote.Application.isViewingDeletedNotes
  name: isViewingDeletedNotes()
  fullName: isViewingDeletedNotes()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
- uid: onenote.OneNote.Application.load
  summary: <span data-ttu-id="326e7-139">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="326e7-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="326e7-140">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="326e7-140">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="326e7-141">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="326e7-141">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="326e7-142">`load(option?: string | string[]): OneNote.Application`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="326e7-142">`load(option?: string | string[]): OneNote.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="326e7-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="326e7-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="326e7-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="326e7-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - Only available on collection types.</span></span> <span data-ttu-id="326e7-145">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="326e7-145">It is similar to the preceding signature.</span></span> <span data-ttu-id="326e7-146">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="326e7-146">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="326e7-147">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="326e7-147">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="326e7-148">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="326e7-148">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ApplicationLoadOptions): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.ApplicationLoadOptions
- uid: onenote.OneNote.Application.load_1
  summary: <span data-ttu-id="326e7-149">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="326e7-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="326e7-150">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="326e7-150">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="326e7-151">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="326e7-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Application.load_2
  summary: <span data-ttu-id="326e7-152">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="326e7-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="326e7-153">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="326e7-153">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="326e7-154">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="326e7-154">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Application.navigateToPage
  summary: >-
    <span data-ttu-id="326e7-155">Abre la página especificada en la instancia de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="326e7-155">Opens the specified page in the application instance.</span></span>


    <span data-ttu-id="326e7-156">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-156">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: navigateToPage(page)
  fullName: navigateToPage(page)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'navigateToPage(page: OneNote.Page): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-157\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-157\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n            \n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('id');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // This example loads the first page in the section.\n            var page = pages.items[0];\n                        \n            // Open the page in the application.                    \n            context.application.navigateToPage(page);\n                    \n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: page
      description: <span data-ttu-id="326e7-158">La página que se abrirá.</span><span class="sxs-lookup"><span data-stu-id="326e7-158">The page to open.</span></span>
      type:
      - onenote.OneNote.Page
- uid: onenote.OneNote.Application.navigateToPageWithClientUrl
  summary: >-
    <span data-ttu-id="326e7-159">Obtiene la página especificada y la abre en la instancia de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="326e7-159">Gets the specified page, and opens it in the application instance.</span></span>


    <span data-ttu-id="326e7-160">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-160">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: navigateToPageWithClientUrl(url)
  fullName: navigateToPageWithClientUrl(url)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"326e7-161\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"326e7-161\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n\n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('clientUrl');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // This example loads the first page in the section.\n            var page = pages.items[0];\n\n            // Open the page in the application.                    \n            context.application.navigateToPageWithClientUrl(page.clientUrl);\n\n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: url
      description: <span data-ttu-id="326e7-162">La URL del cliente de la página que se abrirá.</span><span class="sxs-lookup"><span data-stu-id="326e7-162">The client url of the page to open.</span></span>
      type:
      - string
- uid: onenote.OneNote.Application.notebooks
  summary: >-
    <span data-ttu-id="326e7-p112">Obtiene la colección de blocs de notas que están abiertos en la instancia de la aplicación de OneNote. En OneNote Online, solo se abre un bloc de notas en la instancia de la aplicación. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="326e7-p112">Gets the collection of notebooks that are open in the OneNote application instance. In OneNote Online, only one notebook at a time is open in the application instance. Read-only.</span></span>


    <span data-ttu-id="326e7-166">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="326e7-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: notebooks
  fullName: notebooks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly notebooks: OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
- uid: onenote.OneNote.Application.toJSON
  summary: <span data-ttu-id="326e7-167">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="326e7-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="326e7-168">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de OneNote.Application es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `OneNote.Interfaces.ApplicationData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="326e7-168">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
    return:
      type:
      - OneNote.Interfaces.ApplicationData
      description: ''
