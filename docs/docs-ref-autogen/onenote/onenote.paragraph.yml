### YamlMime:UniversalReference
ms.openlocfilehash: 6401230fdb6e9e1b17711c715719afe3cbefc21c
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979816"
items:
- uid: onenote.OneNote.Paragraph
  summary: >-
    <span data-ttu-id="a2fda-p101">Contenedor para el contenido visible en una página. Un Paragraph puede contener cualquier tipo de ParagraphType de contenido.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p101">A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.</span></span>


    <span data-ttu-id="a2fda-103">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Paragraph
  fullName: OneNote.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Paragraph.addNoteTag
  - onenote.OneNote.Paragraph.addNoteTag_1
  - onenote.OneNote.Paragraph.context
  - onenote.OneNote.Paragraph.delete
  - onenote.OneNote.Paragraph.getParagraphInfo
  - onenote.OneNote.Paragraph.id
  - onenote.OneNote.Paragraph.image
  - onenote.OneNote.Paragraph.inkWords
  - onenote.OneNote.Paragraph.insertHtmlAsSibling
  - onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  - onenote.OneNote.Paragraph.insertImageAsSibling
  - onenote.OneNote.Paragraph.insertImageAsSibling_1
  - onenote.OneNote.Paragraph.insertRichTextAsSibling
  - onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  - onenote.OneNote.Paragraph.insertTableAsSibling
  - onenote.OneNote.Paragraph.insertTableAsSibling_1
  - onenote.OneNote.Paragraph.load
  - onenote.OneNote.Paragraph.load_1
  - onenote.OneNote.Paragraph.load_2
  - onenote.OneNote.Paragraph.outline
  - onenote.OneNote.Paragraph.paragraphs
  - onenote.OneNote.Paragraph.parentParagraph
  - onenote.OneNote.Paragraph.parentParagraphOrNull
  - onenote.OneNote.Paragraph.parentTableCell
  - onenote.OneNote.Paragraph.parentTableCellOrNull
  - onenote.OneNote.Paragraph.richText
  - onenote.OneNote.Paragraph.set
  - onenote.OneNote.Paragraph.set_1
  - onenote.OneNote.Paragraph.table
  - onenote.OneNote.Paragraph.toJSON
  - onenote.OneNote.Paragraph.track
  - onenote.OneNote.Paragraph.type
  - onenote.OneNote.Paragraph.untrack
- uid: onenote.OneNote.Paragraph.addNoteTag
  summary: >-
    <span data-ttu-id="a2fda-104">Agregar NoteTag al párrafo.</span><span class="sxs-lookup"><span data-stu-id="a2fda-104">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="a2fda-105">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(type, status)
  fullName: addNoteTag(type, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="a2fda-106">El tipo de la NoteTag.</span><span class="sxs-lookup"><span data-stu-id="a2fda-106">The type of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagType
    - id: status
      description: <span data-ttu-id="a2fda-107">El estado de la NoteTag.</span><span class="sxs-lookup"><span data-stu-id="a2fda-107">The status of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagStatus
- uid: onenote.OneNote.Paragraph.addNoteTag_1
  summary: >-
    <span data-ttu-id="a2fda-108">Agregar NoteTag al párrafo.</span><span class="sxs-lookup"><span data-stu-id="a2fda-108">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="a2fda-109">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(typeString, status)
  fullName: addNoteTag(typeString, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: typeString
      description: <span data-ttu-id="a2fda-110">El tipo de la NoteTag.</span><span class="sxs-lookup"><span data-stu-id="a2fda-110">The type of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: <span data-ttu-id="a2fda-111">El estado de la NoteTag.</span><span class="sxs-lookup"><span data-stu-id="a2fda-111">The status of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
- uid: onenote.OneNote.Paragraph.context
  summary: <span data-ttu-id="a2fda-112">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="a2fda-112">The request context associated with the object.</span></span> <span data-ttu-id="a2fda-113">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="a2fda-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Paragraph.delete
  summary: >-
    <span data-ttu-id="a2fda-114">Elimina el párrafo</span><span class="sxs-lookup"><span data-stu-id="a2fda-114">Deletes the paragraph</span></span>


    <span data-ttu-id="a2fda-115">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a2fda-116\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"a2fda-116\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Paragraph.getParagraphInfo
  summary: >-
    <span data-ttu-id="a2fda-117">Obtener información sobre la lista del párrafo</span><span class="sxs-lookup"><span data-stu-id="a2fda-117">Get list information of paragraph</span></span>


    <span data-ttu-id="a2fda-118">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getParagraphInfo()
  fullName: getParagraphInfo()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type:
      - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
      description: ''
- uid: onenote.OneNote.Paragraph.id
  summary: >-
    <span data-ttu-id="a2fda-p103">Obtiene el id. del objeto Paragraph. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p103">Gets the ID of the Paragraph object. Read-only.</span></span>


    <span data-ttu-id="a2fda-121">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Paragraph.image
  summary: >-
    <span data-ttu-id="a2fda-p104">Obtiene el objeto Image de Paragraph. Produce una excepción si ParagraphType no es Image. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p104">Gets the Image object in the Paragraph. Throws an exception if ParagraphType is not Image. Read-only.</span></span>


    <span data-ttu-id="a2fda-125">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: image
  fullName: image
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
- uid: onenote.OneNote.Paragraph.inkWords
  summary: >-
    <span data-ttu-id="a2fda-p105">Obtiene la colección Ink de Paragraph. Produce una excepción si ParagraphType no es Ink. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p105">Gets the Ink collection in the Paragraph. Throws an exception if ParagraphType is not Ink. Read-only.</span></span>


    <span data-ttu-id="a2fda-129">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: inkWords
  fullName: inkWords
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type:
      - onenote.OneNote.InkWordCollection
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
  summary: >-
    <span data-ttu-id="a2fda-130">Inserta el contenido HTML especificado</span><span class="sxs-lookup"><span data-stu-id="a2fda-130">Inserts the specified HTML content</span></span>


    <span data-ttu-id="a2fda-131">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocation, html)
  fullName: insertHtmlAsSibling(insertLocation, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a2fda-132\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"a2fda-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="a2fda-133">La ubicación del nuevo contenido relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-133">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: html
      description: <span data-ttu-id="a2fda-134">Una cadena HTML que describe la presentación visual del contenido.</span><span class="sxs-lookup"><span data-stu-id="a2fda-134">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="a2fda-135">Vea [Admiten HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) para la API de JavaScript de complementos de OneNote.</span><span class="sxs-lookup"><span data-stu-id="a2fda-135">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  summary: >-
    <span data-ttu-id="a2fda-136">Inserta el contenido HTML especificado</span><span class="sxs-lookup"><span data-stu-id="a2fda-136">Inserts the specified HTML content</span></span>


    <span data-ttu-id="a2fda-137">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocationString, html)
  fullName: insertHtmlAsSibling(insertLocationString, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="a2fda-138">La ubicación del nuevo contenido relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-138">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: html
      description: <span data-ttu-id="a2fda-139">Una cadena HTML que describe la presentación visual del contenido.</span><span class="sxs-lookup"><span data-stu-id="a2fda-139">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="a2fda-140">Vea [Admiten HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) para la API de JavaScript de complementos de OneNote.</span><span class="sxs-lookup"><span data-stu-id="a2fda-140">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertImageAsSibling
  summary: >-
    <span data-ttu-id="a2fda-141">Inserta la imagen en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="a2fda-141">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="a2fda-142">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a2fda-143\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"a2fda-143\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="a2fda-144">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-144">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: base64EncodedImage
      description: <span data-ttu-id="a2fda-145">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="a2fda-145">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="a2fda-p108">Opcional. Ancho en la unidad de puntos. El valor predeterminado es null, que respeta el ancho de la imagen.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p108">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="a2fda-p109">Opcional. Alto en la unidad de puntos. El valor predeterminado es null, que respeta el alto de la imagen.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p109">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertImageAsSibling_1
  summary: >-
    <span data-ttu-id="a2fda-152">Inserta la imagen en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="a2fda-152">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="a2fda-153">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-153">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - onenote.OneNote.Image
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="a2fda-154">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-154">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: <span data-ttu-id="a2fda-155">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="a2fda-155">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="a2fda-p110">Opcional. Ancho en la unidad de puntos. El valor predeterminado es null, que respeta el ancho de la imagen.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p110">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="a2fda-p111">Opcional. Alto en la unidad de puntos. El valor predeterminado es null, que respeta el alto de la imagen.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p111">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
  summary: >-
    <span data-ttu-id="a2fda-162">Inserta el texto del párrafo en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="a2fda-162">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="a2fda-163">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-163">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocation, paragraphText)
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a2fda-164\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"a2fda-164\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="a2fda-165">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-165">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: paragraphText
      description: <span data-ttu-id="a2fda-166">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="a2fda-166">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  summary: >-
    <span data-ttu-id="a2fda-167">Inserta el texto del párrafo en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="a2fda-167">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="a2fda-168">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-168">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocationString, paragraphText)
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="a2fda-169">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-169">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: paragraphText
      description: <span data-ttu-id="a2fda-170">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="a2fda-170">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertTableAsSibling
  summary: >-
    <span data-ttu-id="a2fda-171">Agrega una tabla con el número especificado de filas y columnas antes o después del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-171">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="a2fda-172">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="a2fda-173">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-173">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: rowCount
      description: <span data-ttu-id="a2fda-174">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="a2fda-174">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="a2fda-175">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="a2fda-175">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="a2fda-176">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="a2fda-176">Optional 2D array.</span></span> <span data-ttu-id="a2fda-177">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="a2fda-177">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.insertTableAsSibling_1
  summary: >-
    <span data-ttu-id="a2fda-178">Agrega una tabla con el número especificado de filas y columnas antes o después del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-178">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="a2fda-179">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-179">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="a2fda-180">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="a2fda-180">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: rowCount
      description: <span data-ttu-id="a2fda-181">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="a2fda-181">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="a2fda-182">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="a2fda-182">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="a2fda-183">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="a2fda-183">Optional 2D array.</span></span> <span data-ttu-id="a2fda-184">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="a2fda-184">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.load
  summary: <span data-ttu-id="a2fda-185">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a2fda-185">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2fda-186">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a2fda-186">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a2fda-187">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="a2fda-187">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a2fda-188">`load(option?: string | string[]): OneNote.Paragraph`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="a2fda-188">`load(option?: string | string[]): OneNote.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a2fda-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="a2fda-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a2fda-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="a2fda-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="a2fda-191">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="a2fda-191">It is similar to the preceding signature.</span></span> <span data-ttu-id="a2fda-192">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a2fda-192">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a2fda-193">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a2fda-193">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a2fda-194">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a2fda-194">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - onenote.OneNote.Interfaces.ParagraphLoadOptions
- uid: onenote.OneNote.Paragraph.load_1
  summary: <span data-ttu-id="a2fda-195">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a2fda-195">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2fda-196">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a2fda-196">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a2fda-197\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"a2fda-197\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a2fda-198">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="a2fda-198">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Paragraph.load_2
  summary: <span data-ttu-id="a2fda-199">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a2fda-199">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2fda-200">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a2fda-200">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="a2fda-201">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="a2fda-201">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Paragraph.outline
  summary: >-
    <span data-ttu-id="a2fda-p118">Obtiene el objeto Outline que contiene Paragraph. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p118">Gets the Outline object that contains the Paragraph. Read-only.</span></span>


    <span data-ttu-id="a2fda-204">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-204">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: outline
  fullName: outline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
- uid: onenote.OneNote.Paragraph.paragraphs
  summary: >-
    <span data-ttu-id="a2fda-205">La colección de párrafos en este párrafo.</span><span class="sxs-lookup"><span data-stu-id="a2fda-205">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="a2fda-206">Como de solo lectura</span><span class="sxs-lookup"><span data-stu-id="a2fda-206">Read only</span></span>


    <span data-ttu-id="a2fda-207">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-207">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Paragraph.parentParagraph
  summary: >-
    <span data-ttu-id="a2fda-p120">Obtiene el objeto Paragraph principal. Se produce si un párrafo primario no existe. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p120">Gets the parent paragraph object. Throws if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="a2fda-211">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-211">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraph
  fullName: parentParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentParagraphOrNull
  summary: >-
    <span data-ttu-id="a2fda-p121">Obtiene el objeto Paragraph principal. Devuelve NULL si un párrafo principal no existe. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p121">Gets the parent paragraph object. Returns null if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="a2fda-215">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-215">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraphOrNull
  fullName: parentParagraphOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="a2fda-p122">Obtiene el objeto TableCell que contiene Paragraph, si existe alguno. Si el principal no es TableCell, produce ItemNotFound. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p122">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, throws ItemNotFound. Read-only.</span></span>


    <span data-ttu-id="a2fda-219">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-219">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.parentTableCellOrNull
  summary: >-
    <span data-ttu-id="a2fda-p123">Obtiene el objeto TableCell que contiene Paragraph, si existe alguno. Si el principal no es TableCell, devuelve NULL. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p123">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, returns null. Read-only.</span></span>


    <span data-ttu-id="a2fda-223">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-223">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNull
  fullName: parentTableCellOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.richText
  summary: >-
    <span data-ttu-id="a2fda-224">Obtiene el objeto RichText de Paragraph.</span><span class="sxs-lookup"><span data-stu-id="a2fda-224">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="a2fda-225">Produce una excepción si ParagraphType no es RichText.</span><span class="sxs-lookup"><span data-stu-id="a2fda-225">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="a2fda-226">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="a2fda-226">Read-only</span></span>


    <span data-ttu-id="a2fda-227">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-227">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: richText
  fullName: richText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
- uid: onenote.OneNote.Paragraph.set
  summary: <span data-ttu-id="a2fda-228">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="a2fda-228">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a2fda-229">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="a2fda-229">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="a2fda-230">Este método no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="a2fda-230">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Paragraph): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="a2fda-231">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a2fda-231">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ParagraphUpdateData
    - id: options
      description: <span data-ttu-id="a2fda-232">Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-232">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Paragraph.set_1
  summary: <span data-ttu-id="a2fda-233">Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="a2fda-233">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.table
  summary: >-
    <span data-ttu-id="a2fda-p126">Obtiene el objeto Table de Paragraph. Produce una excepción si ParagraphType no es Table. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-p126">Gets the Table object in the Paragraph. Throws an exception if ParagraphType is not Table. Read-only.</span></span>


    <span data-ttu-id="a2fda-237">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-237">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: table
  fullName: table
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.Paragraph.toJSON
  summary: <span data-ttu-id="a2fda-238">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="a2fda-238">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a2fda-239">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de OneNote.Paragraph es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `OneNote.Interfaces.ParagraphData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="a2fda-239">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphData
      description: ''
- uid: onenote.OneNote.Paragraph.track
  summary: <span data-ttu-id="a2fda-240">Realizar un seguimiento del objeto para el ajuste automático en función de que lo rodea los cambios en el documento.</span><span class="sxs-lookup"><span data-stu-id="a2fda-240">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="a2fda-241">Esta llamada es una forma abreviada para context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="a2fda-241">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="a2fda-242">Si va a usar este objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto al objeto marca de revisión colección cuando el objeto se crea por primera vez.</span><span class="sxs-lookup"><span data-stu-id="a2fda-242">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Paragraph.type
  summary: >-
    <span data-ttu-id="a2fda-243">Obtiene el tipo del objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="a2fda-243">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="a2fda-244">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2fda-244">Read-only.</span></span>


    <span data-ttu-id="a2fda-245">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2fda-245">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type:
      - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
- uid: onenote.OneNote.Paragraph.untrack
  summary: <span data-ttu-id="a2fda-246">La memoria asociada con este objeto, si lo se anteriormente hace el seguimiento de la versión.</span><span class="sxs-lookup"><span data-stu-id="a2fda-246">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="a2fda-247">Esta llamada es una abreviatura de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="a2fda-247">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="a2fda-248">Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="a2fda-248">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="a2fda-249">Debe llamar a "context.sync()" antes de la versión de memoria surta efecto.</span><span class="sxs-lookup"><span data-stu-id="a2fda-249">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
