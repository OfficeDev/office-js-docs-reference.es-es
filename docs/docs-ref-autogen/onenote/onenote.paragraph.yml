### YamlMime:UniversalReference
ms.openlocfilehash: 9a6e59603f2a27f3b0b9f35931fe253c07c89d3a
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30093276"
items:
- uid: onenote.OneNote.Paragraph
  summary: >-
    <span data-ttu-id="755e1-p101">Contenedor para el contenido visible en una página. Un Paragraph puede contener cualquier tipo de ParagraphType de contenido.</span><span class="sxs-lookup"><span data-stu-id="755e1-p101">A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.</span></span>


    <span data-ttu-id="755e1-103">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Paragraph
  fullName: OneNote.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Paragraph.addNoteTag
  - onenote.OneNote.Paragraph.addNoteTag_1
  - onenote.OneNote.Paragraph.context
  - onenote.OneNote.Paragraph.delete
  - onenote.OneNote.Paragraph.getParagraphInfo
  - onenote.OneNote.Paragraph.id
  - onenote.OneNote.Paragraph.image
  - onenote.OneNote.Paragraph.inkWords
  - onenote.OneNote.Paragraph.insertHtmlAsSibling
  - onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  - onenote.OneNote.Paragraph.insertImageAsSibling
  - onenote.OneNote.Paragraph.insertImageAsSibling_1
  - onenote.OneNote.Paragraph.insertRichTextAsSibling
  - onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  - onenote.OneNote.Paragraph.insertTableAsSibling
  - onenote.OneNote.Paragraph.insertTableAsSibling_1
  - onenote.OneNote.Paragraph.load
  - onenote.OneNote.Paragraph.load_1
  - onenote.OneNote.Paragraph.load_2
  - onenote.OneNote.Paragraph.outline
  - onenote.OneNote.Paragraph.paragraphs
  - onenote.OneNote.Paragraph.parentParagraph
  - onenote.OneNote.Paragraph.parentParagraphOrNull
  - onenote.OneNote.Paragraph.parentTableCell
  - onenote.OneNote.Paragraph.parentTableCellOrNull
  - onenote.OneNote.Paragraph.richText
  - onenote.OneNote.Paragraph.set
  - onenote.OneNote.Paragraph.set_1
  - onenote.OneNote.Paragraph.table
  - onenote.OneNote.Paragraph.toJSON
  - onenote.OneNote.Paragraph.track
  - onenote.OneNote.Paragraph.type
  - onenote.OneNote.Paragraph.untrack
- uid: onenote.OneNote.Paragraph.addNoteTag
  summary: >-
    <span data-ttu-id="755e1-104">Agregue NoteTag al párrafo.</span><span class="sxs-lookup"><span data-stu-id="755e1-104">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="755e1-105">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(type, status)
  fullName: addNoteTag(type, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="755e1-106">El tipo de NoteTag.</span><span class="sxs-lookup"><span data-stu-id="755e1-106">The type of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagType
    - id: status
      description: <span data-ttu-id="755e1-107">El estado de NoteTag.</span><span class="sxs-lookup"><span data-stu-id="755e1-107">The status of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagStatus
- uid: onenote.OneNote.Paragraph.addNoteTag_1
  summary: >-
    <span data-ttu-id="755e1-108">Agregue NoteTag al párrafo.</span><span class="sxs-lookup"><span data-stu-id="755e1-108">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="755e1-109">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(typeString, status)
  fullName: addNoteTag(typeString, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: typeString
      description: <span data-ttu-id="755e1-110">El tipo de NoteTag.</span><span class="sxs-lookup"><span data-stu-id="755e1-110">The type of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: <span data-ttu-id="755e1-111">El estado de NoteTag.</span><span class="sxs-lookup"><span data-stu-id="755e1-111">The status of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
- uid: onenote.OneNote.Paragraph.context
  summary: <span data-ttu-id="755e1-112">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="755e1-112">The request context associated with the object.</span></span> <span data-ttu-id="755e1-113">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="755e1-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Paragraph.delete
  summary: >-
    <span data-ttu-id="755e1-114">Elimina el párrafo</span><span class="sxs-lookup"><span data-stu-id="755e1-114">Deletes the paragraph</span></span>


    <span data-ttu-id="755e1-115">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"755e1-116\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"755e1-116\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Paragraph.getParagraphInfo
  summary: >-
    <span data-ttu-id="755e1-117">Obtener información de la lista del párrafo</span><span class="sxs-lookup"><span data-stu-id="755e1-117">Get list information of paragraph</span></span>


    <span data-ttu-id="755e1-118">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getParagraphInfo()
  fullName: getParagraphInfo()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type:
      - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
      description: ''
- uid: onenote.OneNote.Paragraph.id
  summary: >-
    <span data-ttu-id="755e1-p103">Obtiene el id. del objeto Paragraph. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p103">Gets the ID of the Paragraph object. Read-only.</span></span>


    <span data-ttu-id="755e1-121">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Paragraph.image
  summary: >-
    <span data-ttu-id="755e1-p104">Obtiene el objeto Image de Paragraph. Produce una excepción si ParagraphType no es Image. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p104">Gets the Image object in the Paragraph. Throws an exception if ParagraphType is not Image. Read-only.</span></span>


    <span data-ttu-id="755e1-125">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: image
  fullName: image
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type:
      - OneNote.Image
- uid: onenote.OneNote.Paragraph.inkWords
  summary: >-
    <span data-ttu-id="755e1-p105">Obtiene la colección Ink de Paragraph. Produce una excepción si ParagraphType no es Ink. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p105">Gets the Ink collection in the Paragraph. Throws an exception if ParagraphType is not Ink. Read-only.</span></span>


    <span data-ttu-id="755e1-129">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: inkWords
  fullName: inkWords
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type:
      - onenote.OneNote.InkWordCollection
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
  summary: >-
    <span data-ttu-id="755e1-130">Inserta el contenido HTML especificado</span><span class="sxs-lookup"><span data-stu-id="755e1-130">Inserts the specified HTML content</span></span>


    <span data-ttu-id="755e1-131">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocation, html)
  fullName: insertHtmlAsSibling(insertLocation, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"755e1-132\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"755e1-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="755e1-133">La ubicación del nuevo contenido relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-133">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: html
      description: <span data-ttu-id="755e1-134">Una cadena HTML que describe la presentación visual del contenido.</span><span class="sxs-lookup"><span data-stu-id="755e1-134">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="755e1-135">Consulte el [HTML compatible](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) para la API de JavaScript de los complementos de OneNote.</span><span class="sxs-lookup"><span data-stu-id="755e1-135">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  summary: >-
    <span data-ttu-id="755e1-136">Inserta el contenido HTML especificado</span><span class="sxs-lookup"><span data-stu-id="755e1-136">Inserts the specified HTML content</span></span>


    <span data-ttu-id="755e1-137">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocationString, html)
  fullName: insertHtmlAsSibling(insertLocationString, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="755e1-138">La ubicación del nuevo contenido relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-138">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: html
      description: <span data-ttu-id="755e1-139">Una cadena HTML que describe la presentación visual del contenido.</span><span class="sxs-lookup"><span data-stu-id="755e1-139">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="755e1-140">Consulte el [HTML compatible](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) para la API de JavaScript de los complementos de OneNote.</span><span class="sxs-lookup"><span data-stu-id="755e1-140">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertImageAsSibling
  summary: >-
    <span data-ttu-id="755e1-141">Inserta la imagen en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="755e1-141">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="755e1-142">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - OneNote.Image
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"755e1-143\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"755e1-143\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="755e1-144">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-144">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: base64EncodedImage
      description: <span data-ttu-id="755e1-145">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="755e1-145">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="755e1-p108">Opcional. Ancho en la unidad de puntos. El valor predeterminado es null, que respeta el ancho de la imagen.</span><span class="sxs-lookup"><span data-stu-id="755e1-p108">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="755e1-p109">Opcional. Alto en la unidad de puntos. El valor predeterminado es null, que respeta el alto de la imagen.</span><span class="sxs-lookup"><span data-stu-id="755e1-p109">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertImageAsSibling_1
  summary: >-
    <span data-ttu-id="755e1-152">Inserta la imagen en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="755e1-152">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="755e1-153">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-153">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - OneNote.Image
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="755e1-154">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-154">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: <span data-ttu-id="755e1-155">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="755e1-155">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="755e1-p110">Opcional. Ancho en la unidad de puntos. El valor predeterminado es null, que respeta el ancho de la imagen.</span><span class="sxs-lookup"><span data-stu-id="755e1-p110">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="755e1-p111">Opcional. Alto en la unidad de puntos. El valor predeterminado es null, que respeta el alto de la imagen.</span><span class="sxs-lookup"><span data-stu-id="755e1-p111">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
  summary: >-
    <span data-ttu-id="755e1-162">Inserta el texto del párrafo en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="755e1-162">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="755e1-163">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-163">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocation, paragraphText)
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"755e1-164\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"755e1-164\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="755e1-165">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-165">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: paragraphText
      description: <span data-ttu-id="755e1-166">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="755e1-166">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  summary: >-
    <span data-ttu-id="755e1-167">Inserta el texto del párrafo en la posición de inserción especificada.</span><span class="sxs-lookup"><span data-stu-id="755e1-167">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="755e1-168">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-168">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocationString, paragraphText)
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="755e1-169">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-169">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: paragraphText
      description: <span data-ttu-id="755e1-170">Cadena HTML que se anexará.</span><span class="sxs-lookup"><span data-stu-id="755e1-170">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertTableAsSibling
  summary: >-
    <span data-ttu-id="755e1-171">Agrega una tabla con el número especificado de filas y columnas antes o después del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-171">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="755e1-172">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="755e1-173">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-173">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: rowCount
      description: <span data-ttu-id="755e1-174">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="755e1-174">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="755e1-175">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="755e1-175">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="755e1-176">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="755e1-176">Optional 2D array.</span></span> <span data-ttu-id="755e1-177">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="755e1-177">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.insertTableAsSibling_1
  summary: >-
    <span data-ttu-id="755e1-178">Agrega una tabla con el número especificado de filas y columnas antes o después del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-178">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="755e1-179">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-179">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="755e1-180">La ubicación de la tabla relativa a Paragraph actual.</span><span class="sxs-lookup"><span data-stu-id="755e1-180">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: rowCount
      description: <span data-ttu-id="755e1-181">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="755e1-181">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="755e1-182">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="755e1-182">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="755e1-183">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="755e1-183">Optional 2D array.</span></span> <span data-ttu-id="755e1-184">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="755e1-184">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.load
  summary: <span data-ttu-id="755e1-185">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="755e1-185">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="755e1-186">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="755e1-186">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="755e1-187">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="755e1-187">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="755e1-188">`load(option?: string | string[]): OneNote.Paragraph`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="755e1-188">`load(option?: string | string[]): OneNote.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="755e1-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="755e1-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="755e1-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="755e1-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="755e1-191">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="755e1-191">It is similar to the preceding signature.</span></span> <span data-ttu-id="755e1-192">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="755e1-192">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="755e1-193">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="755e1-193">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="755e1-194">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="755e1-194">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - onenote.OneNote.Interfaces.ParagraphLoadOptions
- uid: onenote.OneNote.Paragraph.load_1
  summary: <span data-ttu-id="755e1-195">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="755e1-195">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="755e1-196">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="755e1-196">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"755e1-197\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"755e1-197\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="755e1-198">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="755e1-198">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Paragraph.load_2
  summary: <span data-ttu-id="755e1-199">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="755e1-199">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="755e1-200">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="755e1-200">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="755e1-201">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="755e1-201">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Paragraph.outline
  summary: >-
    <span data-ttu-id="755e1-p118">Obtiene el objeto Outline que contiene Paragraph. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p118">Gets the Outline object that contains the Paragraph. Read-only.</span></span>


    <span data-ttu-id="755e1-204">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-204">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: outline
  fullName: outline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
- uid: onenote.OneNote.Paragraph.paragraphs
  summary: >-
    <span data-ttu-id="755e1-205">La colección de párrafos en este párrafo.</span><span class="sxs-lookup"><span data-stu-id="755e1-205">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="755e1-206">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="755e1-206">Read only</span></span>


    <span data-ttu-id="755e1-207">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-207">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Paragraph.parentParagraph
  summary: >-
    <span data-ttu-id="755e1-p120">Obtiene el objeto Paragraph principal. Se produce si un párrafo primario no existe. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p120">Gets the parent paragraph object. Throws if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="755e1-211">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-211">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraph
  fullName: parentParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentParagraphOrNull
  summary: >-
    <span data-ttu-id="755e1-p121">Obtiene el objeto Paragraph principal. Devuelve NULL si un párrafo principal no existe. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p121">Gets the parent paragraph object. Returns null if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="755e1-215">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-215">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraphOrNull
  fullName: parentParagraphOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="755e1-p122">Obtiene el objeto TableCell que contiene Paragraph, si existe alguno. Si el principal no es TableCell, produce ItemNotFound. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p122">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, throws ItemNotFound. Read-only.</span></span>


    <span data-ttu-id="755e1-219">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-219">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.parentTableCellOrNull
  summary: >-
    <span data-ttu-id="755e1-p123">Obtiene el objeto TableCell que contiene Paragraph, si existe alguno. Si el principal no es TableCell, devuelve NULL. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p123">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, returns null. Read-only.</span></span>


    <span data-ttu-id="755e1-223">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-223">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNull
  fullName: parentTableCellOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.richText
  summary: >-
    <span data-ttu-id="755e1-224">Obtiene el objeto RichText de Paragraph.</span><span class="sxs-lookup"><span data-stu-id="755e1-224">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="755e1-225">Produce una excepción si ParagraphType no es RichText.</span><span class="sxs-lookup"><span data-stu-id="755e1-225">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="755e1-226">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="755e1-226">Read-only</span></span>


    <span data-ttu-id="755e1-227">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-227">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: richText
  fullName: richText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
- uid: onenote.OneNote.Paragraph.set
  summary: <span data-ttu-id="755e1-228">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="755e1-228">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="755e1-229">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="755e1-229">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="755e1-230">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="755e1-230">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Paragraph): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="755e1-231">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="755e1-231">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ParagraphUpdateData
    - id: options
      description: <span data-ttu-id="755e1-232">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-232">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Paragraph.set_1
  summary: <span data-ttu-id="755e1-233">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="755e1-233">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.table
  summary: >-
    <span data-ttu-id="755e1-p126">Obtiene el objeto Table de Paragraph. Produce una excepción si ParagraphType no es Table. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-p126">Gets the Table object in the Paragraph. Throws an exception if ParagraphType is not Table. Read-only.</span></span>


    <span data-ttu-id="755e1-237">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-237">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: table
  fullName: table
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.Paragraph.toJSON
  summary: <span data-ttu-id="755e1-238">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="755e1-238">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="755e1-239">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto OneNote. Paragraph original es un objeto API `toJSON` , el método devuelve un objeto JavaScript sin formato ( `OneNote.Interfaces.ParagraphData` <!-- -->escrito como) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="755e1-239">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphData
      description: ''
- uid: onenote.OneNote.Paragraph.track
  summary: <span data-ttu-id="755e1-240">Realizar un seguimiento del objeto para el ajuste automático en función de los cambios circundantes del documento.</span><span class="sxs-lookup"><span data-stu-id="755e1-240">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="755e1-241">Esta llamada es una abreviatura de context. trackedObjects. Add (thisObject).</span><span class="sxs-lookup"><span data-stu-id="755e1-241">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="755e1-242">Si usa este objeto en todas las llamadas a ". Sync" y fuera de la ejecución secuencial de un lote ". Run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, es necesario que haya agregado el objeto al objeto con seguimiento colección cuando se creó el objeto por primera vez.</span><span class="sxs-lookup"><span data-stu-id="755e1-242">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Paragraph.type
  summary: >-
    <span data-ttu-id="755e1-243">Obtiene el tipo del objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="755e1-243">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="755e1-244">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="755e1-244">Read-only.</span></span>


    <span data-ttu-id="755e1-245">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="755e1-245">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type:
      - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
- uid: onenote.OneNote.Paragraph.untrack
  summary: <span data-ttu-id="755e1-246">Libere la memoria asociada a este objeto, si se ha realizado previamente un seguimiento.</span><span class="sxs-lookup"><span data-stu-id="755e1-246">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="755e1-247">Esta llamada es una forma abreviada de context. trackedObjects. Remove (thisObject).</span><span class="sxs-lookup"><span data-stu-id="755e1-247">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="755e1-248">La aplicación host reduce la velocidad de los objetos que se controlan, por lo que no olvide liberar los objetos que agregue, una vez que haya terminado de usarlos.</span><span class="sxs-lookup"><span data-stu-id="755e1-248">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="755e1-249">Tendrá que llamar a "context. Sync ()" antes de que la liberación de memoria surta efecto.</span><span class="sxs-lookup"><span data-stu-id="755e1-249">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
