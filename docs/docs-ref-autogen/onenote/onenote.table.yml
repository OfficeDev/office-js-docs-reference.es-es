### YamlMime:UniversalReference
ms.openlocfilehash: 7cbc1926f0589f43f253d19e1f0c058236d283e1
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 01/23/2019
ms.locfileid: "29384534"
items:
- uid: onenote.OneNote.Table
  summary: >-
    <span data-ttu-id="e7044-101">Representa una tabla en una página de OneNote.</span><span class="sxs-lookup"><span data-stu-id="e7044-101">Represents a table in a OneNote page.</span></span>


    <span data-ttu-id="e7044-102">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Table
  fullName: OneNote.Table
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Table.appendColumn
  - onenote.OneNote.Table.appendRow
  - onenote.OneNote.Table.borderVisible
  - onenote.OneNote.Table.clear
  - onenote.OneNote.Table.columnCount
  - onenote.OneNote.Table.context
  - onenote.OneNote.Table.getCell
  - onenote.OneNote.Table.id
  - onenote.OneNote.Table.insertColumn
  - onenote.OneNote.Table.insertRow
  - onenote.OneNote.Table.load
  - onenote.OneNote.Table.paragraph
  - onenote.OneNote.Table.rowCount
  - onenote.OneNote.Table.rows
  - onenote.OneNote.Table.setShadingColor
  - onenote.OneNote.Table.toJSON
  - onenote.OneNote.Table.track
  - onenote.OneNote.Table.untrack
- uid: onenote.OneNote.Table.appendColumn
  summary: >-
    <span data-ttu-id="e7044-p101">Agrega una columna al final de la tabla. Los valores, si se especifican, se establecen en la nueva columna. De lo contrario, la columna está vacía.</span><span class="sxs-lookup"><span data-stu-id="e7044-p101">Adds a column to the end of the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="e7044-106">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendColumn(values)
  fullName: appendColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendColumn(values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7044-107\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-107\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.appendColumn([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="e7044-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="e7044-108">Optional.</span></span> <span data-ttu-id="e7044-109">Cadenas para insertar en la nueva columna, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="e7044-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="e7044-110">No debe tener más valores que filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-110">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.appendRow
  summary: >-
    <span data-ttu-id="e7044-p103">Agrega una fila al final de la tabla. Los valores, si se especifican, se establecen en la nueva fila. De lo contrario, la fila está vacía.</span><span class="sxs-lookup"><span data-stu-id="e7044-p103">Adds a row to the end of the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="e7044-114">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendRow(values)
  fullName: appendRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendRow(values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7044-115\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.appendRow([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="e7044-116">Opcional.</span><span class="sxs-lookup"><span data-stu-id="e7044-116">Optional.</span></span> <span data-ttu-id="e7044-117">Cadenas para insertar en la nueva fila, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="e7044-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="e7044-118">No debe tener más valores que columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-118">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.borderVisible
  summary: >-
    <span data-ttu-id="e7044-p105">Obtiene o establece si los bordes están visibles o no. True si son visibles, false si están ocultos.</span><span class="sxs-lookup"><span data-stu-id="e7044-p105">Gets or sets whether the borders are visible or not. True if they are visible, false if they are hidden.</span></span>


    <span data-ttu-id="e7044-121">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: borderVisible
  fullName: borderVisible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'borderVisible: boolean;'
    return:
      type:
      - boolean
- uid: onenote.OneNote.Table.clear
  summary: >-
    <span data-ttu-id="e7044-122">Borra el contenido de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-122">Clears the contents of the table.</span></span>


    <span data-ttu-id="e7044-123">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.Table.columnCount
  summary: >-
    <span data-ttu-id="e7044-124">Obtiene el número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-124">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="e7044-125">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.context
  summary: <span data-ttu-id="e7044-126">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="e7044-126">The request context associated with the object.</span></span> <span data-ttu-id="e7044-127">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="e7044-127">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Table.getCell
  summary: >-
    <span data-ttu-id="e7044-128">Obtiene la celda de tabla de una fila y columna especificadas.</span><span class="sxs-lookup"><span data-stu-id="e7044-128">Gets the table cell at a specified row and column.</span></span>


    <span data-ttu-id="e7044-129">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getCell(rowIndex, cellIndex)
  fullName: getCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7044-130\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-130\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a cell in the second row and third column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowIndex
      description: <span data-ttu-id="e7044-131">Índice de la fila.</span><span class="sxs-lookup"><span data-stu-id="e7044-131">The index of the row.</span></span>
      type:
      - number
    - id: cellIndex
      description: <span data-ttu-id="e7044-132">Índice de la celda de la fila.</span><span class="sxs-lookup"><span data-stu-id="e7044-132">The index of the cell in the row.</span></span>
      type:
      - number
- uid: onenote.OneNote.Table.id
  summary: >-
    <span data-ttu-id="e7044-p107">Obtiene el identificador de la tabla. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e7044-p107">Gets the ID of the table. Read-only.</span></span>


    <span data-ttu-id="e7044-135">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Table.insertColumn
  summary: >-
    <span data-ttu-id="e7044-p108">Inserta una columna en el índice especificado de la tabla. Los valores, si se especifican, se establecen en la nueva columna. De lo contrario, la columna está vacía.</span><span class="sxs-lookup"><span data-stu-id="e7044-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="e7044-139">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertColumn(index, values)
  fullName: insertColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertColumn(index: number, values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7044-140\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-140\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a column at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.insertColumn(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="e7044-141">Índice donde se insertará la columna en la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-141">Index where the column will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="e7044-142">Opcional.</span><span class="sxs-lookup"><span data-stu-id="e7044-142">Optional.</span></span> <span data-ttu-id="e7044-143">Cadenas para insertar en la nueva columna, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="e7044-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="e7044-144">No debe tener más valores que filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-144">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.insertRow
  summary: >-
    <span data-ttu-id="e7044-p110">Inserta una fila en el índice especificado de la tabla. Los valores, si se especifican, se establecen en la nueva fila. De lo contrario, la fila está vacía.</span><span class="sxs-lookup"><span data-stu-id="e7044-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="e7044-148">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRow(index, values)
  fullName: insertRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7044-149\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-149\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a row at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.insertRow(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="e7044-150">Índice donde se insertará la fila en la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-150">Index where the row will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="e7044-151">Opcional.</span><span class="sxs-lookup"><span data-stu-id="e7044-151">Optional.</span></span> <span data-ttu-id="e7044-152">Cadenas para insertar en la nueva fila, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="e7044-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="e7044-153">No debe tener más valores que columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-153">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.load
  summary: <span data-ttu-id="e7044-154">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="e7044-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e7044-155">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e7044-155">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"e7044-156\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-156\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"e7044-157\">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-157\">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"e7044-158\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-158\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id=\"e7044-159\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-159\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"e7044-160\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-160\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"e7044-161\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-161\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"e7044-162\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-162\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"e7044-163\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e7044-163\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // For each table, log properties.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table);\n                return ctx.sync().then(function() {\n                    console.log(\"Table Id: \" + table.id);\n                    console.log(\"Row Count: \" + table.rowCount);\n                    console.log(\"Column Count: \" + table.columnCount);\n                    return ctx.sync();\n                });\n            }\n        }\n    });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, log its paragraph id.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table, \"paragraph/id, rows/id\");\n                return ctx.sync().then(function() {\n                    console.log(\"Paragraph Id: \" + table.paragraph.id);\n                    var rows = table.rows;\n                    \n                    // for each rows in the table, log row index and id.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="e7044-164">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="e7044-164">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Table.paragraph
  summary: >-
    <span data-ttu-id="e7044-p114">Obtiene el objeto Paragraph que contiene el objeto Table. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e7044-p114">Gets the Paragraph object that contains the Table object. Read-only.</span></span>


    <span data-ttu-id="e7044-167">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-167">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraph
  fullName: paragraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Table.rowCount
  summary: >-
    <span data-ttu-id="e7044-168">Obtiene el número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-168">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="e7044-169">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-169">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.rows
  summary: >-
    <span data-ttu-id="e7044-p115">Obtiene todas las filas de la tabla. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e7044-p115">Gets all of the table rows. Read-only.</span></span>


    <span data-ttu-id="e7044-172">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: OneNote.TableRowCollection;'
    return:
      type:
      - OneNote.TableRowCollection
- uid: onenote.OneNote.Table.setShadingColor
  summary: >-
    <span data-ttu-id="e7044-173">Establece el color de sombreado de todas las celdas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="e7044-173">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="e7044-174">El código de color que hay que establecer en las celdas.</span><span class="sxs-lookup"><span data-stu-id="e7044-174">The color code to set the cells to.</span></span>


    <span data-ttu-id="e7044-175">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7044-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.Table.toJSON
  summary: <span data-ttu-id="e7044-176">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e7044-176">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e7044-177">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de OneNote.Table es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `OneNote.Interfaces.TableData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="e7044-177">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableData;'
    return:
      type:
      - OneNote.Interfaces.TableData
      description: ''
- uid: onenote.OneNote.Table.track
  summary: <span data-ttu-id="e7044-178">Realizar un seguimiento del objeto para el ajuste automático en función de que lo rodea los cambios en el documento.</span><span class="sxs-lookup"><span data-stu-id="e7044-178">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="e7044-179">Esta llamada es una forma abreviada para context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="e7044-179">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="e7044-180">Si va a usar este objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto al objeto marca de revisión colección cuando el objeto se crea por primera vez.</span><span class="sxs-lookup"><span data-stu-id="e7044-180">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
- uid: onenote.OneNote.Table.untrack
  summary: <span data-ttu-id="e7044-181">La memoria asociada con este objeto, si lo se anteriormente hace el seguimiento de la versión.</span><span class="sxs-lookup"><span data-stu-id="e7044-181">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="e7044-182">Esta llamada es una abreviatura de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="e7044-182">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="e7044-183">Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="e7044-183">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="e7044-184">Debe llamar a "context.sync()" antes de la versión de memoria surta efecto.</span><span class="sxs-lookup"><span data-stu-id="e7044-184">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
