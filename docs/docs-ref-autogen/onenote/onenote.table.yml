### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Table
    summary: |-
      <span data-ttu-id="138fc-101">Representa una tabla en una página de OneNote.</span><span class="sxs-lookup"><span data-stu-id="138fc-101">Represents a table in a OneNote page.</span></span>

      <span data-ttu-id="138fc-102">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Table
    fullName: OneNote.Table
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.Table.appendColumn
      - onenote.OneNote.Table.appendRow
      - onenote.OneNote.Table.borderVisible
      - onenote.OneNote.Table.clear
      - onenote.OneNote.Table.columnCount
      - onenote.OneNote.Table.context
      - onenote.OneNote.Table.getCell
      - onenote.OneNote.Table.id
      - onenote.OneNote.Table.insertColumn
      - onenote.OneNote.Table.insertRow
      - onenote.OneNote.Table.load
      - onenote.OneNote.Table.load_1
      - onenote.OneNote.Table.load_2
      - onenote.OneNote.Table.paragraph
      - onenote.OneNote.Table.rowCount
      - onenote.OneNote.Table.rows
      - onenote.OneNote.Table.set
      - onenote.OneNote.Table.set_1
      - onenote.OneNote.Table.setShadingColor
      - onenote.OneNote.Table.toJSON
      - onenote.OneNote.Table.track
      - onenote.OneNote.Table.untrack
  - uid: onenote.OneNote.Table.appendColumn
    summary: |-
      <span data-ttu-id="138fc-103">Agrega una columna al final de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-103">Adds a column to the end of the table.</span></span> <span data-ttu-id="138fc-104">Los valores, si se especifican, se establecen en la nueva columna.</span><span class="sxs-lookup"><span data-stu-id="138fc-104">Values, if specified, are set in the new column.</span></span> <span data-ttu-id="138fc-105">De lo contrario, la columna está vacía.</span><span class="sxs-lookup"><span data-stu-id="138fc-105">Otherwise the column is empty.</span></span>

      <span data-ttu-id="138fc-106">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendColumn(values)
    fullName: appendColumn(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendColumn(values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="138fc-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="138fc-107">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.appendColumn(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="138fc-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="138fc-108">Optional.</span></span> <span data-ttu-id="138fc-109">Cadenas para insertar en la nueva columna, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="138fc-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="138fc-110">No debe tener más valores que filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-110">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.appendRow
    summary: |-
      <span data-ttu-id="138fc-111">Agrega una fila al final de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-111">Adds a row to the end of the table.</span></span> <span data-ttu-id="138fc-112">Los valores, si se especifican, se establecen en la nueva fila.</span><span class="sxs-lookup"><span data-stu-id="138fc-112">Values, if specified, are set in the new row.</span></span> <span data-ttu-id="138fc-113">De lo contrario, la fila está vacía.</span><span class="sxs-lookup"><span data-stu-id="138fc-113">Otherwise the row is empty.</span></span>

      <span data-ttu-id="138fc-114">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendRow(values)
    fullName: appendRow(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRow(values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="138fc-115">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="138fc-115">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.appendRow(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="138fc-116">Opcional.</span><span class="sxs-lookup"><span data-stu-id="138fc-116">Optional.</span></span> <span data-ttu-id="138fc-117">Cadenas para insertar en la nueva fila, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="138fc-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="138fc-118">No debe tener más valores que columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-118">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.borderVisible
    summary: |-
      <span data-ttu-id="138fc-119">Obtiene o establece si los bordes están visibles o no.</span><span class="sxs-lookup"><span data-stu-id="138fc-119">Gets or sets whether the borders are visible or not.</span></span> <span data-ttu-id="138fc-120">True si son visibles, false si están ocultos.</span><span class="sxs-lookup"><span data-stu-id="138fc-120">True if they are visible, false if they are hidden.</span></span>

      <span data-ttu-id="138fc-121">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: borderVisible
    fullName: borderVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderVisible: boolean;'
      return:
        type:
          - boolean
  - uid: onenote.OneNote.Table.clear
    summary: |-
      <span data-ttu-id="138fc-122">Borra el contenido de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-122">Clears the contents of the table.</span></span>

      <span data-ttu-id="138fc-123">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: onenote.OneNote.Table.columnCount
    summary: |-
      <span data-ttu-id="138fc-124">Obtiene el número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-124">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="138fc-125">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.Table.context
    summary: <span data-ttu-id="138fc-126">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="138fc-126">The request context associated with the object.</span></span> <span data-ttu-id="138fc-127">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="138fc-127">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.Table.getCell
    summary: |-
      <span data-ttu-id="138fc-128">Obtiene la celda de tabla de una fila y columna especificadas.</span><span class="sxs-lookup"><span data-stu-id="138fc-128">Gets the table cell at a specified row and column.</span></span>

      <span data-ttu-id="138fc-129">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
        description: |-


          #### <a name="examples"></a><span data-ttu-id="138fc-130">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="138fc-130">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get a cell in the second row and third column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowIndex
          description: <span data-ttu-id="138fc-131">Índice de la fila.</span><span class="sxs-lookup"><span data-stu-id="138fc-131">The index of the row.</span></span>
          type:
            - number
        - id: cellIndex
          description: <span data-ttu-id="138fc-132">Índice de la celda de la fila.</span><span class="sxs-lookup"><span data-stu-id="138fc-132">The index of the cell in the row.</span></span>
          type:
            - number
  - uid: onenote.OneNote.Table.id
    summary: |-
      <span data-ttu-id="138fc-133">Obtiene el identificador de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-133">Gets the ID of the table.</span></span> <span data-ttu-id="138fc-134">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="138fc-134">Read-only.</span></span>

      <span data-ttu-id="138fc-135">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Table.insertColumn
    summary: |-
      <span data-ttu-id="138fc-p108">Inserta una columna en el índice especificado de la tabla. Los valores, si se especifican, se establecen en la nueva columna. De lo contrario, la columna está vacía.</span><span class="sxs-lookup"><span data-stu-id="138fc-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>

      <span data-ttu-id="138fc-139">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertColumn(index, values)'
    fullName: 'insertColumn(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertColumn(index: number, values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="138fc-140">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="138fc-140">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a column at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.insertColumn(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="138fc-141">Índice donde se insertará la columna en la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-141">Index where the column will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="138fc-142">Opcional.</span><span class="sxs-lookup"><span data-stu-id="138fc-142">Optional.</span></span> <span data-ttu-id="138fc-143">Cadenas para insertar en la nueva columna, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="138fc-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="138fc-144">No debe tener más valores que filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-144">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.insertRow
    summary: |-
      <span data-ttu-id="138fc-p110">Inserta una fila en el índice especificado de la tabla. Los valores, si se especifican, se establecen en la nueva fila. De lo contrario, la fila está vacía.</span><span class="sxs-lookup"><span data-stu-id="138fc-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>

      <span data-ttu-id="138fc-148">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRow(index, values)'
    fullName: 'insertRow(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="138fc-149">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="138fc-149">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a row at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.insertRow(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="138fc-150">Índice donde se insertará la fila en la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-150">Index where the row will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="138fc-151">Opcional.</span><span class="sxs-lookup"><span data-stu-id="138fc-151">Optional.</span></span> <span data-ttu-id="138fc-152">Cadenas para insertar en la nueva fila, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="138fc-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="138fc-153">No debe tener más valores que columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-153">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.load
    summary: '<span data-ttu-id="138fc-154">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="138fc-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="138fc-155">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="138fc-155">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="138fc-156">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="138fc-156">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="138fc-157">`load(option?: string | string[]): OneNote.Table`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="138fc-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="138fc-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="138fc-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="138fc-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="138fc-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="138fc-160">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="138fc-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="138fc-161">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="138fc-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="138fc-162">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="138fc-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="138fc-163">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="138fc-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.TableLoadOptions
  - uid: onenote.OneNote.Table.load_1
    summary: <span data-ttu-id="138fc-164">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="138fc-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="138fc-165">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="138fc-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="138fc-166">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="138fc-166">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // For each table, log properties.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table);
                          return ctx.sync().then(function() {
                              console.log("Table Id: " + table.id);
                              console.log("Row Count: " + table.rowCount);
                              console.log("Column Count: " + table.columnCount);
                              return ctx.sync();
                          });
                      }
                  }
              });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, log its paragraph id.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table, "paragraph/id, rows/id");
                          return ctx.sync().then(function() {
                              console.log("Paragraph Id: " + table.paragraph.id);
                              var rows = table.rows;
                              
                              // for each rows in the table, log row index and id.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="138fc-167">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="138fc-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Table.load_2
    summary: <span data-ttu-id="138fc-168">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="138fc-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="138fc-169">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="138fc-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="138fc-170">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="138fc-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Table.paragraph
    summary: |-
      <span data-ttu-id="138fc-171">Obtiene el objeto Paragraph que contiene el objeto Table.</span><span class="sxs-lookup"><span data-stu-id="138fc-171">Gets the Paragraph object that contains the Table object.</span></span> <span data-ttu-id="138fc-172">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="138fc-172">Read-only.</span></span>

      <span data-ttu-id="138fc-173">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Table.rowCount
    summary: |-
      <span data-ttu-id="138fc-174">Obtiene el número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-174">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="138fc-175">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.Table.rows
    summary: |-
      <span data-ttu-id="138fc-176">Obtiene todas las filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-176">Gets all of the table rows.</span></span> <span data-ttu-id="138fc-177">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="138fc-177">Read-only.</span></span>

      <span data-ttu-id="138fc-178">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: OneNote.TableRowCollection;'
      return:
        type:
          - OneNote.TableRowCollection
  - uid: onenote.OneNote.Table.set
    summary: '<span data-ttu-id="138fc-179">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="138fc-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="138fc-180">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="138fc-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="138fc-181">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="138fc-181">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="138fc-182">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="138fc-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableUpdateData
        - id: options
          description: <span data-ttu-id="138fc-183">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="138fc-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: onenote.OneNote.Table.set_1
    summary: '<span data-ttu-id="138fc-184">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="138fc-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - OneNote.Table
  - uid: onenote.OneNote.Table.setShadingColor
    summary: |-
      <span data-ttu-id="138fc-185">Establece el color de sombreado de todas las celdas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="138fc-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="138fc-186">El código de color que hay que establecer en las celdas.</span><span class="sxs-lookup"><span data-stu-id="138fc-186">The color code to set the cells to.</span></span>

      <span data-ttu-id="138fc-187">\[[Conjunto de API: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="138fc-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: onenote.OneNote.Table.toJSON
    summary: '<span data-ttu-id="138fc-188">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="138fc-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="138fc-189">.</span><span class="sxs-lookup"><span data-stu-id="138fc-189"></span></span> <span data-ttu-id="138fc-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="138fc-190"></span></span><!-- --><span data-ttu-id="138fc-191">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto OneNote. Table original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`OneNote.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="138fc-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="138fc-192">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="138fc-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableData;'
      return:
        type:
          - OneNote.Interfaces.TableData
        description: ''
  - uid: onenote.OneNote.Table.track
    summary: '<span data-ttu-id="138fc-193">Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento.</span><span class="sxs-lookup"><span data-stu-id="138fc-193">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="138fc-194">Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="138fc-194">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="138fc-195">Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="138fc-195">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''
  - uid: onenote.OneNote.Table.untrack
    summary: '<span data-ttu-id="138fc-196">Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente.</span><span class="sxs-lookup"><span data-stu-id="138fc-196">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="138fc-197">Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="138fc-197">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="138fc-198">Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="138fc-198">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="138fc-199">Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.</span><span class="sxs-lookup"><span data-stu-id="138fc-199">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''