### YamlMime:UniversalReference
ms.openlocfilehash: 45ab76a46f0cf045af09e9813833f571ae5ef515
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979515"
items:
- uid: onenote.OneNote.TableRow
  summary: >-
    <span data-ttu-id="800be-101">Representa una fila de una tabla.</span><span class="sxs-lookup"><span data-stu-id="800be-101">Represents a row in a table.</span></span>


    <span data-ttu-id="800be-102">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.TableRow
  fullName: OneNote.TableRow
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.TableRow.cellCount
  - onenote.OneNote.TableRow.cells
  - onenote.OneNote.TableRow.clear
  - onenote.OneNote.TableRow.context
  - onenote.OneNote.TableRow.id
  - onenote.OneNote.TableRow.insertRowAsSibling
  - onenote.OneNote.TableRow.insertRowAsSibling_1
  - onenote.OneNote.TableRow.load
  - onenote.OneNote.TableRow.load_1
  - onenote.OneNote.TableRow.load_2
  - onenote.OneNote.TableRow.parentTable
  - onenote.OneNote.TableRow.rowIndex
  - onenote.OneNote.TableRow.setShadingColor
  - onenote.OneNote.TableRow.toJSON
  - onenote.OneNote.TableRow.track
  - onenote.OneNote.TableRow.untrack
- uid: onenote.OneNote.TableRow.cellCount
  summary: >-
    <span data-ttu-id="800be-p101">Obtiene el número de celdas de la fila. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="800be-p101">Gets the number of cells in the row. Read-only.</span></span>


    <span data-ttu-id="800be-105">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.TableRow.cells
  summary: >-
    <span data-ttu-id="800be-p102">Obtiene las celdas de la fila. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="800be-p102">Gets the cells in the row. Read-only.</span></span>


    <span data-ttu-id="800be-108">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: cells
  fullName: cells
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cells: OneNote.TableCellCollection;'
    return:
      type:
      - onenote.OneNote.TableCellCollection
- uid: onenote.OneNote.TableRow.clear
  summary: >-
    <span data-ttu-id="800be-109">Borra el contenido de la fila.</span><span class="sxs-lookup"><span data-stu-id="800be-109">Clears the contents of the row.</span></span>


    <span data-ttu-id="800be-110">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.TableRow.context
  summary: <span data-ttu-id="800be-111">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="800be-111">The request context associated with the object.</span></span> <span data-ttu-id="800be-112">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="800be-112">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.TableRow.id
  summary: >-
    <span data-ttu-id="800be-p104">Obtiene el identificador de la fila. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="800be-p104">Gets the ID of the row. Read-only.</span></span>


    <span data-ttu-id="800be-115">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.TableRow.insertRowAsSibling
  summary: >-
    <span data-ttu-id="800be-116">Inserta una fila antes o después de la fila actual.</span><span class="sxs-lookup"><span data-stu-id="800be-116">Inserts a row before or after the current row.</span></span>


    <span data-ttu-id="800be-117">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRowAsSibling(insertLocation, values)
  fullName: insertRowAsSibling(insertLocation, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRowAsSibling(insertLocation: OneNote.InsertLocation, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"800be-118\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"800be-118\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load table.rows.\n                ctx.load(table, \"rows\");\n                \n                // Run the queued commands\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    rows.items[1].insertRowAsSibling(\"Before\", [\"cell0\", \"cell1\"]);\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="800be-119">Dónde se deben insertar las filas nuevas con respecto a la fila actual.</span><span class="sxs-lookup"><span data-stu-id="800be-119">Where the new rows should be inserted relative to the current row.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: values
      description: <span data-ttu-id="800be-120">Cadenas para insertar en la nueva fila, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="800be-120">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="800be-121">No debe tener más celdas que la fila actual.</span><span class="sxs-lookup"><span data-stu-id="800be-121">Must not have more cells than in the current row.</span></span> <span data-ttu-id="800be-122">Opcional.</span><span class="sxs-lookup"><span data-stu-id="800be-122">Optional.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.TableRow.insertRowAsSibling_1
  summary: >-
    <span data-ttu-id="800be-123">Inserta una fila antes o después de la fila actual.</span><span class="sxs-lookup"><span data-stu-id="800be-123">Inserts a row before or after the current row.</span></span>


    <span data-ttu-id="800be-124">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-124">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRowAsSibling(insertLocationString, values)
  fullName: insertRowAsSibling(insertLocationString, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRowAsSibling(insertLocationString: "Before" | "After", values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="800be-125">Dónde se deben insertar las filas nuevas con respecto a la fila actual.</span><span class="sxs-lookup"><span data-stu-id="800be-125">Where the new rows should be inserted relative to the current row.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: values
      description: <span data-ttu-id="800be-126">Cadenas para insertar en la nueva fila, especificadas como una matriz.</span><span class="sxs-lookup"><span data-stu-id="800be-126">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="800be-127">No debe tener más celdas que la fila actual.</span><span class="sxs-lookup"><span data-stu-id="800be-127">Must not have more cells than in the current row.</span></span> <span data-ttu-id="800be-128">Opcional.</span><span class="sxs-lookup"><span data-stu-id="800be-128">Optional.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.TableRow.load
  summary: <span data-ttu-id="800be-129">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="800be-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="800be-130">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="800be-130">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="800be-131">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="800be-131">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="800be-132">`load(option?: string | string[]): OneNote.TableRow`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="800be-132">`load(option?: string | string[]): OneNote.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="800be-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="800be-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="800be-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="800be-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="800be-135">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="800be-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="800be-136">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="800be-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="800be-137">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="800be-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="800be-138">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="800be-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.TableRowLoadOptions): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.TableRowLoadOptions
- uid: onenote.OneNote.TableRow.load_1
  summary: <span data-ttu-id="800be-139">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="800be-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="800be-140">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="800be-140">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"800be-141\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"800be-141\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load table.rows.\n                ctx.load(table, \"rows\");\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    \n                    // for each table row, log cell count and row index.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                        console.log(\"Row \" + i + \" Cell Count: \" + rows.items[i].cellCount);\n                        console.log(\"Row \" + i + \" Row Index: \" + rows.items[i].rowIndex);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load parentTable and cells of each row in the table.\n                ctx.load(table, \"rows/parentTable, rows/cells\");\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    \n                    // for each row, log parentTable and cells\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Parent Table Id: \" + rows.items[i].parentTable.id);\n                        var cells = rows.items[i].cells;\n                        for (var j = 0 ; j < cells.items.length; j++) {\n                            console.log(\"Row \" + i + \" Cell \" + j + \" Id: \" + cells.items[j].id);\n                        }\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="800be-142">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="800be-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.TableRow.load_2
  summary: <span data-ttu-id="800be-143">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="800be-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="800be-144">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="800be-144">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="800be-145">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="800be-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.TableRow.parentTable
  summary: >-
    <span data-ttu-id="800be-p111">Obtiene la tabla primaria. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="800be-p111">Gets the parent table. Read-only.</span></span>


    <span data-ttu-id="800be-148">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.TableRow.rowIndex
  summary: >-
    <span data-ttu-id="800be-p112">Obtiene el índice de la fila en la tabla primaria. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="800be-p112">Gets the index of the row in its parent table. Read-only.</span></span>


    <span data-ttu-id="800be-151">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-151">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowIndex
  fullName: rowIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.TableRow.setShadingColor
  summary: >-
    <span data-ttu-id="800be-152">Establece el color de sombreado de todas las celdas de la fila.</span><span class="sxs-lookup"><span data-stu-id="800be-152">Sets the shading color of all cells in the row.</span></span> <span data-ttu-id="800be-153">El código de color que hay que establecer en las celdas.</span><span class="sxs-lookup"><span data-stu-id="800be-153">The color code to set the cells to.</span></span>


    <span data-ttu-id="800be-154">\[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="800be-154">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor(colorCode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.TableRow.toJSON
  summary: <span data-ttu-id="800be-155">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="800be-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="800be-156">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de OneNote.TableRow es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `OneNote.Interfaces.TableRowData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="800be-156">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableRowData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableRowData;'
    return:
      type:
      - OneNote.Interfaces.TableRowData
      description: ''
- uid: onenote.OneNote.TableRow.track
  summary: <span data-ttu-id="800be-157">Realizar un seguimiento del objeto para el ajuste automático en función de que lo rodea los cambios en el documento.</span><span class="sxs-lookup"><span data-stu-id="800be-157">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="800be-158">Esta llamada es una forma abreviada para context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="800be-158">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="800be-159">Si va a usar este objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto al objeto marca de revisión colección cuando el objeto se crea por primera vez.</span><span class="sxs-lookup"><span data-stu-id="800be-159">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
- uid: onenote.OneNote.TableRow.untrack
  summary: <span data-ttu-id="800be-160">La memoria asociada con este objeto, si lo se anteriormente hace el seguimiento de la versión.</span><span class="sxs-lookup"><span data-stu-id="800be-160">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="800be-161">Esta llamada es una abreviatura de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="800be-161">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="800be-162">Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="800be-162">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="800be-163">Debe llamar a "context.sync()" antes de la versión de memoria surta efecto.</span><span class="sxs-lookup"><span data-stu-id="800be-163">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
