### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartLegend:class'
    summary: |-
      <span data-ttu-id="eba9e-101">Representa la leyenda de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="eba9e-101">Represents the legend in a chart.</span></span>

      <span data-ttu-id="eba9e-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eba9e-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartLegend
    fullName: Excel.ChartLegend
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartLegend#context:member'
      - 'excel!Excel.ChartLegend#format:member'
      - 'excel!Excel.ChartLegend#load:member(1)'
      - 'excel!Excel.ChartLegend#load:member(2)'
      - 'excel!Excel.ChartLegend#load:member(3)'
      - 'excel!Excel.ChartLegend#overlay:member'
      - 'excel!Excel.ChartLegend#position:member'
      - 'excel!Excel.ChartLegend#set:member(1)'
      - 'excel!Excel.ChartLegend#set:member(2)'
      - 'excel!Excel.ChartLegend#toJSON:member(1)'
      - 'excel!Excel.ChartLegend#visible:member'
  - uid: 'excel!Excel.ChartLegend#context:member'
    summary: <span data-ttu-id="eba9e-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="eba9e-103">The request context associated with the object.</span></span> <span data-ttu-id="eba9e-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="eba9e-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartLegend#format:member'
    summary: |-
      <span data-ttu-id="eba9e-105">Representa el formato de una leyenda del gráfico, que incluye el formato de relleno y de fuente.</span><span class="sxs-lookup"><span data-stu-id="eba9e-105">Represents the formatting of a chart legend, which includes fill and font formatting.</span></span> <span data-ttu-id="eba9e-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eba9e-106">Read-only.</span></span>

      <span data-ttu-id="eba9e-107">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eba9e-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartLegendFormat;'
      return:
        type:
          - 'excel!Excel.ChartLegendFormat:class'
  - uid: 'excel!Excel.ChartLegend#load:member(1)'
    summary: <span data-ttu-id="eba9e-108">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="eba9e-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eba9e-109">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="eba9e-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartLegendLoadOptions): Excel.ChartLegend;'
      return:
        type:
          - 'excel!Excel.ChartLegend:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="eba9e-110">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="eba9e-110">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartLegendLoadOptions:interface'
  - uid: 'excel!Excel.ChartLegend#load:member(2)'
    summary: <span data-ttu-id="eba9e-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="eba9e-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eba9e-112">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="eba9e-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartLegend;'
      return:
        type:
          - 'excel!Excel.ChartLegend:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="eba9e-113">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="eba9e-113">Examples</span></span>

          ```javascript
          // Get the position of Chart Legend from Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var legend = chart.legend;
              legend.load('position');
              return ctx.sync().then(function() {
                      console.log(legend.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set to show legend of Chart1 and make it on top of the chart.
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.legend.visible = true;
              chart.legend.position = "top"; 
              chart.legend.overlay = false; 
              return ctx.sync().then(function() {
                      console.log("Legend Shown ");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="eba9e-114">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="eba9e-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartLegend#load:member(3)'
    summary: <span data-ttu-id="eba9e-115">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="eba9e-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eba9e-116">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="eba9e-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartLegend;
      return:
        type:
          - 'excel!Excel.ChartLegend:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="eba9e-117">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="eba9e-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartLegend#overlay:member'
    summary: |-
      <span data-ttu-id="eba9e-118">Valor booleano que indica si la leyenda del gráfico debe superponerse al cuerpo principal del gráfico.</span><span class="sxs-lookup"><span data-stu-id="eba9e-118">Boolean value for whether the chart legend should overlap with the main body of the chart.</span></span>

      <span data-ttu-id="eba9e-119">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eba9e-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: overlay
    fullName: overlay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlay: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartLegend#position:member'
    summary: |-
      <span data-ttu-id="eba9e-120">Representa la posición de la leyenda del gráfico.</span><span class="sxs-lookup"><span data-stu-id="eba9e-120">Represents the position of the legend on the chart.</span></span> <span data-ttu-id="eba9e-121">Consulte Excel. ChartLegendPosition para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="eba9e-121">See Excel.ChartLegendPosition for details.</span></span>

      <span data-ttu-id="eba9e-122">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eba9e-122">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: Excel.ChartLegendPosition | "Invalid" | "Top" | "Bottom" | "Left" | "Right" | "Corner" | "Custom";'
      return:
        type:
          - 'excel!Excel.ChartLegend#position~0:complex'
  - uid: 'excel!Excel.ChartLegend#set:member(1)'
    summary: '<span data-ttu-id="eba9e-123">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="eba9e-123">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="eba9e-124">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="eba9e-124">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="eba9e-125">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="eba9e-125">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartLegend): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartLegendUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="eba9e-126">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="eba9e-126">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartLegendUpdateData:interface'
        - id: options
          description: <span data-ttu-id="eba9e-127">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eba9e-127">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartLegend#set:member(2)'
    summary: '<span data-ttu-id="eba9e-128">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="eba9e-128">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartLegend): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartLegend:class'
  - uid: 'excel!Excel.ChartLegend#toJSON:member(1)'
    summary: '<span data-ttu-id="eba9e-129">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="eba9e-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="eba9e-130">.</span><span class="sxs-lookup"><span data-stu-id="eba9e-130"></span></span> <span data-ttu-id="eba9e-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="eba9e-131"></span></span><!-- --><span data-ttu-id="eba9e-132">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. ChartLegend original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ChartLegendData`</span><span class="sxs-lookup"><span data-stu-id="eba9e-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartLegend object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLegendData`</span></span><!-- --><span data-ttu-id="eba9e-133">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="eba9e-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartLegendData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartLegendData:interface'
        description: ''
  - uid: 'excel!Excel.ChartLegend#visible:member'
    summary: |-
      <span data-ttu-id="eba9e-134">Un valor booleano que representa la visibilidad de un objeto ChartLegend.</span><span class="sxs-lookup"><span data-stu-id="eba9e-134">A boolean value the represents the visibility of a ChartLegend object.</span></span>

      <span data-ttu-id="eba9e-135">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eba9e-135">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartLegendFormat:class'
    name: Excel.ChartLegendFormat
  - uid: 'excel!Excel.ChartLegend:class'
    name: Excel.ChartLegend
  - uid: 'excel!Excel.Interfaces.ChartLegendLoadOptions:interface'
    name: Excel.Interfaces.ChartLegendLoadOptions
  - uid: 'excel!Excel.ChartLegend#position~0:complex'
    name: Excel.ChartLegendPosition | "Invalid" | "Top" | "Bottom" | "Left" | "Right" | "Corner" | "Custom"
    fullName: Excel.ChartLegendPosition | "Invalid" | "Top" | "Bottom" | "Left" | "Right" | "Corner" | "Custom"
    spec.typeScript:
      - uid: 'excel!Excel.ChartLegendPosition:enum'
        name: Excel.ChartLegendPosition
        fullName: Excel.ChartLegendPosition
      - name: ' | "Invalid" | "Top" | "Bottom" | "Left" | "Right" | "Corner" | "Custom"'
        fullName: ' | "Invalid" | "Top" | "Bottom" | "Left" | "Right" | "Corner" | "Custom"'
  - uid: 'excel!Excel.Interfaces.ChartLegendUpdateData:interface'
    name: Interfaces.ChartLegendUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartLegendData:interface'
    name: Excel.Interfaces.ChartLegendData