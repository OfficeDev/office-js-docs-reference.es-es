### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetProtection:class'
    summary: |-
      Representa la protección de un objeto de hoja.

      \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.WorksheetProtection
    fullName: Excel.WorksheetProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetProtection#context:member'
      - 'excel!Excel.WorksheetProtection#load:member(1)'
      - 'excel!Excel.WorksheetProtection#load:member(2)'
      - 'excel!Excel.WorksheetProtection#load:member(3)'
      - 'excel!Excel.WorksheetProtection#options:member'
      - 'excel!Excel.WorksheetProtection#protect:member(1)'
      - 'excel!Excel.WorksheetProtection#protected:member'
      - 'excel!Excel.WorksheetProtection#toJSON:member(1)'
  - uid: 'excel!Excel.WorksheetProtection#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetProtection#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: options
          description: Proporciona opciones para las propiedades del objeto que se va a cargar.
          type:
            - 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetProtection#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorksheetProtection;
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.WorksheetProtection#options:member'
    summary: |-
      Especifica las opciones de protección de la hoja de cálculo.

      \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type:
          - 'excel!Excel.WorksheetProtectionOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#protect:member(1)'
    summary: |-
      Protege una hoja de cálculo. Se produce un error si la hoja de cálculo ya está protegida.

      \[[Conjunto de API: ExcelApi 1,2 para opciones; 1,7 para contraseña](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'protect(options, password)'
    fullName: 'protect(options, password)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect();
              }
          });
          ```
          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect(null, password);
              }
          });
          ```
      parameters:
        - id: options
          description: Opcional. Opciones de protección de la hoja.
          type:
            - 'excel!Excel.WorksheetProtectionOptions:interface'
        - id: password
          description: Opcional. Contraseña de protección de hoja.
          type:
            - string
  - uid: 'excel!Excel.WorksheetProtection#protected:member'
    summary: |-
      Especifica si la hoja de cálculo está protegida.

      \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorksheetProtection#toJSON:member(1)'
    summary: 'Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el objeto Excel. WorksheetProtection original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.WorksheetProtectionData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetProtection:class'
    name: Excel.WorksheetProtection
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorksheetProtectionLoadOptions
  - uid: 'excel!Excel.WorksheetProtectionOptions:interface'
    name: Excel.WorksheetProtectionOptions
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
    name: Excel.Interfaces.WorksheetProtectionData