### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartAxis
    summary: |-
      Representa un solo eje de un gráfico.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartAxis
    fullName: Excel.ChartAxis
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartAxis.context
      - excel.Excel.ChartAxis.format
      - excel.Excel.ChartAxis.load
      - excel.Excel.ChartAxis.load_1
      - excel.Excel.ChartAxis.load_2
      - excel.Excel.ChartAxis.majorGridlines
      - excel.Excel.ChartAxis.majorUnit
      - excel.Excel.ChartAxis.maximum
      - excel.Excel.ChartAxis.minimum
      - excel.Excel.ChartAxis.minorGridlines
      - excel.Excel.ChartAxis.minorUnit
      - excel.Excel.ChartAxis.set
      - excel.Excel.ChartAxis.set_1
      - excel.Excel.ChartAxis.title
      - excel.Excel.ChartAxis.toJSON
  - uid: excel.Excel.ChartAxis.context
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartAxis.format
    summary: |-
      Representa el formato de un objeto de gráfico, que incluye el formato de línea y de fuente. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisFormat;'
      return:
        type:
          - excel.Excel.ChartAxisFormat
  - uid: excel.Excel.ChartAxis.load
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.ChartAxis`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.ChartAxis`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAxis`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartAxisLoadOptions): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartAxisLoadOptions
  - uid: excel.Excel.ChartAxis.load_1
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          // Get the maximum of Chart Axis from Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var axis = chart.axes.valueAxis;
              axis.load('maximum');
              return ctx.sync().then(function() {
                      console.log(axis.maximum);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set the maximum, minimum, majorunit, minorunit of valueaxis. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.maximum = 5;
              chart.axes.valueAxis.minimum = 0;
              chart.axes.valueAxis.majorUnit = 1;
              chart.axes.valueAxis.minorUnit = 0.2;
              return ctx.sync().then(function() {
                      console.log("Axis Settings Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartAxis.load_2
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartAxis.majorGridlines
    summary: |-
      Devuelve un objeto de línea de cuadrícula que representa las líneas de cuadrícula principales del eje especificado. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorGridlines
    fullName: majorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly majorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.majorUnit
    summary: |-
      Representa el intervalo entre dos marcas de graduación principales. Puede establecerse en un valor numérico o en una cadena vacía. El valor devuelto siempre es un número.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorUnit
    fullName: majorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.maximum
    summary: |-
      Representa el valor máximo del eje de valores. Puede establecerse en un valor numérico o en una cadena vacía (para valores de eje automáticos). El valor devuelto siempre es un número.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: maximum
    fullName: maximum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maximum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minimum
    summary: |-
      Representa el valor mínimo del eje de valores. Puede establecerse en un valor numérico o en una cadena vacía (para valores de eje automáticos). El valor devuelto siempre es un número.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minimum
    fullName: minimum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minimum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minorGridlines
    summary: |-
      Devuelve un objeto de línea de cuadrícula que representa las líneas de cuadrícula secundarias del eje especificado. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorGridlines
    fullName: minorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly minorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.minorUnit
    summary: |-
      Representa el intervalo entre dos marcas de graduación secundarias. Puede establecerse en un valor numérico o en una cadena vacía (para valores de eje automáticos). El valor devuelto siempre es un número.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorUnit
    fullName: minorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.set
    summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
    remarks: |-
      Este método tiene la siguiente firma adicional:

      `set(properties: Excel.ChartAxis): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
          type:
            - Interfaces.ChartAxisUpdateData
        - id: options
          description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartAxis.set_1
    summary: 'Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxis): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartAxis
  - uid: excel.Excel.ChartAxis.title
    summary: |-
      Representa el título del eje. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartAxisTitle;'
      return:
        type:
          - excel.Excel.ChartAxisTitle
  - uid: excel.Excel.ChartAxis.toJSON
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. ChartAxis original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ChartAxisData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartAxisData
        description: ''