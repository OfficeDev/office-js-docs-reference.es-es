### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Setting:class'
    summary: |-
      <span data-ttu-id="c00db-101">Setting representa un par clave-valor de una configuración que se conserva en el documento (por archivo y por complemento).</span><span class="sxs-lookup"><span data-stu-id="c00db-101">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id="c00db-102">Se pueden usar estos pares clave-valor personalizados para almacenar la información de estado o ciclo de vida que necesita el complemento de panel de tareas o de contenido.</span><span class="sxs-lookup"><span data-stu-id="c00db-102">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id="c00db-103">Tenga en cuenta que la configuración persiste en el documento y, por lo tanto, no es un lugar donde almacenar información confidencial o protegida, como la información del usuario y la contraseña.</span><span class="sxs-lookup"><span data-stu-id="c00db-103">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>

      <span data-ttu-id="c00db-104">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c00db-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Setting
    fullName: Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Setting#context:member'
      - 'excel!Excel.Setting#delete:member(1)'
      - 'excel!Excel.Setting#key:member'
      - 'excel!Excel.Setting#load:member(1)'
      - 'excel!Excel.Setting#load:member(2)'
      - 'excel!Excel.Setting#load:member(3)'
      - 'excel!Excel.Setting#set:member(1)'
      - 'excel!Excel.Setting#set:member(2)'
      - 'excel!Excel.Setting#toJSON:member(1)'
      - 'excel!Excel.Setting#value:member'
  - uid: 'excel!Excel.Setting#context:member'
    summary: <span data-ttu-id="c00db-105">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="c00db-105">The request context associated with the object.</span></span> <span data-ttu-id="c00db-106">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="c00db-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Setting#delete:member(1)'
    summary: |-
      <span data-ttu-id="c00db-107">Elimina la configuración.</span><span class="sxs-lookup"><span data-stu-id="c00db-107">Deletes the setting.</span></span>

      <span data-ttu-id="c00db-108">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c00db-108">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c00db-109">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="c00db-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Setting#key:member'
    summary: |-
      <span data-ttu-id="c00db-110">Devuelve una clave que representa el identificador de la configuración.</span><span class="sxs-lookup"><span data-stu-id="c00db-110">Returns the key that represents the id of the Setting.</span></span> <span data-ttu-id="c00db-111">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c00db-111">Read-only.</span></span>

      <span data-ttu-id="c00db-112">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c00db-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Setting#load:member(1)'
    summary: <span data-ttu-id="c00db-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c00db-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c00db-114">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c00db-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="c00db-115">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="c00db-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingLoadOptions:interface'
  - uid: 'excel!Excel.Setting#load:member(2)'
    summary: <span data-ttu-id="c00db-116">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c00db-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c00db-117">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c00db-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c00db-118">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="c00db-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Setting#load:member(3)'
    summary: <span data-ttu-id="c00db-119">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c00db-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c00db-120">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c00db-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Setting;
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c00db-121">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="c00db-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Setting#set:member(1)'
    summary: '<span data-ttu-id="c00db-122">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="c00db-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c00db-123">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="c00db-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c00db-124">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="c00db-124">This method has the following additional signature:</span></span>

      `set(properties: Excel.Setting): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="c00db-125">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c00db-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingUpdateData:interface'
        - id: options
          description: <span data-ttu-id="c00db-126">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c00db-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Setting#set:member(2)'
    summary: '<span data-ttu-id="c00db-127">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="c00db-127">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Setting): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Setting:class'
  - uid: 'excel!Excel.Setting#toJSON:member(1)'
    summary: '<span data-ttu-id="c00db-128">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c00db-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c00db-129">.</span><span class="sxs-lookup"><span data-stu-id="c00db-129"></span></span> <span data-ttu-id="c00db-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c00db-130"></span></span><!-- --><span data-ttu-id="c00db-131">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Setting original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.SettingData`</span><span class="sxs-lookup"><span data-stu-id="c00db-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`</span></span><!-- --><span data-ttu-id="c00db-132">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="c00db-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SettingData:interface'
        description: ''
  - uid: 'excel!Excel.Setting#value:member'
    summary: |-
      <span data-ttu-id="c00db-133">Representa el valor almacenado para esta configuración.</span><span class="sxs-lookup"><span data-stu-id="c00db-133">Represents the value stored for this setting.</span></span>

      <span data-ttu-id="c00db-134">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c00db-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Setting:class'
    name: Excel.Setting
  - uid: 'excel!Excel.Interfaces.SettingLoadOptions:interface'
    name: Excel.Interfaces.SettingLoadOptions
  - uid: 'excel!Excel.Interfaces.SettingUpdateData:interface'
    name: Interfaces.SettingUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.SettingData:interface'
    name: Excel.Interfaces.SettingData