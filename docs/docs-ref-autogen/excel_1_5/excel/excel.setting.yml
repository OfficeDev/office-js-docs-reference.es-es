### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Setting
    summary: |-
      <span data-ttu-id="d7cd3-101">Setting representa un par clave-valor de una configuración que se conserva en el documento (por archivo y por complemento).</span><span class="sxs-lookup"><span data-stu-id="d7cd3-101">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id="d7cd3-102">Se pueden usar estos pares clave-valor personalizados para almacenar la información de estado o ciclo de vida que necesita el complemento de panel de tareas o de contenido.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-102">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id="d7cd3-103">Tenga en cuenta que la configuración persiste en el documento y, por lo tanto, no es un lugar donde almacenar información confidencial o protegida, como la información del usuario y la contraseña.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-103">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>

      <span data-ttu-id="d7cd3-104">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7cd3-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Setting
    fullName: Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Setting.context
      - excel.Excel.Setting.delete
      - excel.Excel.Setting.key
      - excel.Excel.Setting.load
      - excel.Excel.Setting.load_1
      - excel.Excel.Setting.load_2
      - excel.Excel.Setting.set
      - excel.Excel.Setting.set_1
      - excel.Excel.Setting.toJSON
      - excel.Excel.Setting.value
  - uid: excel.Excel.Setting.context
    summary: <span data-ttu-id="d7cd3-105">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-105">The request context associated with the object.</span></span> <span data-ttu-id="d7cd3-106">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Setting.delete
    summary: |-
      <span data-ttu-id="d7cd3-107">Elimina la configuración.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-107">Deletes the setting.</span></span>

      <span data-ttu-id="d7cd3-108">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7cd3-108">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d7cd3-109">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d7cd3-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.Setting.key
    summary: |-
      <span data-ttu-id="d7cd3-110">Devuelve una clave que representa el identificador de la configuración.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-110">Returns the key that represents the id of the Setting.</span></span> <span data-ttu-id="d7cd3-111">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-111">Read-only.</span></span>

      <span data-ttu-id="d7cd3-112">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7cd3-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Setting.load
    summary: '<span data-ttu-id="d7cd3-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7cd3-114">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="d7cd3-114">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="d7cd3-115">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="d7cd3-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d7cd3-116">`load(option?: string | string[]): Excel.Setting`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-116">`load(option?: string | string[]): Excel.Setting` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d7cd3-117">`load(option?: { select?: string; expand?: string; }): Excel.Setting`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-117">`load(option?: { select?: string; expand?: string; }): Excel.Setting` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d7cd3-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting` - Only available on collection types.</span></span> <span data-ttu-id="d7cd3-119">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="d7cd3-120">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d7cd3-121">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d7cd3-122">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SettingLoadOptions
  - uid: excel.Excel.Setting.load_1
    summary: <span data-ttu-id="d7cd3-123">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7cd3-124">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d7cd3-125">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Setting.load_2
    summary: <span data-ttu-id="d7cd3-126">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7cd3-127">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d7cd3-128">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Setting.set
    summary: '<span data-ttu-id="d7cd3-129">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-129">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d7cd3-130">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-130">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d7cd3-131">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="d7cd3-131">This method has the following additional signature:</span></span>

      `set(properties: Excel.Setting): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d7cd3-132">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-132">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.SettingUpdateData
        - id: options
          description: <span data-ttu-id="d7cd3-133">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-133">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Setting.set_1
    summary: '<span data-ttu-id="d7cd3-134">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-134">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Setting): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Setting
  - uid: excel.Excel.Setting.toJSON
    summary: '<span data-ttu-id="d7cd3-135">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d7cd3-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d7cd3-136">.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-136"></span></span> <span data-ttu-id="d7cd3-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d7cd3-137"></span></span><!-- --><span data-ttu-id="d7cd3-138">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Setting original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.SettingData`</span><span class="sxs-lookup"><span data-stu-id="d7cd3-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`</span></span><!-- --><span data-ttu-id="d7cd3-139">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingData
        description: ''
  - uid: excel.Excel.Setting.value
    summary: |-
      <span data-ttu-id="d7cd3-140">Representa el valor almacenado para esta configuración.</span><span class="sxs-lookup"><span data-stu-id="d7cd3-140">Represents the value stored for this setting.</span></span>

      <span data-ttu-id="d7cd3-141">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7cd3-141">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any