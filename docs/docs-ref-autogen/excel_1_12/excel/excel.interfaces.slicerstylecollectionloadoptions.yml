### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions:interface'
    summary: |-
      Representa una colección de objetos SlicerStyle.

      \[[Conjunto de API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Interfaces.SlicerStyleCollectionLoadOptions
    fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions#$all:member'
      - 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions#name:member'
      - 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions#readOnly:member'
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions#$all:member'
    summary: 'La especificación `$all` de LoadOptions carga todas las propiedades escalares (por ejemplo: `Range.address`<!-- -->), pero no las propiedades de navegación (por ejemplo: `Range.format.fill.color`<!-- -->).'
    name: $all
    fullName: $all
    langs:
      - typeScript
    type: property
    syntax:
      content: '$all?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions#name:member'
    summary: |-
      Para cada elemento de la colección: obtiene el nombre de SlicerStyle.

      \[[Conjunto de API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions#readOnly:member'
    summary: |-
      Para cada elemento de la colección: especifica si el objeto SlicerStyle es de sólo lectura.

      \[[Conjunto de API: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readOnly?: boolean;'
      return:
        type:
          - boolean