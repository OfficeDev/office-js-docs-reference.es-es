### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeCollection
    summary: '<span data-ttu-id="a7c57-101">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7c57-101">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
    name: Excel.RangeCollection
    fullName: Excel.RangeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.RangeCollection.context
      - excel.Excel.RangeCollection.getCount
      - excel.Excel.RangeCollection.getItemAt
      - excel.Excel.RangeCollection.items
      - excel.Excel.RangeCollection.load
      - excel.Excel.RangeCollection.load_1
      - excel.Excel.RangeCollection.load_2
      - excel.Excel.RangeCollection.toJSON
  - uid: excel.Excel.RangeCollection.context
    summary: <span data-ttu-id="a7c57-102">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="a7c57-102">The request context associated with the object.</span></span> <span data-ttu-id="a7c57-103">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="a7c57-103">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.RangeCollection.getCount
    summary: |-
      <span data-ttu-id="a7c57-104">Devuelve el número de intervalos del RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="a7c57-104">Returns the number of ranges in the RangeCollection.</span></span>

      <span data-ttu-id="a7c57-105">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7c57-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.RangeCollection.getItemAt
    summary: |-
      <span data-ttu-id="a7c57-106">Devuelve el objeto de intervalo según su posición en el RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="a7c57-106">Returns the range object based on its position in the RangeCollection.</span></span>

      <span data-ttu-id="a7c57-107">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a7c57-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="a7c57-108">Valor de índice del objeto Range que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="a7c57-108">Index value of the range object to be retrieved.</span></span> <span data-ttu-id="a7c57-109">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="a7c57-109">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.RangeCollection.items
    summary: <span data-ttu-id="a7c57-110">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="a7c57-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Range[];'
      return:
        type:
          - 'Excel.Range[]'
  - uid: excel.Excel.RangeCollection.load
    summary: '<span data-ttu-id="a7c57-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a7c57-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a7c57-112">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="a7c57-112">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="a7c57-113">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="a7c57-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a7c57-114">`load(option?: string | string[]): Excel.RangeCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="a7c57-114">`load(option?: string | string[]): Excel.RangeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a7c57-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="a7c57-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a7c57-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="a7c57-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection` - Only available on collection types.</span></span> <span data-ttu-id="a7c57-117">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="a7c57-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="a7c57-118">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a7c57-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a7c57-119">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a7c57-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a7c57-120">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a7c57-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.RangeCollection.load_1
    summary: <span data-ttu-id="a7c57-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="a7c57-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a7c57-122">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a7c57-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a7c57-123">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="a7c57-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.RangeCollection.toJSON
    summary: '<span data-ttu-id="a7c57-124">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a7c57-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a7c57-125">.</span><span class="sxs-lookup"><span data-stu-id="a7c57-125"></span></span> <span data-ttu-id="a7c57-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a7c57-126"></span></span><!-- --><span data-ttu-id="a7c57-127">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.RangeCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.RangeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="a7c57-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeCollectionData`</span></span><!-- --><span data-ttu-id="a7c57-128">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a7c57-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeCollectionData
        description: ''