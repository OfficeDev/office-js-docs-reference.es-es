### YamlMime:UniversalReference
items:
  - uid: excel.Excel.DataBarConditionalFormat
    summary: |-
      Representa un tipo de barra de datos condicional de Excel.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.DataBarConditionalFormat
    fullName: Excel.DataBarConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.DataBarConditionalFormat.axisColor
      - excel.Excel.DataBarConditionalFormat.axisFormat
      - excel.Excel.DataBarConditionalFormat.barDirection
      - excel.Excel.DataBarConditionalFormat.context
      - excel.Excel.DataBarConditionalFormat.load
      - excel.Excel.DataBarConditionalFormat.load_1
      - excel.Excel.DataBarConditionalFormat.load_2
      - excel.Excel.DataBarConditionalFormat.lowerBoundRule
      - excel.Excel.DataBarConditionalFormat.negativeFormat
      - excel.Excel.DataBarConditionalFormat.positiveFormat
      - excel.Excel.DataBarConditionalFormat.set
      - excel.Excel.DataBarConditionalFormat.set_1
      - excel.Excel.DataBarConditionalFormat.showDataBarOnly
      - excel.Excel.DataBarConditionalFormat.toJSON
      - excel.Excel.DataBarConditionalFormat.upperBoundRule
  - uid: excel.Excel.DataBarConditionalFormat.axisColor
    summary: |-
      Código de color HTML que representa el color de la línea del eje, \#de la forma RRGGBB (por ejemplo, "FFA500") o como un color HTML con nombre (por ejemplo, "naranja"). "" (cadena vacía) si no hay ningún eje presente o establecido.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: axisColor
    fullName: axisColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisColor: string;'
      return:
        type:
          - string
  - uid: excel.Excel.DataBarConditionalFormat.axisFormat
    summary: |-
      Representación de cómo se determina el eje para una barra de datos de Excel.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: axisFormat
    fullName: axisFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisFormat: Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint";'
      return:
        type:
          - Excel.ConditionalDataBarAxisFormat | "Automatic" | "None" | "CellMidPoint"
  - uid: excel.Excel.DataBarConditionalFormat.barDirection
    summary: |-
      Representa la dirección en la que debe basarse el gráfico de la barra de datos.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: barDirection
    fullName: barDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'barDirection: Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - Excel.ConditionalDataBarDirection | "Context" | "LeftToRight" | "RightToLeft"
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.dataBar);
              conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;

              await context.sync();
          });
          ```
  - uid: excel.Excel.DataBarConditionalFormat.context
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.DataBarConditionalFormat.load
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.DataBarConditionalFormat`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.DataBarConditionalFormat`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataBarConditionalFormat`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.DataBarConditionalFormatLoadOptions): Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.DataBarConditionalFormatLoadOptions
  - uid: excel.Excel.DataBarConditionalFormat.load_1
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: excel.Excel.DataBarConditionalFormat.load_2
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.DataBarConditionalFormat.lowerBoundRule
    summary: |-
      Regla de lo que constituye el límite inferior (y cómo calcularlo, si es aplicable) de una barra de datos. El `ConditionalDataBarRule` objeto debe establecerse como un objeto JSON (usar `x.lowerBoundRule = {...}` en lugar de`x.lowerBoundRule.formula = ...`<!-- -->).

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: lowerBoundRule
    fullName: lowerBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lowerBoundRule: Excel.ConditionalDataBarRule;'
      return:
        type:
          - excel.Excel.ConditionalDataBarRule
  - uid: excel.Excel.DataBarConditionalFormat.negativeFormat
    summary: |-
      Representación de todos los valores a la izquierda del eje en una barra de datos de Excel. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: negativeFormat
    fullName: negativeFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly negativeFormat: Excel.ConditionalDataBarNegativeFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarNegativeFormat
  - uid: excel.Excel.DataBarConditionalFormat.positiveFormat
    summary: |-
      Representación de todos los valores a la derecha del eje en una barra de datos de Excel. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: positiveFormat
    fullName: positiveFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly positiveFormat: Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarPositiveFormat
  - uid: excel.Excel.DataBarConditionalFormat.set
    summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
    remarks: |-
      Este método tiene la siguiente firma adicional:

      `set(properties: Excel.DataBarConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DataBarConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
          type:
            - Interfaces.DataBarConditionalFormatUpdateData
        - id: options
          description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.DataBarConditionalFormat.set_1
    summary: 'Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.DataBarConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.DataBarConditionalFormat
  - uid: excel.Excel.DataBarConditionalFormat.showDataBarOnly
    summary: |-
      Si es true, oculta los valores de las celdas donde se aplica la barra de datos.

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showDataBarOnly
    fullName: showDataBarOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDataBarOnly: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.DataBarConditionalFormat.toJSON
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. DataBarConditionalFormat original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.DataBarConditionalFormatData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.DataBarConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.DataBarConditionalFormatData
        description: ''
  - uid: excel.Excel.DataBarConditionalFormat.upperBoundRule
    summary: |-
      Regla de lo que constituye el límite superior (y cómo calcularlo, si es aplicable) de una barra de datos. El `ConditionalDataBarRule` objeto debe establecerse como un objeto JSON (usar `x.upperBoundRule = {...}` en lugar de`x.upperBoundRule.formula = ...`<!-- -->).

      \[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: upperBoundRule
    fullName: upperBoundRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'upperBoundRule: Excel.ConditionalDataBarRule;'
      return:
        type:
          - excel.Excel.ConditionalDataBarRule