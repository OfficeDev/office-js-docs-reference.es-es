### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableCollection:class'
    summary: |-
      <span data-ttu-id="0f76a-101">Representa una colección de todas las tablas dinámicas que forman parte del libro o de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="0f76a-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>

      <span data-ttu-id="0f76a-102">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f76a-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableCollection#add:member(1)'
      - 'excel!Excel.PivotTableCollection#context:member'
      - 'excel!Excel.PivotTableCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableCollection#items:member'
      - 'excel!Excel.PivotTableCollection#load:member(1)'
      - 'excel!Excel.PivotTableCollection#load:member(2)'
      - 'excel!Excel.PivotTableCollection#load:member(3)'
      - 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
      - 'excel!Excel.PivotTableCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="0f76a-103">Agrega una tabla dinámica basada en los datos de origen especificados y la inserta en la celda superior izquierda del rango de destino.</span><span class="sxs-lookup"><span data-stu-id="0f76a-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>

      <span data-ttu-id="0f76a-104">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f76a-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: |-
          <span data-ttu-id="0f76a-105">Devuelve la tabla dinámica que se acaba de insertar.</span><span class="sxs-lookup"><span data-stu-id="0f76a-105">Returns the newly inserted PivotTable.</span></span>

          #### <a name="examples"></a><span data-ttu-id="0f76a-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="0f76a-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="0f76a-107">Nombre de la nueva tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0f76a-107">The name of the new PivotTable.</span></span>
          type:
            - string
        - id: source
          description: '<span data-ttu-id="0f76a-108">Los datos de origen de la nueva tabla dinámica, pueden ser un intervalo (o una dirección de cadena que incluya el nombre de la hoja de cálculo) o una tabla.</span><span class="sxs-lookup"><span data-stu-id="0f76a-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>'
          type:
            - 'excel!Excel.PivotTableCollection#add~0:complex'
        - id: destination
          description: <span data-ttu-id="0f76a-109">Celda de la esquina superior izquierda del rango de destino del informe de tabla dinámica (el rango de la hoja de cálculo en el que se colocará el informe de tabla dinámica resultante).</span><span class="sxs-lookup"><span data-stu-id="0f76a-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
          type:
            - 'excel!Excel.PivotTableCollection#add~1:complex'
  - uid: 'excel!Excel.PivotTableCollection#context:member'
    summary: <span data-ttu-id="0f76a-110">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="0f76a-110">The request context associated with the object.</span></span> <span data-ttu-id="0f76a-111">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="0f76a-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="0f76a-112">Obtiene el número de tablas dinámicas de una colección.</span><span class="sxs-lookup"><span data-stu-id="0f76a-112">Gets the number of pivot tables in the collection.</span></span>

      <span data-ttu-id="0f76a-113">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f76a-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="0f76a-114">Obtiene una tabla dinámica por nombre.</span><span class="sxs-lookup"><span data-stu-id="0f76a-114">Gets a PivotTable by name.</span></span>

      <span data-ttu-id="0f76a-115">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f76a-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="0f76a-116">Nombre de la tabla dinámica que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="0f76a-116">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="0f76a-117">Obtiene una tabla dinámica por nombre.</span><span class="sxs-lookup"><span data-stu-id="0f76a-117">Gets a PivotTable by name.</span></span> <span data-ttu-id="0f76a-118">Si no existe la tabla dinámica, devolverá un objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="0f76a-118">If the PivotTable does not exist, will return a null object.</span></span>

      <span data-ttu-id="0f76a-119">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f76a-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="0f76a-120">Nombre de la tabla dinámica que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="0f76a-120">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#items:member'
    summary: <span data-ttu-id="0f76a-121">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="0f76a-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(1)'
    summary: '<span data-ttu-id="0f76a-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="0f76a-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0f76a-123">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="0f76a-123">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="0f76a-124">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="0f76a-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0f76a-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="0f76a-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0f76a-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="0f76a-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0f76a-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="0f76a-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="0f76a-128">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="0f76a-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="0f76a-129">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0f76a-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0f76a-130">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0f76a-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0f76a-131">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="0f76a-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.PivotTableCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(2)'
    summary: <span data-ttu-id="0f76a-132">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="0f76a-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0f76a-133">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="0f76a-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0f76a-134">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="0f76a-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
    summary: |-
      <span data-ttu-id="0f76a-135">Actualiza todas las tablas dinámicas de la colección.</span><span class="sxs-lookup"><span data-stu-id="0f76a-135">Refreshes all the pivot tables in the collection.</span></span>

      <span data-ttu-id="0f76a-136">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f76a-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="0f76a-137">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0f76a-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0f76a-138">.</span><span class="sxs-lookup"><span data-stu-id="0f76a-138"></span></span> <span data-ttu-id="0f76a-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0f76a-139"></span></span><!-- --><span data-ttu-id="0f76a-140">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.PivotTableCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.PivotTableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="0f76a-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`</span></span><!-- --><span data-ttu-id="0f76a-141">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="0f76a-141">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableCollection#add~0:complex'
    name: Range | string | Table
    fullName: Excel.Range | string | Excel.Table
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string | '
        fullName: ' | string | '
      - uid: 'excel!Excel.Table:class'
        name: Table
        fullName: Excel.Table
  - uid: 'excel!Excel.PivotTableCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTableCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.PivotTableCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
    name: Excel.Interfaces.PivotTableCollectionData