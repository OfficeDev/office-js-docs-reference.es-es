### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    summary: |-
      <span data-ttu-id="eb125-101">Este objeto representa los atributos de fuente (estilo de fuente, color, etc.) de un objeto.</span><span class="sxs-lookup"><span data-stu-id="eb125-101">This object represents the font attributes (font style, color, etc.) for an object.</span></span>

      <span data-ttu-id="eb125-102">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeFont
    fullName: Excel.ConditionalRangeFont
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeFont#bold:member'
      - 'excel!Excel.ConditionalRangeFont#clear:member(1)'
      - 'excel!Excel.ConditionalRangeFont#color:member'
      - 'excel!Excel.ConditionalRangeFont#context:member'
      - 'excel!Excel.ConditionalRangeFont#italic:member'
      - 'excel!Excel.ConditionalRangeFont#load:member(1)'
      - 'excel!Excel.ConditionalRangeFont#load:member(2)'
      - 'excel!Excel.ConditionalRangeFont#load:member(3)'
      - 'excel!Excel.ConditionalRangeFont#set:member(1)'
      - 'excel!Excel.ConditionalRangeFont#set:member(2)'
      - 'excel!Excel.ConditionalRangeFont#strikethrough:member'
      - 'excel!Excel.ConditionalRangeFont#toJSON:member(1)'
      - 'excel!Excel.ConditionalRangeFont#underline:member'
  - uid: 'excel!Excel.ConditionalRangeFont#bold:member'
    summary: |-
      <span data-ttu-id="eb125-103">Representa el estado de negrita de la fuente.</span><span class="sxs-lookup"><span data-stu-id="eb125-103">Represents the bold status of font.</span></span>

      <span data-ttu-id="eb125-104">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#clear:member(1)'
    summary: |-
      <span data-ttu-id="eb125-105">Restablece los formatos de fuente.</span><span class="sxs-lookup"><span data-stu-id="eb125-105">Resets the font formats.</span></span>

      <span data-ttu-id="eb125-106">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFont#color:member'
    summary: |-
      <span data-ttu-id="eb125-107">Representaci贸n del c贸digo de color HTML del color del texto.</span><span class="sxs-lookup"><span data-stu-id="eb125-107">HTML color code representation of the text color.</span></span> <span data-ttu-id="eb125-108">Por ejemplo</span><span class="sxs-lookup"><span data-stu-id="eb125-108">E.g.</span></span> <span data-ttu-id="eb125-109">\#FF0000 representa el rojo.</span><span class="sxs-lookup"><span data-stu-id="eb125-109">\#FF0000 represents Red.</span></span>

      <span data-ttu-id="eb125-110">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-110">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeFont#context:member'
    summary: <span data-ttu-id="eb125-111">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="eb125-111">The request context associated with the object.</span></span> <span data-ttu-id="eb125-112">Esto conecta el proceso del complemento con el proceso de la aplicaci贸n host de Office.</span><span class="sxs-lookup"><span data-stu-id="eb125-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeFont#italic:member'
    summary: |-
      <span data-ttu-id="eb125-113">Representa el estado de cursiva de la fuente.</span><span class="sxs-lookup"><span data-stu-id="eb125-113">Represents the italic status of the font.</span></span>

      <span data-ttu-id="eb125-114">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(1)'
    summary: <span data-ttu-id="eb125-115">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="eb125-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eb125-116">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="eb125-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeFontLoadOptions): Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="eb125-117">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="eb125-117">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFontLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(2)'
    summary: <span data-ttu-id="eb125-118">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="eb125-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eb125-119">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="eb125-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="eb125-120">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="eb125-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(3)'
    summary: <span data-ttu-id="eb125-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="eb125-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="eb125-122">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="eb125-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeFont;
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="eb125-123">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegaci贸n que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="eb125-123">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeFont#set:member(1)'
    summary: '<span data-ttu-id="eb125-124">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="eb125-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="eb125-125">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="eb125-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="eb125-126">Este m茅todo tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="eb125-126">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeFont): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="eb125-127">Objeto de JavaScript con propiedades que se estructuran de forma isom贸rfico a las propiedades del objeto en el que se llama al m茅todo.</span><span class="sxs-lookup"><span data-stu-id="eb125-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFontUpdateData:interface'
        - id: options
          description: <span data-ttu-id="eb125-128">Proporciona una opci贸n para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eb125-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFont#set:member(2)'
    summary: '<span data-ttu-id="eb125-129">Establece varias propiedades en el objeto al mismo tiempo, bas谩ndose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="eb125-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFont): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeFont:class'
  - uid: 'excel!Excel.ConditionalRangeFont#strikethrough:member'
    summary: |-
      <span data-ttu-id="eb125-130">Representa el estado de tachado de la fuente.</span><span class="sxs-lookup"><span data-stu-id="eb125-130">Represents the strikethrough status of the font.</span></span>

      <span data-ttu-id="eb125-131">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-131">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: strikethrough
    fullName: strikethrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikethrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#toJSON:member(1)'
    summary: '<span data-ttu-id="eb125-132">Reemplaza el m茅todo JavaScript `toJSON()` para proporcionar un resultado m谩s 煤til cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="eb125-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="eb125-133">.</span><span class="sxs-lookup"><span data-stu-id="eb125-133"></span></span> <span data-ttu-id="eb125-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="eb125-134"></span></span><!-- --><span data-ttu-id="eb125-135">, a su vez, llama `toJSON` al m茅todo del objeto que se le pasa.) Mientras que el objeto Excel. ConditionalRangeFont original es un objeto API, `toJSON` el m茅todo devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ConditionalRangeFontData`</span><span class="sxs-lookup"><span data-stu-id="eb125-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFontData`</span></span><!-- --><span data-ttu-id="eb125-136">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="eb125-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFontData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFontData:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFont#underline:member'
    summary: |-
      <span data-ttu-id="eb125-137">Tipo de subrayado aplicado a la fuente.</span><span class="sxs-lookup"><span data-stu-id="eb125-137">Type of underline applied to the font.</span></span> <span data-ttu-id="eb125-138">Consulte Excel. ConditionalRangeFontUnderlineStyle para obtener informaci贸n detallada.</span><span class="sxs-lookup"><span data-stu-id="eb125-138">See Excel.ConditionalRangeFontUnderlineStyle for details.</span></span>

      <span data-ttu-id="eb125-139">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="eb125-139">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont#underline~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    name: Excel.ConditionalRangeFont
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeFontLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontUpdateData:interface'
    name: Interfaces.ConditionalRangeFontUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontData:interface'
    name: Excel.Interfaces.ConditionalRangeFontData
  - uid: 'excel!Excel.ConditionalRangeFont#underline~0:complex'
    name: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double"
    fullName: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeFontUnderlineStyle:enum'
        name: Excel.ConditionalRangeFontUnderlineStyle
        fullName: Excel.ConditionalRangeFontUnderlineStyle
      - name: ' | "None" | "Single" | "Double"'
        fullName: ' | "None" | "Single" | "Double"'