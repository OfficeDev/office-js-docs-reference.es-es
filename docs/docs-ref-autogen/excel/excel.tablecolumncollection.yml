### YamlMime:UniversalReference
ms.openlocfilehash: 59019592f3b528b04996cf03d75b0a348d9d6b42
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 11/09/2018
ms.locfileid: "26228006"
items:
- uid: excel.Excel.TableColumnCollection
  summary: >-
    <span data-ttu-id="419b1-101">Representa una colección de todas las columnas que forman parte de la tabla.</span><span class="sxs-lookup"><span data-stu-id="419b1-101">Represents a collection of all the columns that are part of the table.</span></span>


    <span data-ttu-id="419b1-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="419b1-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumnCollection
  fullName: Excel.TableColumnCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumnCollection.add
  - excel.Excel.TableColumnCollection.count
  - excel.Excel.TableColumnCollection.getCount
  - excel.Excel.TableColumnCollection.getItem
  - excel.Excel.TableColumnCollection.getItemAt
  - excel.Excel.TableColumnCollection.getItemOrNullObject
  - excel.Excel.TableColumnCollection.items
  - excel.Excel.TableColumnCollection.load
  - excel.Excel.TableColumnCollection.toJSON
- uid: excel.Excel.TableColumnCollection.add
  summary: >-
    <span data-ttu-id="419b1-103">Agrega una nueva columna a la tabla.</span><span class="sxs-lookup"><span data-stu-id="419b1-103">Adds a new column to the table.</span></span>


    <span data-ttu-id="419b1-104">\[[Conjunto de API: ExcelApi 1.1 requiere un índice más pequeño que el número de columnas total; 1.4 permite índice que se va a ser opcional (null o -1) y agregará una columna al final; 1.4 permite que el parámetro name en tiempo de creación.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="419b1-104">\[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="419b1-105">\]</span><span class="sxs-lookup"><span data-stu-id="419b1-105"></span></span>
  name: add(index, values, name)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"419b1-106\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-106\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = tables.getItem(\"Table1\").columns.add(null, values);\n    column.load('name');\n    return ctx.sync().then(function() {\n        console.log(column.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="419b1-p102">Opcional. Especifica la posición relativa de la nueva columna. Si es NULL o -1, la columna se agrega al final. Las columnas con un índice más alto se desplazarán a un lado. Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="419b1-p102">Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="419b1-p103">Opcional. Matriz bidimensional de valores sin formato de la columna de la tabla.</span><span class="sxs-lookup"><span data-stu-id="419b1-p103">Optional. A 2-dimensional array of unformatted values of the table column.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
    - id: name
      description: <span data-ttu-id="419b1-p104">Opcional. Especifica el nombre de la nueva columna. Si es NULL, se utilizará el nombre predeterminado.</span><span class="sxs-lookup"><span data-stu-id="419b1-p104">Optional. Specifies the name of the new column. If null, the default name will be used.</span></span>
      type:
      - string
- uid: excel.Excel.TableColumnCollection.count
  summary: >-
    <span data-ttu-id="419b1-p105">Devuelve el número de columnas de la tabla. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="419b1-p105">Returns the number of columns in the table. Read-only.</span></span>


    <span data-ttu-id="419b1-119">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="419b1-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getCount
  summary: >-
    <span data-ttu-id="419b1-120">Obtiene el número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="419b1-120">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="419b1-121">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="419b1-121">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableColumnCollection.getItem
  summary: >-
    <span data-ttu-id="419b1-122">Obtiene un objeto de columna por nombre o identificador.</span><span class="sxs-lookup"><span data-stu-id="419b1-122">Gets a column object by Name or ID.</span></span>


    <span data-ttu-id="419b1-123">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="419b1-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"419b1-124\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="419b1-125">Nombre o identificador de columna.</span><span class="sxs-lookup"><span data-stu-id="419b1-125">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.getItemAt
  summary: >-
    <span data-ttu-id="419b1-126">Obtiene una columna en función de su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="419b1-126">Gets a column based on its position in the collection.</span></span>


    <span data-ttu-id="419b1-127">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="419b1-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"419b1-128\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="419b1-p106">Valor de índice del objeto que se va a recuperar. Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="419b1-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="419b1-p107">Obtiene un objeto de columna por nombre o identificador. Si la columna no existe, devolverá un objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="419b1-p107">Gets a column object by Name or ID. If the column does not exist, will return a null object.</span></span>


    <span data-ttu-id="419b1-133">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="419b1-133">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="419b1-134">Nombre o identificador de columna.</span><span class="sxs-lookup"><span data-stu-id="419b1-134">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.items
  summary: <span data-ttu-id="419b1-135">Obtiene al secundario cargado los elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="419b1-135">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableColumn[];'
    return:
      type:
      - Excel.TableColumn[]
- uid: excel.Excel.TableColumnCollection.load
  summary: <span data-ttu-id="419b1-136">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="419b1-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="419b1-137">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="419b1-137">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"419b1-138\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-138\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"419b1-139\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-139\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"419b1-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"419b1-141\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-141\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"419b1-142\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-142\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"419b1-143\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-143\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"419b1-144\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-144\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"419b1-145\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"419b1-145\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;\n    tablecolumns.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablecolumns Count: \" + tablecolumns.count);\n        for (var i = 0; i < tablecolumns.items.length; i++)\n        {\n            console.log(tablecolumns.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="419b1-146">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="419b1-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumnCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnCollectionData
      description: ''
