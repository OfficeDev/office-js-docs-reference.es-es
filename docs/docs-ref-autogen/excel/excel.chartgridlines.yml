### YamlMime:UniversalReference
ms.openlocfilehash: 7aee659dd859053802292f463a585b7845ba0999
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725315"
items:
- uid: excel.Excel.ChartGridlines
  summary: >-
    <span data-ttu-id="60e56-101">Representa las líneas de división principales o secundarias del eje de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="60e56-101">Represents major or minor gridlines on a chart axis.</span></span>


    <span data-ttu-id="60e56-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60e56-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartGridlines
  fullName: Excel.ChartGridlines
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartGridlines.context
  - excel.Excel.ChartGridlines.format
  - excel.Excel.ChartGridlines.load
  - excel.Excel.ChartGridlines.toJSON
  - excel.Excel.ChartGridlines.visible
- uid: excel.Excel.ChartGridlines.context
  summary: <span data-ttu-id="60e56-103">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="60e56-103">The request context associated with the object.</span></span> <span data-ttu-id="60e56-104">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="60e56-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartGridlines.format
  summary: >-
    <span data-ttu-id="60e56-p102">Representa el formato de las líneas de cuadrícula del gráfico. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="60e56-p102">Represents the formatting of chart gridlines. Read-only.</span></span>


    <span data-ttu-id="60e56-107">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60e56-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartGridlinesFormat;'
    return:
      type:
      - excel.Excel.ChartGridlinesFormat
- uid: excel.Excel.ChartGridlines.load
  summary: <span data-ttu-id="60e56-108">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="60e56-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60e56-109">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="60e56-109">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"60e56-110\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-110\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"60e56-111\">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-111\">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"60e56-112\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-112\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines` - Only available on collection types.</span></span> <span data-ttu-id=\"60e56-113\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-113\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"60e56-114\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-114\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"60e56-115\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-115\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"60e56-116\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-116\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"60e56-117\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"60e56-117\">Examples</span></span>\n\n```javascript\n// Get the visible of Major Gridlines on value axis of Chart1\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var majGridlines = chart.axes.valueaxis.majorGridlines;\n    majGridlines.load('visible');\n    return ctx.sync().then(function() {\n            console.log(majGridlines.visible);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set to show major gridlines on valueAxis of Chart1\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.axes.valueAxis.majorGridlines.visible = true;\n    return ctx.sync().then(function() {\n            console.log(\"Axis Gridlines Added \");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="60e56-118">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="60e56-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartGridlines.toJSON
  summary: <span data-ttu-id="60e56-119">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="60e56-119">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="60e56-120">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.ChartGridlines es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.ChartGridlinesData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="60e56-120">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartGridlines object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartGridlinesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartGridlinesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartGridlinesData
      description: ''
- uid: excel.Excel.ChartGridlines.visible
  summary: >-
    <span data-ttu-id="60e56-121">Valor booleano que representa si las líneas de cuadrícula del eje están visibles o no.</span><span class="sxs-lookup"><span data-stu-id="60e56-121">Boolean value representing if the axis gridlines are visible or not.</span></span>


    <span data-ttu-id="60e56-122">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60e56-122">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
