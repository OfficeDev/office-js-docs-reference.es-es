### YamlMime:UniversalReference
ms.openlocfilehash: 9646ea39ee0175cfc106e8e80e18c083246133e9
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724048"
items:
- uid: excel.Excel.RangeFont
  summary: >-
    <span data-ttu-id="f369a-101">Este objeto representa los atributos de fuente (nombre de fuente, tamaño de fuente, color, etc.) de un objeto.</span><span class="sxs-lookup"><span data-stu-id="f369a-101">This object represents the font attributes (font name, font size, color, etc.) for an object.</span></span>


    <span data-ttu-id="f369a-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFont
  fullName: Excel.RangeFont
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFont.bold
  - excel.Excel.RangeFont.color
  - excel.Excel.RangeFont.context
  - excel.Excel.RangeFont.italic
  - excel.Excel.RangeFont.load
  - excel.Excel.RangeFont.name
  - excel.Excel.RangeFont.size
  - excel.Excel.RangeFont.toJSON
  - excel.Excel.RangeFont.underline
- uid: excel.Excel.RangeFont.bold
  summary: >-
    <span data-ttu-id="f369a-103">Representa el estado de negrita de la fuente.</span><span class="sxs-lookup"><span data-stu-id="f369a-103">Represents the bold status of font.</span></span>


    <span data-ttu-id="f369a-104">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: bold
  fullName: bold
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bold: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.color
  summary: >-
    <span data-ttu-id="f369a-105">Representación de código de color HTML del color del texto.</span><span class="sxs-lookup"><span data-stu-id="f369a-105">HTML color code representation of the text color.</span></span> <span data-ttu-id="f369a-106">Por ejemplo</span><span class="sxs-lookup"><span data-stu-id="f369a-106">E.g.</span></span> <span data-ttu-id="f369a-107">\#FF0000 representa el rojo.</span><span class="sxs-lookup"><span data-stu-id="f369a-107">\#FF0000 represents Red.</span></span>


    <span data-ttu-id="f369a-108">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.context
  summary: <span data-ttu-id="f369a-109">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="f369a-109">The request context associated with the object.</span></span> <span data-ttu-id="f369a-110">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="f369a-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeFont.italic
  summary: >-
    <span data-ttu-id="f369a-111">Representa el estado de cursiva de la fuente.</span><span class="sxs-lookup"><span data-stu-id="f369a-111">Represents the italic status of the font.</span></span>


    <span data-ttu-id="f369a-112">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: italic
  fullName: italic
  langs:
  - typeScript
  type: property
  syntax:
    content: 'italic: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.load
  summary: <span data-ttu-id="f369a-113">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="f369a-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f369a-114">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="f369a-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"f369a-115\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-115\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"f369a-116\">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-116\">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"f369a-117\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-117\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont` - Only available on collection types.</span></span> <span data-ttu-id=\"f369a-118\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-118\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"f369a-119\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-119\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"f369a-120\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-120\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"f369a-121\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-121\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"f369a-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"f369a-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFont = range.format.font;\n    rangeFont.load('name');\n    return ctx.sync().then(function() {\n        console.log(rangeFont.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.font.name = 'Times New Roman';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="f369a-123">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="f369a-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeFont.name
  summary: >-
    <span data-ttu-id="f369a-124">Nombre de fuente (por ejemplo, "Calibri")</span><span class="sxs-lookup"><span data-stu-id="f369a-124">Font name (e.g. "Calibri")</span></span>


    <span data-ttu-id="f369a-125">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.size
  summary: >-
    <span data-ttu-id="f369a-126">Tamaño de fuente</span><span class="sxs-lookup"><span data-stu-id="f369a-126">Font size.</span></span>


    <span data-ttu-id="f369a-127">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: size
  fullName: size
  langs:
  - typeScript
  type: property
  syntax:
    content: 'size: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFont.toJSON
  summary: <span data-ttu-id="f369a-128">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="f369a-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="f369a-129">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.RangeFont es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.RangeFontData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="f369a-129">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFontData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFontData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFontData
      description: ''
- uid: excel.Excel.RangeFont.underline
  summary: >-
    <span data-ttu-id="f369a-130">Tipo de subrayado aplicado a la fuente.</span><span class="sxs-lookup"><span data-stu-id="f369a-130">Type of underline applied to the font.</span></span> <span data-ttu-id="f369a-131">Para obtener información detallada, vea Excel.RangeUnderlineStyle.</span><span class="sxs-lookup"><span data-stu-id="f369a-131">See Excel.RangeUnderlineStyle for details.</span></span>


    <span data-ttu-id="f369a-132">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f369a-132">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: underline
  fullName: underline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type:
      - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
