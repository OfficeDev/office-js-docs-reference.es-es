### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.Storage
    summary: 'Almacenamiento de valor clave asincrónico, global y persistente.'
    remarks: 'El límite de almacenamiento es de 10 MB por dominio, que puede ser compartido por varios complementos.'
    name: OfficeRuntime.Storage
    fullName: OfficeRuntime.Storage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.Storage.getItem
      - office-runtime.OfficeRuntime.Storage.getItems
      - office-runtime.OfficeRuntime.Storage.getKeys
      - office-runtime.OfficeRuntime.Storage.removeItem
      - office-runtime.OfficeRuntime.Storage.removeItems
      - office-runtime.OfficeRuntime.Storage.setItem
      - office-runtime.OfficeRuntime.Storage.setItems
  - uid: office-runtime.OfficeRuntime.Storage.getItem
    summary: 'Recupera un elemento del almacenamiento en función de su clave. Devuelve una promesa. En caso de que la promesa no se resuelva, devuelve NULL.'
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Promise<string | null>;'
      return:
        type:
          - Promise<string | null>
        description: ''
      parameters:
        - id: key
          description: Clave del elemento que se va a recuperar. Debe ser una cadena.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.getItems
    summary: 'Recupera varios elementos del almacenamiento en función de su clave. Devuelve una promesa. En caso de que la promesa no se resuelva, devuelve NULL.'
    name: getItems(keys)
    fullName: getItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItems(keys: string[]): Promise<{ [key: string]: string | null }>;'
      return:
        type:
          - 'Promise<{ [key: string]: string | null }>'
        description: ''
      parameters:
        - id: keys
          description: Claves de los elementos que se van a quitar. Debe ser una matriz de cadenas.
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.getKeys
    summary: Recupera una matriz de todas las claves del almacenamiento. Devuelve una promesa.
    name: getKeys()
    fullName: getKeys()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getKeys(): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
  - uid: office-runtime.OfficeRuntime.Storage.removeItem
    summary: Quita un elemento del almacenamiento en función de su clave. Devuelve una promesa.
    name: removeItem(key)
    fullName: removeItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: Clave del elemento que se va a quitar. Debe ser una cadena.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.removeItems
    summary: Quita varios elementos del almacenamiento. Devuelve una promesa.
    name: removeItems(keys)
    fullName: removeItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItems(keys: string[]): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: Claves de los elementos que se van a quitar. Debe ser una matriz de cadenas.
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.setItem
    summary: Establece un par clave-valor en almacenamiento o actualiza un par clave-valor existente. Devuelve una promesa.
    name: 'setItem(key, value)'
    fullName: 'setItem(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: Clave del elemento que se va a establecer. Debe ser una cadena.
          type:
            - string
        - id: value
          description: Debe ser una cadena.
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.setItems
    summary: Establece varios elementos en el almacenamiento o actualiza varios elementos dentro del almacenamiento. Devuelve una promesa.
    name: setItems(keyValues)
    fullName: setItems(keyValues)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItems(keyValues: { [key: string]: string }): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValues
          description: Pares clave-valor que se van a establecer. Deben ser cadenas.
          type:
            - '{ [key: string]: string }'