### YamlMime:UniversalReference
ms.openlocfilehash: 5f9aebbab6f3c0ec1756cf2a6c5419d6db6ca08a
ms.sourcegitcommit: 788ab9c595c9143f8b8f4822a170e8b90d72ee1d
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 03/06/2019
ms.locfileid: "30413850"
items:
- uid: excel.Excel.RemoveDuplicatesResult
  summary: >-
    Representa los resultados del método removeDuplicates en el rango.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.RemoveDuplicatesResult
  fullName: Excel.RemoveDuplicatesResult
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RemoveDuplicatesResult.context
  - excel.Excel.RemoveDuplicatesResult.load
  - excel.Excel.RemoveDuplicatesResult.load_1
  - excel.Excel.RemoveDuplicatesResult.load_2
  - excel.Excel.RemoveDuplicatesResult.removed
  - excel.Excel.RemoveDuplicatesResult.toJSON
  - excel.Excel.RemoveDuplicatesResult.uniqueRemaining
- uid: excel.Excel.RemoveDuplicatesResult.context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RemoveDuplicatesResult.load
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Excel.RemoveDuplicatesResult`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.


    `load(option?: { select?: string; expand?: string; }): Excel.RemoveDuplicatesResult`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RemoveDuplicatesResult`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RemoveDuplicatesResultLoadOptions): Excel.RemoveDuplicatesResult;'
    return:
      type:
      - excel.Excel.RemoveDuplicatesResult
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RemoveDuplicatesResultLoadOptions
- uid: excel.Excel.RemoveDuplicatesResult.load_1
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RemoveDuplicatesResult;'
    return:
      type:
      - excel.Excel.RemoveDuplicatesResult
      description: ''
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type:
      - string | string[]
- uid: excel.Excel.RemoveDuplicatesResult.load_2
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RemoveDuplicatesResult;'
    return:
      type:
      - excel.Excel.RemoveDuplicatesResult
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.RemoveDuplicatesResult.removed
  summary: >-
    Número de filas duplicadas quitadas por la operación.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: removed
  fullName: removed
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly removed: number;'
    return:
      type:
      - number
- uid: excel.Excel.RemoveDuplicatesResult.toJSON
  summary: Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API. (`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. RemoveDuplicatesResult original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.RemoveDuplicatesResultData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RemoveDuplicatesResultData;'
    return:
      type:
      - excel.Excel.Interfaces.RemoveDuplicatesResultData
      description: ''
- uid: excel.Excel.RemoveDuplicatesResult.uniqueRemaining
  summary: >-
    Número de filas únicas restantes presentes en el intervalo resultante.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: uniqueRemaining
  fullName: uniqueRemaining
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly uniqueRemaining: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:D11\");\n\n    const deleteResult = range.removeDuplicates([0],true);    \n    deleteResult.load();    \n    await context.sync();\n\n    console.log(deleteResult.removed + \" entries with duplicate names removed.\");\n    console.log(deleteResult.uniqueRemaining + \" entries with unique names remain in the range.\");\n});\n```"
