### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotTable
    summary: |-
      <span data-ttu-id="8bb71-101">Representa una tabla dinámica de Excel.</span><span class="sxs-lookup"><span data-stu-id="8bb71-101">Represents an Excel PivotTable.</span></span>

      <span data-ttu-id="8bb71-102">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotTable.columnHierarchies
      - excel.Excel.PivotTable.context
      - excel.Excel.PivotTable.dataHierarchies
      - excel.Excel.PivotTable.delete
      - excel.Excel.PivotTable.enableDataValueEditing
      - excel.Excel.PivotTable.filterHierarchies
      - excel.Excel.PivotTable.hierarchies
      - excel.Excel.PivotTable.id
      - excel.Excel.PivotTable.layout
      - excel.Excel.PivotTable.load
      - excel.Excel.PivotTable.load_1
      - excel.Excel.PivotTable.load_2
      - excel.Excel.PivotTable.name
      - excel.Excel.PivotTable.refresh
      - excel.Excel.PivotTable.rowHierarchies
      - excel.Excel.PivotTable.set
      - excel.Excel.PivotTable.set_1
      - excel.Excel.PivotTable.toJSON
      - excel.Excel.PivotTable.useCustomSortLists
      - excel.Excel.PivotTable.worksheet
  - uid: excel.Excel.PivotTable.columnHierarchies
    summary: |-
      <span data-ttu-id="8bb71-103">Las jerarquías dinámicas de columna de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-103">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-104">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8bb71-105">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8bb71-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.context
    summary: <span data-ttu-id="8bb71-106">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="8bb71-106">The request context associated with the object.</span></span> <span data-ttu-id="8bb71-107">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="8bb71-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.PivotTable.dataHierarchies
    summary: |-
      <span data-ttu-id="8bb71-108">Las jerarquías dinámicas de datos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-108">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-109">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.DataPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8bb71-110">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8bb71-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.delete
    summary: |-
      <span data-ttu-id="8bb71-111">Elimina la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-111">Deletes the PivotTable.</span></span>

      <span data-ttu-id="8bb71-112">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8bb71-113">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8bb71-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.enableDataValueEditing
    summary: |-
      <span data-ttu-id="8bb71-114">Especifica si la tabla dinámica permite que el usuario edite los valores del cuerpo de datos.</span><span class="sxs-lookup"><span data-stu-id="8bb71-114">Specifies whether the PivotTable allows values in the data body to be edited by the user.</span></span>

      <span data-ttu-id="8bb71-115">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-115">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enableDataValueEditing
    fullName: enableDataValueEditing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableDataValueEditing: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotTable.filterHierarchies
    summary: |-
      <span data-ttu-id="8bb71-116">Las jerarquías dinámicas de filtro de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-116">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-117">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.FilterPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8bb71-118">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8bb71-118">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: excel.Excel.PivotTable.hierarchies
    summary: |-
      <span data-ttu-id="8bb71-119">Las jerarquías dinámicas de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-119">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-120">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.PivotHierarchyCollection
  - uid: excel.Excel.PivotTable.id
    summary: |-
      <span data-ttu-id="8bb71-121">ID la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-121">Id of the PivotTable.</span></span> <span data-ttu-id="8bb71-122">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="8bb71-122">Read-only.</span></span>

      <span data-ttu-id="8bb71-123">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-123">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.layout
    summary: |-
      <span data-ttu-id="8bb71-124">El PivotLayout que describe el diseño y la estructura visual de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-124">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-125">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8bb71-126">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8bb71-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: excel.Excel.PivotTable.load
    summary: '<span data-ttu-id="8bb71-127">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="8bb71-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8bb71-128">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="8bb71-128">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="8bb71-129">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="8bb71-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8bb71-130">`load(option?: string | string[]): Excel.PivotTable`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="8bb71-130">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8bb71-131">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="8bb71-131">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8bb71-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="8bb71-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="8bb71-133">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="8bb71-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="8bb71-134">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="8bb71-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8bb71-135">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="8bb71-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8bb71-136">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="8bb71-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotTableLoadOptions
  - uid: excel.Excel.PivotTable.load_1
    summary: <span data-ttu-id="8bb71-137">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="8bb71-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8bb71-138">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8bb71-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8bb71-139">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="8bb71-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotTable.load_2
    summary: <span data-ttu-id="8bb71-140">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="8bb71-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8bb71-141">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8bb71-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8bb71-142">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="8bb71-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotTable.name
    summary: |-
      <span data-ttu-id="8bb71-143">Nombre la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-143">Name of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-144">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.refresh
    summary: |-
      <span data-ttu-id="8bb71-145">Actualiza la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-145">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="8bb71-146">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-146">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.PivotTable.rowHierarchies
    summary: |-
      <span data-ttu-id="8bb71-147">Las jerarquías dinámicas de fila de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="8bb71-147">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="8bb71-148">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-148">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
  - uid: excel.Excel.PivotTable.set
    summary: '<span data-ttu-id="8bb71-149">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="8bb71-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8bb71-150">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="8bb71-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="8bb71-151">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="8bb71-151">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="8bb71-152">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="8bb71-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.PivotTableUpdateData
        - id: options
          description: <span data-ttu-id="8bb71-153">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="8bb71-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotTable.set_1
    summary: '<span data-ttu-id="8bb71-154">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="8bb71-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotTable
  - uid: excel.Excel.PivotTable.toJSON
    summary: '<span data-ttu-id="8bb71-155">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8bb71-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8bb71-156">.</span><span class="sxs-lookup"><span data-stu-id="8bb71-156"></span></span> <span data-ttu-id="8bb71-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8bb71-157"></span></span><!-- --><span data-ttu-id="8bb71-158">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. PivotTable original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="8bb71-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="8bb71-159">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="8bb71-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableData
        description: ''
  - uid: excel.Excel.PivotTable.useCustomSortLists
    summary: |-
      <span data-ttu-id="8bb71-160">Especifica si la tabla dinámica utiliza listas personalizadas al ordenar.</span><span class="sxs-lookup"><span data-stu-id="8bb71-160">Specifies whether the PivotTable uses custom lists when sorting.</span></span>

      <span data-ttu-id="8bb71-161">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-161">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: useCustomSortLists
    fullName: useCustomSortLists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useCustomSortLists: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotTable.worksheet
    summary: |-
      <span data-ttu-id="8bb71-162">La hoja de cálculo que contiene la tabla dinámica actual.</span><span class="sxs-lookup"><span data-stu-id="8bb71-162">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="8bb71-163">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8bb71-163">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet