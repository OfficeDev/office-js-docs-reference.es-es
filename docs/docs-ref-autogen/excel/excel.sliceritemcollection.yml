### YamlMime:UniversalReference
ms.openlocfilehash: 67240d48283b5962ba4b24f7cacbb3ed805d8d07
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110231"
items:
- uid: excel.Excel.SlicerItemCollection
  summary: >-
    <span data-ttu-id="07da2-101">Representa una colección de todos los objetos de elemento de segmentación de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="07da2-101">Represents a collection of all the slicer item objects on the slicer.</span></span>


    <span data-ttu-id="07da2-102">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07da2-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerItemCollection
  fullName: Excel.SlicerItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerItemCollection.context
  - excel.Excel.SlicerItemCollection.getCount
  - excel.Excel.SlicerItemCollection.getItem
  - excel.Excel.SlicerItemCollection.getItemAt
  - excel.Excel.SlicerItemCollection.getItemOrNullObject
  - excel.Excel.SlicerItemCollection.items
  - excel.Excel.SlicerItemCollection.load
  - excel.Excel.SlicerItemCollection.load_1
  - excel.Excel.SlicerItemCollection.load_2
  - excel.Excel.SlicerItemCollection.toJSON
- uid: excel.Excel.SlicerItemCollection.context
  summary: <span data-ttu-id="07da2-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="07da2-103">The request context associated with the object.</span></span> <span data-ttu-id="07da2-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="07da2-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerItemCollection.getCount
  summary: >-
    <span data-ttu-id="07da2-105">Devuelve el número de elementos de la segmentación de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="07da2-105">Returns the number of slicer items in the slicer.</span></span>


    <span data-ttu-id="07da2-106">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07da2-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerItemCollection.getItem
  summary: >-
    <span data-ttu-id="07da2-107">Obtiene un objeto de elemento de rebanador mediante su clave o nombre.</span><span class="sxs-lookup"><span data-stu-id="07da2-107">Gets a slicer item object using its key or name.</span></span>


    <span data-ttu-id="07da2-108">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07da2-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="07da2-109">La clave o el nombre del elemento de rebanador.</span><span class="sxs-lookup"><span data-stu-id="07da2-109">The key or name of the slicer item.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerItemCollection.getItemAt
  summary: >-
    <span data-ttu-id="07da2-110">Obtiene un elemento de rebanador basándose en su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="07da2-110">Gets a slicer item based on its position in the collection.</span></span>


    <span data-ttu-id="07da2-111">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07da2-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="07da2-p102">Valor de índice del objeto que se va a recuperar. Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="07da2-p102">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.SlicerItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="07da2-114">Obtiene un elemento de segmentación de elementos mediante su clave o nombre.</span><span class="sxs-lookup"><span data-stu-id="07da2-114">Gets a slicer item using its key or name.</span></span> <span data-ttu-id="07da2-115">Si el elemento de segmentación de elementos no existe, devolverá un objeto null.</span><span class="sxs-lookup"><span data-stu-id="07da2-115">If the slicer item does not exist, will return a null object.</span></span>


    <span data-ttu-id="07da2-116">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07da2-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="07da2-117">Clave o nombre de la segmentación de la rebanada que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="07da2-117">Key or name of the slicer to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerItemCollection.items
  summary: <span data-ttu-id="07da2-118">Obtiene los elementos secundarios cargados de esta colección.</span><span class="sxs-lookup"><span data-stu-id="07da2-118">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.SlicerItem[];'
    return:
      type:
      - Excel.SlicerItem[]
- uid: excel.Excel.SlicerItemCollection.load
  summary: <span data-ttu-id="07da2-119">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="07da2-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="07da2-120">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="07da2-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="07da2-121">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="07da2-121">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="07da2-122">`load(option?: string | string[]): Excel.SlicerItemCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="07da2-122">`load(option?: string | string[]): Excel.SlicerItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="07da2-123">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItemCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="07da2-123">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="07da2-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItemCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="07da2-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="07da2-125">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="07da2-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="07da2-126">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="07da2-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="07da2-127">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="07da2-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="07da2-128">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="07da2-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerItemCollection.load_1
  summary: <span data-ttu-id="07da2-129">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="07da2-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="07da2-130">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="07da2-130">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="07da2-131">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="07da2-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerItemCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerItemCollection.toJSON
  summary: <span data-ttu-id="07da2-132">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="07da2-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="07da2-133">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el `Excel.SlicerItemCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.SlicerItemCollectionData` <!-- -->como) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="07da2-133">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerItemCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerItemCollectionData
      description: ''
