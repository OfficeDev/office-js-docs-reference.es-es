### YamlMime:UniversalReference
ms.openlocfilehash: 93f6a1945a31ec1127a478bf96fb6dab7c886952
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114900"
items:
- uid: excel.Excel.RangeCollection
  summary: '<span data-ttu-id="c8c8e-101">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8c8e-101">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  isPreview: true
  name: Excel.RangeCollection
  fullName: Excel.RangeCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeCollection.context
  - excel.Excel.RangeCollection.getCount
  - excel.Excel.RangeCollection.getItemAt
  - excel.Excel.RangeCollection.items
  - excel.Excel.RangeCollection.load
  - excel.Excel.RangeCollection.load_1
  - excel.Excel.RangeCollection.load_2
  - excel.Excel.RangeCollection.toJSON
- uid: excel.Excel.RangeCollection.context
  summary: <span data-ttu-id="c8c8e-102">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-102">The request context associated with the object.</span></span> <span data-ttu-id="c8c8e-103">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-103">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeCollection.getCount
  summary: >-
    <span data-ttu-id="c8c8e-104">Devuelve el número de intervalos de RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-104">Returns the number of ranges in the RangeCollection.</span></span>


    <span data-ttu-id="c8c8e-105">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8c8e-105">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.RangeCollection.getItemAt
  summary: >-
    <span data-ttu-id="c8c8e-106">Devuelve el objeto de intervalo en función de su posición en la RangeCollection.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-106">Returns the range object based on its position in the RangeCollection.</span></span>


    <span data-ttu-id="c8c8e-107">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c8c8e-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="c8c8e-108">Valor de índice del objeto Range que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-108">Index value of the range object to be retrieved.</span></span> <span data-ttu-id="c8c8e-109">Indizado en cero.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-109">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.RangeCollection.items
  summary: <span data-ttu-id="c8c8e-110">Obtiene los elementos secundarios cargados de esta colección.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-110">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Range[];'
    return:
      type:
      - Excel.Range[]
- uid: excel.Excel.RangeCollection.load
  summary: <span data-ttu-id="c8c8e-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c8c8e-112">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c8c8e-113">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="c8c8e-113">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c8c8e-114">`load(option?: string | string[]): Excel.RangeCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-114">`load(option?: string | string[]): Excel.RangeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="c8c8e-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-115">`load(option?: { select?: string; expand?: string; }): Excel.RangeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c8c8e-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeCollection` - Only available on collection types.</span></span> <span data-ttu-id="c8c8e-117">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="c8c8e-118">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c8c8e-119">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c8c8e-120">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeCollection;'
    return:
      type:
      - excel.Excel.RangeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.RangeCollection.load_1
  summary: <span data-ttu-id="c8c8e-121">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c8c8e-122">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-122">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeCollection;'
    return:
      type:
      - excel.Excel.RangeCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c8c8e-123">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeCollection;'
    return:
      type:
      - excel.Excel.RangeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.RangeCollection.toJSON
  summary: <span data-ttu-id="c8c8e-124">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c8c8e-125">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el `Excel.RangeCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.RangeCollectionData` <!-- -->como) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="c8c8e-125">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeCollectionData
      description: ''
