### YamlMime:UniversalReference
ms.openlocfilehash: 174b02f8750c27c999baa95b4da7b48738a38343
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 10/17/2018
ms.locfileid: "25585292"
items:
- uid: excel.Excel.ChartSeries
  summary: >-
    Representa una serie de un gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartSeries
  fullName: excel.Excel.ChartSeries
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartSeries.axisGroup
  - excel.Excel.ChartSeries.chartType
  - excel.Excel.ChartSeries.dataLabels
  - excel.Excel.ChartSeries.delete
  - excel.Excel.ChartSeries.doughnutHoleSize
  - excel.Excel.ChartSeries.explosion
  - excel.Excel.ChartSeries.filtered
  - excel.Excel.ChartSeries.firstSliceAngle
  - excel.Excel.ChartSeries.format
  - excel.Excel.ChartSeries.gapWidth
  - excel.Excel.ChartSeries.hasDataLabels
  - excel.Excel.ChartSeries.invertIfNegative
  - excel.Excel.ChartSeries.load
  - excel.Excel.ChartSeries.markerBackgroundColor
  - excel.Excel.ChartSeries.markerForegroundColor
  - excel.Excel.ChartSeries.markerSize
  - excel.Excel.ChartSeries.markerStyle
  - excel.Excel.ChartSeries.name
  - excel.Excel.ChartSeries.overlap
  - excel.Excel.ChartSeries.plotOrder
  - excel.Excel.ChartSeries.points
  - excel.Excel.ChartSeries.secondPlotSize
  - excel.Excel.ChartSeries.setBubbleSizes
  - excel.Excel.ChartSeries.setValues
  - excel.Excel.ChartSeries.setXAxisValues
  - excel.Excel.ChartSeries.showShadow
  - excel.Excel.ChartSeries.smooth
  - excel.Excel.ChartSeries.splitType
  - excel.Excel.ChartSeries.toJSON
  - excel.Excel.ChartSeries.trendlines
  - excel.Excel.ChartSeries.varyByCategories
- uid: excel.Excel.ChartSeries.axisGroup
  summary: >-
    Devuelve o establece el grupo de la serie especificada. Lectura y escritura


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: axisGroup
  fullName: excel.Excel.ChartSeries.axisGroup
  langs:
  - typeScript
  type: property
  syntax:
    content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
    return:
      type:
      - Excel.ChartAxisGroup | "Primary" | "Secondary"
- uid: excel.Excel.ChartSeries.chartType
  summary: >-
    Representa el tipo de gráfico de una serie. Para obtener información detallada, vea Excel.ChartType.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: chartType
  fullName: excel.Excel.ChartSeries.chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.ChartSeries.dataLabels
  summary: >-
    Representa una colección de todos los dataLabels de la serie.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: dataLabels
  fullName: excel.Excel.ChartSeries.dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.ChartSeries.delete
  summary: >-
    Elimina la serie del gráfico.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: excel.Excel.ChartSeries.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series;\n    let series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.doughnutHoleSize
  summary: >-
    Representa el tamaño del agujero anillos de una serie de gráficos. Sólo es válido en los gráficos de anillos y doughnutExploded. Genera una excepción de argumento no válido en los gráficos no válidos.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: doughnutHoleSize
  fullName: excel.Excel.ChartSeries.doughnutHoleSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.explosion
  summary: >-
    Devuelve o establece el valor de expansión de un sector del gráfico circular o gráfico de anillos. Devuelve 0 (cero) si no hay ninguna expansión (el vértice del sector está en el centro del círculo). Lectura y escritura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: explosion
  fullName: excel.Excel.ChartSeries.explosion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'explosion: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.filtered
  summary: >-
    Valor de tipo Boolean que representa si la serie se ha filtrado o no. No es aplicable para los gráficos de superficie.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: filtered
  fullName: excel.Excel.ChartSeries.filtered
  langs:
  - typeScript
  type: property
  syntax:
    content: 'filtered: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.firstSliceAngle
  summary: >-
    Devuelve o establece el ángulo del primer sector del gráfico circular o gráfico de anillos, en grados (a la derecha de vertical). Se aplica sólo a circular, gráficos circulares 3D y gráficos de anillos. Puede ser un valor comprendido entre 0 y 360. Lectura y escritura


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: firstSliceAngle
  fullName: excel.Excel.ChartSeries.firstSliceAngle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'firstSliceAngle: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.format
  summary: >-
    Representa el formato de una serie del gráfico, que incluye el formato de relleno y de línea. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: format
  fullName: excel.Excel.ChartSeries.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartSeriesFormat;'
    return:
      type:
      - excel.Excel.ChartSeriesFormat
- uid: excel.Excel.ChartSeries.gapWidth
  summary: >-
    Representa el ancho del rango de una serie de gráficos. Sólo es válido en barra y los gráficos de columnas, así como clases específicas de línea y gráficos circulares. Genera una excepción de argumento no válido en los gráficos no válidos.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: gapWidth
  fullName: excel.Excel.ChartSeries.gapWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gapWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.hasDataLabels
  summary: >-
    Valor de tipo Boolean que representa si la serie tiene rótulos de datos o no.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: hasDataLabels
  fullName: excel.Excel.ChartSeries.hasDataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.invertIfNegative
  summary: >-
    True si Microsoft Excel invierte el diseño en el elemento cuando éste corresponde a un número negativo. Lectura y escritura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: invertIfNegative
  fullName: excel.Excel.ChartSeries.invertIfNegative
  langs:
  - typeScript
  type: property
  syntax:
    content: 'invertIfNegative: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.load
  summary: Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas. Se debe llamar a "context.sync()" antes de leer las propiedades.
  remarks: "Además de esta firma, este método no tiene las siguientes firmas:\n\n`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-Sólo está disponible en los tipos de colección. Es similar a la firma precedente. Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado. Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado. Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Rename the 1st series of Chart1 to \"New Series Name\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.series.getItemAt(0).name = \"New Series Name\";\n    return ctx.sync().then(function() {\n            console.log(\"Series1 Renamed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.ChartSeries.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: option
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.
      type:
      - string | string[]
- uid: excel.Excel.ChartSeries.markerBackgroundColor
  summary: >-
    Representa el color de fondo de los marcadores de una serie de gráficos.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerBackgroundColor
  fullName: excel.Excel.ChartSeries.markerBackgroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerForegroundColor
  summary: >-
    Representa el color de primer plano de los marcadores de una serie de gráficos.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerForegroundColor
  fullName: excel.Excel.ChartSeries.markerForegroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerSize
  summary: >-
    Representa el tamaño de los marcadores de una serie de gráficos.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerSize
  fullName: excel.Excel.ChartSeries.markerSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerSize: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerStyle
  summary: >-
    Representa el estilo del marcador de una serie de gráficos. Para obtener información detallada, vea Excel.ChartMarkerStyle.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerStyle
  fullName: excel.Excel.ChartSeries.markerStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
    return:
      type:
      - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.name
  summary: >-
    Representa el nombre de una serie de un gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.ChartSeries.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.overlap
  summary: >-
    Especifica cómo se colocan las barras y columnas. Puede ser un valor comprendido entre-100 y 100. Se aplica sólo a las barras 2D y de los gráficos de columnas 2D. Lectura y escritura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: overlap
  fullName: excel.Excel.ChartSeries.overlap
  langs:
  - typeScript
  type: property
  syntax:
    content: 'overlap: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.plotOrder
  summary: >-
    Representa el orden de trazado de una serie de gráficos en el grupo de gráficos.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: plotOrder
  fullName: excel.Excel.ChartSeries.plotOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotOrder: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.points
  summary: >-
    Representa una colección de todos los puntos de la serie. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: points
  fullName: excel.Excel.ChartSeries.points
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly points: Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
- uid: excel.Excel.ChartSeries.secondPlotSize
  summary: >-
    Devuelve o establece el tamaño de la sección secundaria de un subgráfico circular de gráfico circular o de una barra de un gráfico circular, como un porcentaje del tamaño del gráfico circular principal. Puede ser un valor comprendido entre 5 y 200. Lectura y escritura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: secondPlotSize
  fullName: excel.Excel.ChartSeries.secondPlotSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'secondPlotSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.setBubbleSizes
  summary: >-
    Establecer los tamaños de burbuja para una serie de gráficos. Sólo funciona para los gráficos de burbujas.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setBubbleSizes(sourceData)
  fullName: excel.Excel.ChartSeries.setBubbleSizes
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: Objeto Range correspondiente a los datos de origen.
      type:
      - Range
- uid: excel.Excel.ChartSeries.setValues
  summary: >-
    Establezca los valores de una serie de gráficos. Gráfico de dispersión, significa que los valores del eje Y.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setValues(sourceData)
  fullName: excel.Excel.ChartSeries.setValues
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series;\n\n    // Add new series.\n    let series = seriesCollection.add(\"New Product\");\n    let values = sheet.getRange(\"E2:E7\");\n\n    // Set the vertical values for the series.\n    series.setValues(values);\n    seriesCollection.load(\"count\");\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Number of series  = \" + seriesCollection.count);\n});\n```"
    parameters:
    - id: sourceData
      description: Objeto Range correspondiente a los datos de origen.
      type:
      - Range
- uid: excel.Excel.ChartSeries.setXAxisValues
  summary: >-
    Establecer los valores de X del eje de una serie de gráficos. Sólo funciona para los gráficos de dispersión.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setXAxisValues(sourceData)
  fullName: excel.Excel.ChartSeries.setXAxisValues
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: Objeto Range correspondiente a los datos de origen.
      type:
      - Range
- uid: excel.Excel.ChartSeries.showShadow
  summary: >-
    Valor de tipo Boolean que representa si la serie tiene una sombra o no.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: showShadow
  fullName: excel.Excel.ChartSeries.showShadow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showShadow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.smooth
  summary: >-
    Valor de tipo Boolean que representa si la serie es suave o no. Sólo se aplica a gráficos de líneas y dispersión.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: smooth
  fullName: excel.Excel.ChartSeries.smooth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'smooth: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.splitType
  summary: >-
    Devuelve o establece la forma en que se dividen las dos secciones de un subgráfico circular de gráfico circular o de una barra de gráfico circular. Lectura y escritura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: splitType
  fullName: excel.Excel.ChartSeries.splitType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'splitType: "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
    return:
      type:
      - "\"SplitByPosition\" | \"SplitByValue\" | \"SplitByPercentValue\" | \"SplitByCustomSplit\""
- uid: excel.Excel.ChartSeries.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartSeries.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartSeriesData
      description: ''
- uid: excel.Excel.ChartSeries.trendlines
  summary: >-
    Representa una colección de líneas de tendencia de la serie. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: trendlines
  fullName: excel.Excel.ChartSeries.trendlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
    return:
      type:
      - excel.Excel.ChartTrendlineCollection
- uid: excel.Excel.ChartSeries.varyByCategories
  summary: >-
    True si Microsoft Excel asigna un color o trama diferente a cada marcador de datos. El gráfico debe contener una sola serie. Lectura y escritura.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: varyByCategories
  fullName: excel.Excel.ChartSeries.varyByCategories
  langs:
  - typeScript
  type: property
  syntax:
    content: 'varyByCategories: boolean;'
    return:
      type:
      - boolean
