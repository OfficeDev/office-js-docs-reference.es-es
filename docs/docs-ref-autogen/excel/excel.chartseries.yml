### YamlMime:UniversalReference
ms.openlocfilehash: 2b3e79dc9041287b8439d8468848fbd345c13b01
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 09/20/2018
ms.locfileid: "24053402"
items:
- uid: excel.Excel.ChartSeries
  summary: >-
    <span data-ttu-id="10a55-101">Representa una serie de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="10a55-101">Represents a series in a chart.</span></span>


    <span data-ttu-id="10a55-102">\[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartSeries
  fullName: excel.Excel.ChartSeries
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartSeries.chartType
  - excel.Excel.ChartSeries.delete
  - excel.Excel.ChartSeries.doughnutHoleSize
  - excel.Excel.ChartSeries.filtered
  - excel.Excel.ChartSeries.format
  - excel.Excel.ChartSeries.gapWidth
  - excel.Excel.ChartSeries.hasDataLabels
  - excel.Excel.ChartSeries.load
  - excel.Excel.ChartSeries.markerBackgroundColor
  - excel.Excel.ChartSeries.markerForegroundColor
  - excel.Excel.ChartSeries.markerSize
  - excel.Excel.ChartSeries.markerStyle
  - excel.Excel.ChartSeries.name
  - excel.Excel.ChartSeries.plotOrder
  - excel.Excel.ChartSeries.points
  - excel.Excel.ChartSeries.setBubbleSizes
  - excel.Excel.ChartSeries.setValues
  - excel.Excel.ChartSeries.setXAxisValues
  - excel.Excel.ChartSeries.showShadow
  - excel.Excel.ChartSeries.smooth
  - excel.Excel.ChartSeries.toJSON
  - excel.Excel.ChartSeries.trendlines
- uid: excel.Excel.ChartSeries.chartType
  summary: >-
    <span data-ttu-id="10a55-103">Representa el tipo de gráfico de una serie.</span><span class="sxs-lookup"><span data-stu-id="10a55-103">Represents the chart type of a series.</span></span> <span data-ttu-id="10a55-104">Para obtener información detallada, vea Excel.ChartType.</span><span class="sxs-lookup"><span data-stu-id="10a55-104">See Excel.ChartType for details.</span></span>


    <span data-ttu-id="10a55-105">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-105">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: chartType
  fullName: excel.Excel.ChartSeries.chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.ChartSeries.delete
  summary: >-
    <span data-ttu-id="10a55-106">Elimina la serie del gráfico.</span><span class="sxs-lookup"><span data-stu-id="10a55-106">Deletes the chart series.</span></span>


    <span data-ttu-id="10a55-107">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-107">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.ChartSeries.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-108\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series;\n    let series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.doughnutHoleSize
  summary: >-
    <span data-ttu-id="10a55-109">Representa el tamaño del agujero anillos de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-109">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="10a55-110">Sólo es válido en los gráficos de anillos y doughnutExploded.</span><span class="sxs-lookup"><span data-stu-id="10a55-110">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="10a55-111">Genera una excepción de argumento no válido en los gráficos no válidos.</span><span class="sxs-lookup"><span data-stu-id="10a55-111">Throws an invalid argument exception on invalid charts.</span></span>


    <span data-ttu-id="10a55-112">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-112">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: doughnutHoleSize
  fullName: excel.Excel.ChartSeries.doughnutHoleSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.filtered
  summary: >-
    <span data-ttu-id="10a55-113">Valor de tipo Boolean que representa si la serie se ha filtrado o no.</span><span class="sxs-lookup"><span data-stu-id="10a55-113">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="10a55-114">No es aplicable para los gráficos de superficie.</span><span class="sxs-lookup"><span data-stu-id="10a55-114">Not applicable for surface charts.</span></span>


    <span data-ttu-id="10a55-115">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-115">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filtered
  fullName: excel.Excel.ChartSeries.filtered
  langs:
  - typeScript
  type: property
  syntax:
    content: 'filtered: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.format
  summary: >-
    <span data-ttu-id="10a55-p104">Representa el formato de una serie del gráfico, que incluye el formato de relleno y de línea. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="10a55-p104">Represents the formatting of a chart series, which includes fill and line formatting. Read-only.</span></span>


    <span data-ttu-id="10a55-118">\[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-118">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: excel.Excel.ChartSeries.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartSeriesFormat;'
    return:
      type:
      - excel.Excel.ChartSeriesFormat
- uid: excel.Excel.ChartSeries.gapWidth
  summary: >-
    <span data-ttu-id="10a55-119">Representa el ancho del rango de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-119">Represents the gap width of a chart series.</span></span> <span data-ttu-id="10a55-120">Sólo es válido en barra y los gráficos de columnas, así como clases específicas de línea y gráficos circulares.</span><span class="sxs-lookup"><span data-stu-id="10a55-120">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="10a55-121">Genera una excepción de argumento no válido en los gráficos no válidos.</span><span class="sxs-lookup"><span data-stu-id="10a55-121">Throws an invalid argument exception on invalid charts.</span></span>


    <span data-ttu-id="10a55-122">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-122">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: gapWidth
  fullName: excel.Excel.ChartSeries.gapWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gapWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.hasDataLabels
  summary: >-
    <span data-ttu-id="10a55-123">Valor de tipo Boolean que representa si la serie tiene rótulos de datos o no.</span><span class="sxs-lookup"><span data-stu-id="10a55-123">Boolean value representing if the series has data labels or not.</span></span>


    <span data-ttu-id="10a55-124">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-124">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hasDataLabels
  fullName: excel.Excel.ChartSeries.hasDataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.load
  summary: <span data-ttu-id="10a55-125">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="10a55-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="10a55-126">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="10a55-126">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"10a55-127\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-127\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"10a55-128\">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-128\">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"10a55-129\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-129\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id=\"10a55-130\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-130\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"10a55-131\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-131\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"10a55-132\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-132\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"10a55-133\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-133\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-134\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-134\">Examples</span></span>\n\n```javascript\n// Rename the 1st series of Chart1 to \"New Series Name\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.series.getItemAt(0).name = \"New Series Name\";\n    return ctx.sync().then(function() {\n            console.log(\"Series1 Renamed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.ChartSeries.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="10a55-135">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="10a55-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartSeries.markerBackgroundColor
  summary: >-
    <span data-ttu-id="10a55-136">Representa el color de fondo de los marcadores de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-136">Represents markers background color of a chart series.</span></span>


    <span data-ttu-id="10a55-137">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-137">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerBackgroundColor
  fullName: excel.Excel.ChartSeries.markerBackgroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-138\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-138\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerForegroundColor
  summary: >-
    <span data-ttu-id="10a55-139">Representa el color de primer plano de los marcadores de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-139">Represents markers foreground color of a chart series.</span></span>


    <span data-ttu-id="10a55-140">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-140">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerForegroundColor
  fullName: excel.Excel.ChartSeries.markerForegroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-141\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerSize
  summary: >-
    <span data-ttu-id="10a55-142">Representa el tamaño de los marcadores de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-142">Represents marker size of a chart series.</span></span>


    <span data-ttu-id="10a55-143">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-143">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerSize
  fullName: excel.Excel.ChartSeries.markerSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerSize: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-144\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-144\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerStyle
  summary: >-
    <span data-ttu-id="10a55-145">Representa el estilo del marcador de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-145">Represents marker style of a chart series.</span></span> <span data-ttu-id="10a55-146">Para obtener información detallada, vea Excel.ChartMarkerStyle.</span><span class="sxs-lookup"><span data-stu-id="10a55-146">See Excel.ChartMarkerStyle for details.</span></span>


    <span data-ttu-id="10a55-147">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-147">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: markerStyle
  fullName: excel.Excel.ChartSeries.markerStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
    return:
      type:
      - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-148\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-148\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.name
  summary: >-
    <span data-ttu-id="10a55-149">Representa el nombre de una serie de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="10a55-149">Represents the name of a series in a chart.</span></span>


    <span data-ttu-id="10a55-150">\[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-150">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: excel.Excel.ChartSeries.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.plotOrder
  summary: >-
    <span data-ttu-id="10a55-151">Representa el orden de trazado de una serie de gráficos en el grupo de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-151">Represents the plot order of a chart series within the chart group.</span></span>


    <span data-ttu-id="10a55-152">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-152">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotOrder
  fullName: excel.Excel.ChartSeries.plotOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotOrder: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.points
  summary: >-
    <span data-ttu-id="10a55-p109">Representa una colección de todos los puntos de la serie. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="10a55-p109">Represents a collection of all points in the series. Read-only.</span></span>


    <span data-ttu-id="10a55-155">\[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-155">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: points
  fullName: excel.Excel.ChartSeries.points
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly points: Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
- uid: excel.Excel.ChartSeries.setBubbleSizes
  summary: >-
    <span data-ttu-id="10a55-156">Establecer los tamaños de burbuja para una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-156">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="10a55-157">Sólo funciona para los gráficos de burbujas.</span><span class="sxs-lookup"><span data-stu-id="10a55-157">Only works for bubble charts.</span></span>


    <span data-ttu-id="10a55-158">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-158">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setBubbleSizes(sourceData)
  fullName: excel.Excel.ChartSeries.setBubbleSizes
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: <span data-ttu-id="10a55-159">Objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="10a55-159">The Range object corresponding to the source data.</span></span>
      type:
      - Range
- uid: excel.Excel.ChartSeries.setValues
  summary: >-
    <span data-ttu-id="10a55-160">Establezca los valores de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-160">Set values for a chart series.</span></span> <span data-ttu-id="10a55-161">Gráfico de dispersión, significa que los valores del eje Y.</span><span class="sxs-lookup"><span data-stu-id="10a55-161">For scatter chart, it means Y axis values.</span></span>


    <span data-ttu-id="10a55-162">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-162">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setValues(sourceData)
  fullName: excel.Excel.ChartSeries.setValues
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"10a55-163\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"10a55-163\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series;\n\n    // Add new series.\n    let series = seriesCollection.add(\"New Product\");\n    let values = sheet.getRange(\"E2:E7\");\n\n    // Set the vertical values for the series.\n    series.setValues(values);\n    seriesCollection.load(\"count\");\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Number of series  = \" + seriesCollection.count);\n});\n```"
    parameters:
    - id: sourceData
      description: <span data-ttu-id="10a55-164">Objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="10a55-164">The Range object corresponding to the source data.</span></span>
      type:
      - Range
- uid: excel.Excel.ChartSeries.setXAxisValues
  summary: >-
    <span data-ttu-id="10a55-165">Establecer los valores de X del eje de una serie de gráficos.</span><span class="sxs-lookup"><span data-stu-id="10a55-165">Set values of X axis for a chart series.</span></span> <span data-ttu-id="10a55-166">Sólo funciona para los gráficos de dispersión.</span><span class="sxs-lookup"><span data-stu-id="10a55-166">Only works for scatter charts.</span></span>


    <span data-ttu-id="10a55-167">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-167">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setXAxisValues(sourceData)
  fullName: excel.Excel.ChartSeries.setXAxisValues
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: <span data-ttu-id="10a55-168">Objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="10a55-168">The Range object corresponding to the source data.</span></span>
      type:
      - Range
- uid: excel.Excel.ChartSeries.showShadow
  summary: >-
    <span data-ttu-id="10a55-169">Valor de tipo Boolean que representa si la serie tiene una sombra o no.</span><span class="sxs-lookup"><span data-stu-id="10a55-169">Boolean value representing if the series has a shadow or not.</span></span>


    <span data-ttu-id="10a55-170">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-170">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showShadow
  fullName: excel.Excel.ChartSeries.showShadow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showShadow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.smooth
  summary: >-
    <span data-ttu-id="10a55-171">Valor de tipo Boolean que representa si la serie es suave o no.</span><span class="sxs-lookup"><span data-stu-id="10a55-171">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="10a55-172">Sólo se aplica a gráficos de líneas y dispersión.</span><span class="sxs-lookup"><span data-stu-id="10a55-172">Only applicable to line and scatter charts.</span></span>


    <span data-ttu-id="10a55-173">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-173">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: smooth
  fullName: excel.Excel.ChartSeries.smooth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'smooth: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartSeries.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartSeriesData
      description: ''
- uid: excel.Excel.ChartSeries.trendlines
  summary: >-
    <span data-ttu-id="10a55-174">Representa una colección de líneas de tendencia de la serie.</span><span class="sxs-lookup"><span data-stu-id="10a55-174">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="10a55-175">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="10a55-175">Read-only.</span></span>


    <span data-ttu-id="10a55-176">\[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10a55-176">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: trendlines
  fullName: excel.Excel.ChartSeries.trendlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
    return:
      type:
      - excel.Excel.ChartTrendlineCollection
