### YamlMime:UniversalReference
items:
  - uid: excel.Excel.CustomConditionalFormat
    summary: |-
      <span data-ttu-id="55e56-101">Representa un tipo de formato condicional personalizado.</span><span class="sxs-lookup"><span data-stu-id="55e56-101">Represents a custom conditional format type.</span></span>

      <span data-ttu-id="55e56-102">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="55e56-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.CustomConditionalFormat
    fullName: Excel.CustomConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.CustomConditionalFormat.context
      - excel.Excel.CustomConditionalFormat.format
      - excel.Excel.CustomConditionalFormat.load
      - excel.Excel.CustomConditionalFormat.load_1
      - excel.Excel.CustomConditionalFormat.load_2
      - excel.Excel.CustomConditionalFormat.rule
      - excel.Excel.CustomConditionalFormat.set
      - excel.Excel.CustomConditionalFormat.set_1
      - excel.Excel.CustomConditionalFormat.toJSON
  - uid: excel.Excel.CustomConditionalFormat.context
    summary: <span data-ttu-id="55e56-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="55e56-103">The request context associated with the object.</span></span> <span data-ttu-id="55e56-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="55e56-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.CustomConditionalFormat.format
    summary: |-
      <span data-ttu-id="55e56-105">Devuelve un objeto Format, encapsulando la fuente de los formatos condicionales, el relleno, los bordes y otras propiedades.</span><span class="sxs-lookup"><span data-stu-id="55e56-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id="55e56-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="55e56-106">Read-only.</span></span>

      <span data-ttu-id="55e56-107">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="55e56-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="55e56-108">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="55e56-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel.Excel.CustomConditionalFormat.load
    summary: '<span data-ttu-id="55e56-109">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="55e56-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="55e56-110">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="55e56-110">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="55e56-111">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="55e56-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="55e56-112">`load(option?: string | string[]): Excel.CustomConditionalFormat`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="55e56-112">`load(option?: string | string[]): Excel.CustomConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="55e56-113">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="55e56-113">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="55e56-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="55e56-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="55e56-115">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="55e56-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="55e56-116">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="55e56-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="55e56-117">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="55e56-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="55e56-118">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="55e56-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CustomConditionalFormatLoadOptions): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.CustomConditionalFormatLoadOptions
  - uid: excel.Excel.CustomConditionalFormat.load_1
    summary: <span data-ttu-id="55e56-119">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="55e56-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="55e56-120">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="55e56-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="55e56-121">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="55e56-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.CustomConditionalFormat.load_2
    summary: <span data-ttu-id="55e56-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="55e56-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="55e56-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="55e56-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="55e56-124">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="55e56-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.CustomConditionalFormat.rule
    summary: |-
      <span data-ttu-id="55e56-125">Representa el objeto Rule en este formato condicional.</span><span class="sxs-lookup"><span data-stu-id="55e56-125">Represents the Rule object on this conditional format.</span></span> <span data-ttu-id="55e56-126">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="55e56-126">Read-only.</span></span>

      <span data-ttu-id="55e56-127">\[[Conjunto de API: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="55e56-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rule: Excel.ConditionalFormatRule;'
      return:
        type:
          - excel.Excel.ConditionalFormatRule
        description: |-


          #### <a name="examples"></a><span data-ttu-id="55e56-128">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="55e56-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var sheet = ctx.workbook.worksheets.getActiveWorksheet();
              var range = sheet.getRange("A1:A5");
              range.values = [[1], [20], [""], [5], ["test"]];
              var cf = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              var cfCustom = cf.customOrNullObject;
              cfCustom.rule.formula = "=ISBLANK(A1)";
              cfCustom.format.fill.color = "#00FF00";
              return ctx.sync().then(function () {
                  console.log("Added new custom conditional format highlighting all blank cells.");
              });
          }).catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.CustomConditionalFormat.set
    summary: '<span data-ttu-id="55e56-129">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="55e56-129">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="55e56-130">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="55e56-130">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="55e56-131">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="55e56-131">This method has the following additional signature:</span></span>

      `set(properties: Excel.CustomConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CustomConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="55e56-132">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="55e56-132">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.CustomConditionalFormatUpdateData
        - id: options
          description: <span data-ttu-id="55e56-133">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="55e56-133">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.CustomConditionalFormat.set_1
    summary: '<span data-ttu-id="55e56-134">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="55e56-134">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.CustomConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.CustomConditionalFormat
  - uid: excel.Excel.CustomConditionalFormat.toJSON
    summary: '<span data-ttu-id="55e56-135">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="55e56-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="55e56-136">.</span><span class="sxs-lookup"><span data-stu-id="55e56-136"></span></span> <span data-ttu-id="55e56-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="55e56-137"></span></span><!-- --><span data-ttu-id="55e56-138">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. CustomConditionalFormat original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.CustomConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="55e56-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CustomConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomConditionalFormatData`</span></span><!-- --><span data-ttu-id="55e56-139">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="55e56-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CustomConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.CustomConditionalFormatData
        description: ''