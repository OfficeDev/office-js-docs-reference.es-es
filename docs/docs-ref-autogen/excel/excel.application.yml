### YamlMime:UniversalReference
ms.openlocfilehash: a65880612d7566db70a0e06a77dfd72488fc8e31
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977235"
items:
- uid: excel.Excel.Application
  summary: >-
    <span data-ttu-id="cb91a-101">Representa la aplicación de Excel que administra el libro.</span><span class="sxs-lookup"><span data-stu-id="cb91a-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="cb91a-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cb91a-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculate_1
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.context
  - excel.Excel.Application.load
  - excel.Excel.Application.load_1
  - excel.Excel.Application.load_2
  - excel.Excel.Application.set
  - excel.Excel.Application.set_1
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="cb91a-103">Recalcula todos los libros abiertos actualmente en Excel.</span><span class="sxs-lookup"><span data-stu-id="cb91a-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="cb91a-104">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cb91a-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: calculate(calculationType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: calculationType
      description: <span data-ttu-id="cb91a-105">Especifica el tipo de cálculo que desea utilizar.</span><span class="sxs-lookup"><span data-stu-id="cb91a-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="cb91a-106">Para obtener información detallada, vea Excel.CalculationType.</span><span class="sxs-lookup"><span data-stu-id="cb91a-106">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculate_1
  summary: >-
    <span data-ttu-id="cb91a-107">Recalcula todos los libros abiertos actualmente en Excel.</span><span class="sxs-lookup"><span data-stu-id="cb91a-107">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="cb91a-108">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cb91a-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationTypeString)
  fullName: calculate(calculationTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"cb91a-109\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"cb91a-109\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationTypeString
      description: <span data-ttu-id="cb91a-110">Especifica el tipo de cálculo que desea utilizar.</span><span class="sxs-lookup"><span data-stu-id="cb91a-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="cb91a-111">Para obtener información detallada, vea Excel.CalculationType.</span><span class="sxs-lookup"><span data-stu-id="cb91a-111">See Excel.CalculationType for details.</span></span>
      type:
      - "\"Recalculate\" | \"Full\" | \"FullRebuild\""
- uid: excel.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="cb91a-112">Devuelve el modo de cálculo que se usa en el libro, tal como se define por las constantes en Excel.CalculationMode.</span><span class="sxs-lookup"><span data-stu-id="cb91a-112">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="cb91a-113">Los valores posibles son: `Automatic` <!-- -->, donde Excel controla la actualización; `AutomaticExceptTables` <!-- -->, donde Excel controla los cálculos pero pasa por alto los cambios en las tablas; `Manual` <!-- -->, donde el cálculo se realiza cuando el usuario lo solicita.</span><span class="sxs-lookup"><span data-stu-id="cb91a-113">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="cb91a-114">\[[Conjunto de API: ExcelApi 1.1 para get, 1,8 para conjunto de](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cb91a-114">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.context
  summary: <span data-ttu-id="cb91a-115">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="cb91a-115">The request context associated with the object.</span></span> <span data-ttu-id="cb91a-116">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="cb91a-116">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Application.load
  summary: <span data-ttu-id="cb91a-117">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="cb91a-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cb91a-118">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cb91a-118">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="cb91a-119">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="cb91a-119">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="cb91a-120">`load(option?: string | string[]): Excel.Application`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="cb91a-120">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="cb91a-121">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="cb91a-121">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="cb91a-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="cb91a-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="cb91a-123">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="cb91a-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="cb91a-124">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="cb91a-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="cb91a-125">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="cb91a-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="cb91a-126">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb91a-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ApplicationLoadOptions
- uid: excel.Excel.Application.load_1
  summary: <span data-ttu-id="cb91a-127">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="cb91a-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cb91a-128">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cb91a-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"cb91a-129\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"cb91a-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="cb91a-130">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="cb91a-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Application.load_2
  summary: <span data-ttu-id="cb91a-131">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="cb91a-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cb91a-132">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cb91a-132">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="cb91a-133">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="cb91a-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Application.set
  summary: <span data-ttu-id="cb91a-134">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="cb91a-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="cb91a-135">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="cb91a-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="cb91a-136">Este método no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="cb91a-136">This method has the following additional signature:</span></span>


    `set(properties: Excel.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="cb91a-137">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="cb91a-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: <span data-ttu-id="cb91a-138">Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb91a-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Application.set_1
  summary: <span data-ttu-id="cb91a-139">Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="cb91a-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Application
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="cb91a-p110">Suspende el cálculo hasta que se llama al siguiente "context.sync()". Una vez establecido, será responsabilidad del desarrollador actualizar el libro para asegurarse de que se propaguen las dependencias.</span><span class="sxs-lookup"><span data-stu-id="cb91a-p110">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="cb91a-142">\[[Conjunto de API: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cb91a-142">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: suspendApiCalculationUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.toJSON
  summary: <span data-ttu-id="cb91a-143">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="cb91a-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="cb91a-144">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto Excel.Application original es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.ApplicationData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="cb91a-144">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
