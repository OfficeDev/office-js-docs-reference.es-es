### YamlMime:UniversalReference
ms.openlocfilehash: 77d54bf73c7afc4b7a94f343c1ca6fe8643de29e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975343"
items:
- uid: excel.Excel.PivotField
  summary: >-
    <span data-ttu-id="a138d-101">Representa el campo de tabla dinámica de Excel.</span><span class="sxs-lookup"><span data-stu-id="a138d-101">Represents the Excel PivotField.</span></span>


    <span data-ttu-id="a138d-102">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotField
  fullName: Excel.PivotField
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotField.context
  - excel.Excel.PivotField.id
  - excel.Excel.PivotField.items
  - excel.Excel.PivotField.load
  - excel.Excel.PivotField.load_1
  - excel.Excel.PivotField.load_2
  - excel.Excel.PivotField.name
  - excel.Excel.PivotField.set
  - excel.Excel.PivotField.set_1
  - excel.Excel.PivotField.showAllItems
  - excel.Excel.PivotField.sortByLabels
  - excel.Excel.PivotField.subtotals
  - excel.Excel.PivotField.toJSON
- uid: excel.Excel.PivotField.context
  summary: <span data-ttu-id="a138d-103">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="a138d-103">The request context associated with the object.</span></span> <span data-ttu-id="a138d-104">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="a138d-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotField.id
  summary: >-
    <span data-ttu-id="a138d-105">Identificador de PivotField.</span><span class="sxs-lookup"><span data-stu-id="a138d-105">Id of the PivotField.</span></span>


    <span data-ttu-id="a138d-106">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotField.items
  summary: >-
    <span data-ttu-id="a138d-107">Devuelve los PivotFields asociados con el PivotField.</span><span class="sxs-lookup"><span data-stu-id="a138d-107">Returns the PivotFields associated with the PivotField.</span></span>


    <span data-ttu-id="a138d-108">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotItemCollection;'
    return:
      type:
      - excel.Excel.PivotItemCollection
- uid: excel.Excel.PivotField.load
  summary: <span data-ttu-id="a138d-109">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a138d-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a138d-110">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a138d-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a138d-111">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="a138d-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a138d-112">`load(option?: string | string[]): Excel.PivotField`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="a138d-112">`load(option?: string | string[]): Excel.PivotField` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a138d-113">`load(option?: { select?: string; expand?: string; }): Excel.PivotField`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="a138d-113">`load(option?: { select?: string; expand?: string; }): Excel.PivotField` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a138d-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="a138d-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField` - Only available on collection types.</span></span> <span data-ttu-id="a138d-115">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="a138d-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="a138d-116">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a138d-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a138d-117">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a138d-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a138d-118">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a138d-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotFieldLoadOptions
- uid: excel.Excel.PivotField.load_1
  summary: <span data-ttu-id="a138d-119">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a138d-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a138d-120">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a138d-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a138d-121">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="a138d-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotField.load_2
  summary: <span data-ttu-id="a138d-122">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a138d-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a138d-123">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a138d-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="a138d-124">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="a138d-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.PivotField.name
  summary: >-
    <span data-ttu-id="a138d-125">Nombre de PivotField.</span><span class="sxs-lookup"><span data-stu-id="a138d-125">Name of the PivotField.</span></span>


    <span data-ttu-id="a138d-126">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-126">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotField.set
  summary: <span data-ttu-id="a138d-127">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="a138d-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a138d-128">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="a138d-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="a138d-129">Este método no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="a138d-129">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotField): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="a138d-130">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a138d-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotFieldUpdateData
    - id: options
      description: <span data-ttu-id="a138d-131">Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="a138d-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.PivotField.set_1
  summary: <span data-ttu-id="a138d-132">Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="a138d-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotField): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotField
- uid: excel.Excel.PivotField.showAllItems
  summary: >-
    <span data-ttu-id="a138d-133">Determina si se muestran todos los elementos de PivotField.</span><span class="sxs-lookup"><span data-stu-id="a138d-133">Determines whether to show all items of the PivotField.</span></span>


    <span data-ttu-id="a138d-134">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-134">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showAllItems
  fullName: showAllItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllItems: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotField.sortByLabels
  summary: >-
    <span data-ttu-id="a138d-135">Ordena el PivotField.</span><span class="sxs-lookup"><span data-stu-id="a138d-135">Sorts the PivotField.</span></span> <span data-ttu-id="a138d-136">Si se especifica una DataPivotHierarchy, entonces el orden se aplicará basándose en ella, si no, se basará en el propio PivotField.</span><span class="sxs-lookup"><span data-stu-id="a138d-136">If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.</span></span>


    <span data-ttu-id="a138d-137">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-137">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sortByLabels(sortby)
  fullName: sortByLabels(sortby)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sortByLabels(sortby: SortBy): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sortby
      description: <span data-ttu-id="a138d-138">Indica si la ordenación se realiza en un orden ascendente o descendente.</span><span class="sxs-lookup"><span data-stu-id="a138d-138">Represents whether the sorting is done in an ascending or descending order.</span></span>
      type:
      - excel.Excel.SortBy
- uid: excel.Excel.PivotField.subtotals
  summary: >-
    <span data-ttu-id="a138d-139">Subtotales del PivotField.	</span><span class="sxs-lookup"><span data-stu-id="a138d-139">Subtotals of the PivotField.</span></span>


    <span data-ttu-id="a138d-140">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a138d-140">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: subtotals
  fullName: subtotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotals: Excel.Subtotals;'
    return:
      type:
      - excel.Excel.Subtotals
- uid: excel.Excel.PivotField.toJSON
  summary: <span data-ttu-id="a138d-141">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="a138d-141">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a138d-142">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.PivotField es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.PivotFieldData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="a138d-142">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotField object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotFieldData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotFieldData
      description: ''
