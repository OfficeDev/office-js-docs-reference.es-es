### YamlMime:UniversalReference
ms.openlocfilehash: e87c660e1b41ad1a0112dc93abc1df6a29de8925
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976134"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="e413a-101">Representa un nombre definido para un rango de celdas o un valor.</span><span class="sxs-lookup"><span data-stu-id="e413a-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="e413a-102">Nombres puede ser primitivo objetos con nombre (como se muestra en el tipo que aparece a continuaci贸n), intervalo de objeto, o una referencia a un rango.</span><span class="sxs-lookup"><span data-stu-id="e413a-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="e413a-103">Este objeto puede utilizarse para obtener el objeto range asociado con los nombres.</span><span class="sxs-lookup"><span data-stu-id="e413a-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="e413a-104">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.context
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.load_1
  - excel.Excel.NamedItem.load_2
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.set
  - excel.Excel.NamedItem.set_1
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="e413a-105">Devuelve un objeto que contiene los valores y tipos del elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="e413a-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="e413a-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e413a-106">Read-only.</span></span>


    <span data-ttu-id="e413a-107">\[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="e413a-108">Representa el comentario asociado a este nombre.</span><span class="sxs-lookup"><span data-stu-id="e413a-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="e413a-109">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.context
  summary: <span data-ttu-id="e413a-110">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="e413a-110">The request context associated with the object.</span></span> <span data-ttu-id="e413a-111">Este comando conecta proceso del complemento al proceso de la aplicaci贸n host de Office.</span><span class="sxs-lookup"><span data-stu-id="e413a-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="e413a-112">Elimina el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="e413a-112">Deletes the given name.</span></span>


    <span data-ttu-id="e413a-113">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e413a-114\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e413a-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="e413a-115">Obtiene o establece la f贸rmula del elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="e413a-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="e413a-116">La f贸rmula siempre comienza con el signo "=".</span><span class="sxs-lookup"><span data-stu-id="e413a-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="e413a-117">\[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e413a-118\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e413a-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="e413a-p105">Devuelve el objeto de rango asociado al nombre. Se produce un error si el tipo del elemento con nombre no es un rango.</span><span class="sxs-lookup"><span data-stu-id="e413a-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="e413a-121">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e413a-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e413a-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="e413a-p106">Devuelve el objeto de rango asociado al nombre. Devuelve un objeto NULL si el tipo de elemento con nombre no es un rango.</span><span class="sxs-lookup"><span data-stu-id="e413a-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="e413a-125">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="e413a-126">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="e413a-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e413a-127">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e413a-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="e413a-128">Adem谩s de esta firma, este m茅todo no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="e413a-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="e413a-129">`load(option?: string | string[]): Excel.NamedItem`-Donde opci贸n es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="e413a-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="e413a-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegaci贸n para cargar.</span><span class="sxs-lookup"><span data-stu-id="e413a-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="e413a-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-S贸lo est谩 disponible en los tipos de colecci贸n.</span><span class="sxs-lookup"><span data-stu-id="e413a-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="e413a-132">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="e413a-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="e413a-133">Option.Top especifica el n煤mero m谩ximo de elementos de la colecci贸n que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="e413a-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e413a-134">Option.Skip especifica el n煤mero de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="e413a-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e413a-135">Si se especifica option.top, se iniciar谩 el conjunto de resultados despu茅s de omitir el n煤mero especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="e413a-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.NamedItemLoadOptions
- uid: excel.Excel.NamedItem.load_1
  summary: <span data-ttu-id="e413a-136">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="e413a-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e413a-137">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e413a-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e413a-138\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e413a-138\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="e413a-139">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="e413a-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.load_2
  summary: <span data-ttu-id="e413a-140">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="e413a-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e413a-141">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e413a-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="e413a-142">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegaci贸n para cargar.</span><span class="sxs-lookup"><span data-stu-id="e413a-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="e413a-p111">Nombre del objeto. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e413a-p111">The name of the object. Read-only.</span></span>


    <span data-ttu-id="e413a-145">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="e413a-146">Indica si el nombre est谩 en el 谩mbito en el libro o en una hoja de c谩lculo espec铆fica.</span><span class="sxs-lookup"><span data-stu-id="e413a-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="e413a-147">Los valores posibles son: hoja de c谩lculo, el libro.</span><span class="sxs-lookup"><span data-stu-id="e413a-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="e413a-148">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e413a-148">Read-only.</span></span>


    <span data-ttu-id="e413a-149">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.set
  summary: <span data-ttu-id="e413a-150">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="e413a-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e413a-151">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="e413a-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="e413a-152">Este m茅todo no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="e413a-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.NamedItem): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="e413a-153">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al m茅todo.</span><span class="sxs-lookup"><span data-stu-id="e413a-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.NamedItemUpdateData
    - id: options
      description: <span data-ttu-id="e413a-154">Proporciona una opci贸n para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de s贸lo lectura.</span><span class="sxs-lookup"><span data-stu-id="e413a-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.NamedItem.set_1
  summary: <span data-ttu-id="e413a-155">Establece varias propiedades en el objeto al mismo tiempo, en funci贸n de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="e413a-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.NamedItem
- uid: excel.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="e413a-156">Invalida el JavaScript `toJSON()` m茅todo con el fin de proporcionar resultados m谩s 煤tiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e413a-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e413a-157">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` m茅todo del objeto que se pasa a ella.) Mientras que el objeto original de Excel.NamedItem es un objeto de la API, el `toJSON` m茅todo devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.NamedItemData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="e413a-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="e413a-158">Indica el tipo del valor devuelto por la f贸rmula del nombre.</span><span class="sxs-lookup"><span data-stu-id="e413a-158">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="e413a-159">Para obtener informaci贸n detallada, vea Excel.NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="e413a-159">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="e413a-160">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e413a-160">Read-only.</span></span>


    <span data-ttu-id="e413a-161">\[[Conjunto de API: ExcelApi 1.1 para String, Integer, Double, Boolean, intervalo, Error; 1.7 para matriz](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-161">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="e413a-p116">Representa el valor calculado por la f贸rmula del nombre. Para un rango con nombre, devolver谩 la direcci贸n del rango. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="e413a-p116">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="e413a-165">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="e413a-166">Especifica si el objeto est谩 visible o no.</span><span class="sxs-lookup"><span data-stu-id="e413a-166">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="e413a-167">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-167">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="e413a-168">Devuelve la hoja de c谩lculo en el que tiene como 谩mbito el elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="e413a-168">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="e413a-169">Se produce un error si el elemento se limita al libro en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e413a-169">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="e413a-170">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-170">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="e413a-171">Devuelve la hoja de c谩lculo en el que tiene como 谩mbito el elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="e413a-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="e413a-172">Devuelve un objeto null si el elemento se limita al libro en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e413a-172">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="e413a-173">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e413a-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
