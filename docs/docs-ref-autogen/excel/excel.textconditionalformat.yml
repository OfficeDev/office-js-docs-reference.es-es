### YamlMime:UniversalReference
ms.openlocfilehash: c97558f3f40b4daa824c3cd7dd2feaea1d8164d2
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 09/28/2018
ms.locfileid: "24052478"
items:
- uid: excel.Excel.TextConditionalFormat
  summary: >-
    <span data-ttu-id="c974a-101">Representa un formato condicional de texto específico.</span><span class="sxs-lookup"><span data-stu-id="c974a-101">Represents a specific text conditional format.</span></span>


    <span data-ttu-id="c974a-102">\[[Conjunto de API: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c974a-102">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TextConditionalFormat
  fullName: excel.Excel.TextConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TextConditionalFormat.format
  - excel.Excel.TextConditionalFormat.load
  - excel.Excel.TextConditionalFormat.rule
  - excel.Excel.TextConditionalFormat.toJSON
- uid: excel.Excel.TextConditionalFormat.format
  summary: >-
    <span data-ttu-id="c974a-p101">Devuelve un objeto de formato que encapsula la fuente de formatos condicionales, el relleno, los bordes y otras propiedades. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c974a-p101">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only.</span></span>


    <span data-ttu-id="c974a-105">\[[Conjunto de API: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c974a-105">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: excel.Excel.TextConditionalFormat.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c974a-106\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"c974a-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.TextConditionalFormat.load
  summary: <span data-ttu-id="c974a-107">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="c974a-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c974a-108">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="c974a-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c974a-109">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="c974a-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c974a-110">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="c974a-110">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c974a-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="c974a-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="c974a-112">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="c974a-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="c974a-113">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="c974a-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c974a-114">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="c974a-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c974a-115">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="c974a-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: excel.Excel.TextConditionalFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="c974a-116">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="c974a-116">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TextConditionalFormat.rule
  summary: >-
    <span data-ttu-id="c974a-117">Regla del formato condicional.</span><span class="sxs-lookup"><span data-stu-id="c974a-117">The rule of the conditional format.</span></span>


    <span data-ttu-id="c974a-118">\[[Conjunto de API: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c974a-118">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: excel.Excel.TextConditionalFormat.rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.ConditionalTextComparisonRule;'
    return:
      type:
      - excel.Excel.ConditionalTextComparisonRule
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c974a-119\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"c974a-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.TextConditionalFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.TextConditionalFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatData
      description: ''
