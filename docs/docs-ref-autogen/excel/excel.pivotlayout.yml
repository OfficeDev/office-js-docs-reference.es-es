### YamlMime:UniversalReference
ms.openlocfilehash: c62a352c3a8f6c5f0da6526defd0bf4137251184
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981776"
items:
- uid: excel.Excel.PivotLayout
  summary: >-
    <span data-ttu-id="0b291-101">Representa el diseño visual de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-101">Represents the visual layout of the PivotTable.</span></span>


    <span data-ttu-id="0b291-102">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotLayout
  fullName: Excel.PivotLayout
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotLayout.context
  - excel.Excel.PivotLayout.getColumnLabelRange
  - excel.Excel.PivotLayout.getDataBodyRange
  - excel.Excel.PivotLayout.getFilterAxisRange
  - excel.Excel.PivotLayout.getRange
  - excel.Excel.PivotLayout.getRowLabelRange
  - excel.Excel.PivotLayout.layoutType
  - excel.Excel.PivotLayout.load
  - excel.Excel.PivotLayout.load_1
  - excel.Excel.PivotLayout.load_2
  - excel.Excel.PivotLayout.set
  - excel.Excel.PivotLayout.set_1
  - excel.Excel.PivotLayout.showColumnGrandTotals
  - excel.Excel.PivotLayout.showRowGrandTotals
  - excel.Excel.PivotLayout.subtotalLocation
  - excel.Excel.PivotLayout.toJSON
- uid: excel.Excel.PivotLayout.context
  summary: <span data-ttu-id="0b291-103">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="0b291-103">The request context associated with the object.</span></span> <span data-ttu-id="0b291-104">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="0b291-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotLayout.getColumnLabelRange
  summary: >-
    <span data-ttu-id="0b291-105">Devuelve el intervalo donde residen las etiquetas de columna de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-105">Returns the range where the PivotTable's column labels reside.</span></span>


    <span data-ttu-id="0b291-106">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnLabelRange()
  fullName: getColumnLabelRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getDataBodyRange
  summary: >-
    <span data-ttu-id="0b291-107">Devuelve el intervalo donde residen los valores de datos de tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-107">Returns the range where the PivotTable's data values reside.</span></span>


    <span data-ttu-id="0b291-108">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0b291-109\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b291-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // the layout controls the ranges used by the PivotTable\n    const range = pivotTable.layout.getDataBodyRange();\n\n    // get all the data hierarchy totals\n    const grandTotalRange = range.getLastRow();\n    grandTotalRange.load(\"address\");\n    await context.sync();\n    \n    // use the wholesale and farm sale totals to make a final sum\n    const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange(\"B27:C27\");\n    masterTotalRange.formulas = [[\"All Crates\", \"=SUM(\" + grandTotalRange.address + \")\"]];\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotLayout.getFilterAxisRange
  summary: >-
    <span data-ttu-id="0b291-110">Devuelve el intervalo del área de filtro de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-110">Returns the range of the PivotTable's filter area.</span></span>


    <span data-ttu-id="0b291-111">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getFilterAxisRange()
  fullName: getFilterAxisRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilterAxisRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getRange
  summary: >-
    <span data-ttu-id="0b291-112">Devuelve el intervalo en el que existe la tabla dinámica, excluyendo el área de filtro.</span><span class="sxs-lookup"><span data-stu-id="0b291-112">Returns the range the PivotTable exists on, excluding the filter area.</span></span>


    <span data-ttu-id="0b291-113">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-113">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getRowLabelRange
  summary: >-
    <span data-ttu-id="0b291-114">Devuelve el intervalo donde residen las etiquetas de fila de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-114">Returns the range where the PivotTable's row labels reside.</span></span>


    <span data-ttu-id="0b291-115">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowLabelRange()
  fullName: getRowLabelRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.layoutType
  summary: >-
    <span data-ttu-id="0b291-116">Esta propiedad indica el PivotLayoutType de todos los campos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-116">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="0b291-117">Si los campos tienen diferentes estados, será null.</span><span class="sxs-lookup"><span data-stu-id="0b291-117">If fields have different states, this will be null.</span></span>


    <span data-ttu-id="0b291-118">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layoutType
  fullName: layoutType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
    return:
      type:
      - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
- uid: excel.Excel.PivotLayout.load
  summary: <span data-ttu-id="0b291-119">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="0b291-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b291-120">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="0b291-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="0b291-121">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="0b291-121">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="0b291-122">`load(option?: string | string[]): Excel.PivotLayout`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="0b291-122">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="0b291-123">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="0b291-123">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="0b291-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="0b291-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="0b291-125">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="0b291-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="0b291-126">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0b291-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0b291-127">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="0b291-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0b291-128">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="0b291-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotLayoutLoadOptions
- uid: excel.Excel.PivotLayout.load_1
  summary: <span data-ttu-id="0b291-129">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="0b291-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b291-130">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="0b291-130">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="0b291-131">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="0b291-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotLayout.load_2
  summary: <span data-ttu-id="0b291-132">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="0b291-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b291-133">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="0b291-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="0b291-134">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="0b291-134">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.PivotLayout.set
  summary: <span data-ttu-id="0b291-135">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="0b291-135">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0b291-136">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="0b291-136">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="0b291-137">Este método no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="0b291-137">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotLayout): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="0b291-138">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="0b291-138">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotLayoutUpdateData
    - id: options
      description: <span data-ttu-id="0b291-139">Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="0b291-139">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.PivotLayout.set_1
  summary: <span data-ttu-id="0b291-140">Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="0b291-140">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotLayout): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotLayout
- uid: excel.Excel.PivotLayout.showColumnGrandTotals
  summary: >-
    <span data-ttu-id="0b291-141">True si el informe de tabla dinámica muestra el total general de las columnas.</span><span class="sxs-lookup"><span data-stu-id="0b291-141">True if the PivotTable report shows grand totals for columns.</span></span>


    <span data-ttu-id="0b291-142">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-142">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showColumnGrandTotals
  fullName: showColumnGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showColumnGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.showRowGrandTotals
  summary: >-
    <span data-ttu-id="0b291-143">True si el informe de tabla dinámica muestra el total general de las filas.</span><span class="sxs-lookup"><span data-stu-id="0b291-143">True if the PivotTable report shows grand totals for rows.</span></span>


    <span data-ttu-id="0b291-144">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-144">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showRowGrandTotals
  fullName: showRowGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showRowGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.subtotalLocation
  summary: >-
    <span data-ttu-id="0b291-145">Esta propiedad indica el SubtotalLocationType de todos los campos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="0b291-145">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="0b291-146">Si los campos tienen diferentes estados, será null.</span><span class="sxs-lookup"><span data-stu-id="0b291-146">If fields have different states, this will be null.</span></span>


    <span data-ttu-id="0b291-147">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b291-147">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: subtotalLocation
  fullName: subtotalLocation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
    return:
      type:
      - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
- uid: excel.Excel.PivotLayout.toJSON
  summary: <span data-ttu-id="0b291-148">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0b291-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0b291-149">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.PivotLayout es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.PivotLayoutData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="0b291-149">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotLayoutData
      description: ''
