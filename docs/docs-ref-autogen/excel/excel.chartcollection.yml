### YamlMime:UniversalReference
ms.openlocfilehash: caa201aa0f663e229ab044b33f74fac051024f87
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724741"
items:
- uid: excel.Excel.ChartCollection
  summary: >-
    <span data-ttu-id="bd2fb-101">Colección de todos los objetos de gráfico en una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-101">A collection of all the chart objects on a worksheet.</span></span>


    <span data-ttu-id="bd2fb-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartCollection
  fullName: Excel.ChartCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartCollection.add
  - excel.Excel.ChartCollection.context
  - excel.Excel.ChartCollection.count
  - excel.Excel.ChartCollection.getCount
  - excel.Excel.ChartCollection.getItem
  - excel.Excel.ChartCollection.getItemAt
  - excel.Excel.ChartCollection.getItemOrNullObject
  - excel.Excel.ChartCollection.items
  - excel.Excel.ChartCollection.load
  - excel.Excel.ChartCollection.onActivated
  - excel.Excel.ChartCollection.onAdded
  - excel.Excel.ChartCollection.onDeactivated
  - excel.Excel.ChartCollection.onDeleted
  - excel.Excel.ChartCollection.toJSON
- uid: excel.Excel.ChartCollection.add
  summary: >-
    <span data-ttu-id="bd2fb-103">Crea un nuevo gráfico.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-103">Creates a new chart.</span></span>


    <span data-ttu-id="bd2fb-104">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(type, sourceData, seriesBy)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2fb-105\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-105\">Examples</span></span>\n\n```javascript\n// Add a chart of chartType \"ColumnClustered\" on worksheet \"Charts\" \n// with sourceData from Range \"A1:B4\" and seriresBy is set to be \"auto\".\nExcel.run(function (ctx) { \n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName)\n        .getRange(rangeSelection);\n    var chart = ctx.workbook.worksheets.getItem(sheetName)\n        .charts.add(\"ColumnClustered\", range, \"auto\");    return ctx.sync().then(function() {\n            console.log(\"New Chart Added\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: type
      description: <span data-ttu-id="bd2fb-106">Representa el tipo de un gráfico.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-106">Represents the type of a chart.</span></span> <span data-ttu-id="bd2fb-107">Para obtener información detallada, vea Excel.ChartType.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-107">See Excel.ChartType for details.</span></span>
      type:
      - excel.Excel.ChartType
    - id: sourceData
      description: <span data-ttu-id="bd2fb-108">Objeto Range correspondiente a los datos de origen.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-108">The Range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: <span data-ttu-id="bd2fb-109">Opcional.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-109">Optional.</span></span> <span data-ttu-id="bd2fb-110">Especifica las filas o columnas de forma que se usan como series de datos en el gráfico.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="bd2fb-111">Para obtener información detallada, vea Excel.ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-111">See Excel.ChartSeriesBy for details.</span></span>
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.ChartCollection.context
  summary: <span data-ttu-id="bd2fb-112">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-112">The request context associated with the object.</span></span> <span data-ttu-id="bd2fb-113">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartCollection.count
  summary: >-
    <span data-ttu-id="bd2fb-p104">Devuelve el número de gráficos de la hoja de cálculo. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-p104">Returns the number of charts in the worksheet. Read-only.</span></span>


    <span data-ttu-id="bd2fb-116">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartCollection.getCount
  summary: >-
    <span data-ttu-id="bd2fb-117">Devuelve el número de gráficos de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-117">Returns the number of charts in the worksheet.</span></span>


    <span data-ttu-id="bd2fb-118">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartCollection.getItem
  summary: >-
    <span data-ttu-id="bd2fb-p105">Obtiene un gráfico mediante su nombre. Si hay varias tablas con el mismo nombre, se devolverá la primera.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-p105">Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.</span></span>


    <span data-ttu-id="bd2fb-121">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2fb-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chartname = 'Chart1';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartname);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var chartId = 'SamplChartId';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartId);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="bd2fb-123">Nombre del gráfico que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-123">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.getItemAt
  summary: >-
    <span data-ttu-id="bd2fb-124">Obtiene un gráfico en función de su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-124">Gets a chart based on its position in the collection.</span></span>


    <span data-ttu-id="bd2fb-125">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2fb-126\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-126\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="bd2fb-p106">Valor de índice del objeto que se va a recuperar. Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.ChartCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="bd2fb-129">Obtiene un gráfico mediante su nombre.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-129">Gets a chart using its name.</span></span> <span data-ttu-id="bd2fb-130">Si hay varios gráficos con el mismo nombre, se devolverá el primero de ellos.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-130">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="bd2fb-131">Si el gráfico no existe, devuelve un objeto null.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-131">If the chart does not exist, will return a null object.</span></span>


    <span data-ttu-id="bd2fb-132">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-132">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="bd2fb-133">Nombre del gráfico que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-133">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.items
  summary: <span data-ttu-id="bd2fb-134">Obtiene al secundario cargado los elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-134">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Chart[];'
    return:
      type:
      - Excel.Chart[]
- uid: excel.Excel.ChartCollection.load
  summary: <span data-ttu-id="bd2fb-135">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd2fb-136">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-136">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"bd2fb-137\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-137\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"bd2fb-138\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-138\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"bd2fb-139\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-139\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"bd2fb-140\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-140\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"bd2fb-141\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-141\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"bd2fb-142\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-142\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"bd2fb-143\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-143\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2fb-144\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2fb-144\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < charts.items.length; i++)\n        {\n            console.log(charts.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of charts\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"charts: Count= \" + charts.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="bd2fb-145">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartCollection.onActivated
  summary: >-
    <span data-ttu-id="bd2fb-146">Se produce cuando se activa un gráfico.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-146">Occurs when a chart is activated.</span></span>


    <span data-ttu-id="bd2fb-147">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-147">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
- uid: excel.Excel.ChartCollection.onAdded
  summary: >-
    <span data-ttu-id="bd2fb-148">Se produce cuando se agrega un nuevo gráfico a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-148">Occurs when a new chart is added to the worksheet.</span></span>


    <span data-ttu-id="bd2fb-149">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-149">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onAdded
  fullName: onAdded
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
- uid: excel.Excel.ChartCollection.onDeactivated
  summary: >-
    <span data-ttu-id="bd2fb-150">Se produce cuando se desactiva un gráfico.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-150">Occurs when a chart is deactivated.</span></span>


    <span data-ttu-id="bd2fb-151">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-151">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
- uid: excel.Excel.ChartCollection.onDeleted
  summary: >-
    <span data-ttu-id="bd2fb-152">Se produce cuando se elimina un gráfico.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-152">Occurs when a chart is deleted.</span></span>


    <span data-ttu-id="bd2fb-153">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2fb-153">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeleted
  fullName: onDeleted
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
- uid: excel.Excel.ChartCollection.toJSON
  summary: <span data-ttu-id="bd2fb-154">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-154">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="bd2fb-155">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el original `Excel.ChartCollection` es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.ChartCollectionData` <!-- -->) que contiene una matriz de "elementos" con copias superficiales de las propiedades de elementos de la colección cargadas.</span><span class="sxs-lookup"><span data-stu-id="bd2fb-155">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartCollectionData
      description: ''
