### YamlMime:UniversalReference
ms.openlocfilehash: 0d360edd870634b2563db718bea57dd5f9421312
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975301"
items:
- uid: excel.Excel.NamedItemCollection
  summary: >-
    <span data-ttu-id="9195d-101">Una colección de todos los objetos NamedItem que forman parte del libro o la hoja de cálculo, dependiendo de cómo se ha alcanzado.</span><span class="sxs-lookup"><span data-stu-id="9195d-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="9195d-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9195d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItemCollection
  fullName: Excel.NamedItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItemCollection.add
  - excel.Excel.NamedItemCollection.addFormulaLocal
  - excel.Excel.NamedItemCollection.context
  - excel.Excel.NamedItemCollection.getCount
  - excel.Excel.NamedItemCollection.getItem
  - excel.Excel.NamedItemCollection.getItemOrNullObject
  - excel.Excel.NamedItemCollection.items
  - excel.Excel.NamedItemCollection.load
  - excel.Excel.NamedItemCollection.load_1
  - excel.Excel.NamedItemCollection.load_2
  - excel.Excel.NamedItemCollection.toJSON
- uid: excel.Excel.NamedItemCollection.add
  summary: >-
    <span data-ttu-id="9195d-103">Agrega un nuevo nombre a la colección del ámbito especificado.</span><span class="sxs-lookup"><span data-stu-id="9195d-103">Adds a new name to the collection of the given scope.</span></span>


    <span data-ttu-id="9195d-104">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9195d-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, reference, comment)
  fullName: add(name, reference, comment)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9195d-105\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"9195d-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const headerRange = sheet.getRange(\"A1:D1\");\n\n    sheet.names.add(\"ExpensesHeader\", headerRange);\n    const namedItems = sheet.names.load(\"name, type\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="9195d-106">Nombre del elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-106">The name of the named item.</span></span>
      type:
      - string
    - id: reference
      description: <span data-ttu-id="9195d-107">Fórmula o rango a los que se refiere el nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-107">The formula or the range that the name will refer to.</span></span>
      type:
      - Range | string
    - id: comment
      description: <span data-ttu-id="9195d-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="9195d-108">Optional.</span></span> <span data-ttu-id="9195d-109">El comentario asociado con el elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-109">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.addFormulaLocal
  summary: >-
    <span data-ttu-id="9195d-110">Agrega un nuevo nombre a la colección del ámbito especificado, empleando la configuración regional del usuario para la fórmula.</span><span class="sxs-lookup"><span data-stu-id="9195d-110">Adds a new name to the collection of the given scope using the user's locale for the formula.</span></span>


    <span data-ttu-id="9195d-111">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9195d-111">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFormulaLocal(name, formula, comment)
  fullName: addFormulaLocal(name, formula, comment)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="9195d-112">Elemento "name" del elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-112">The "name" of the named item.</span></span>
      type:
      - string
    - id: formula
      description: <span data-ttu-id="9195d-113">Fórmula de la configuración regional del usuario a la que se refiere el nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-113">The formula in the user's locale that the name will refer to.</span></span>
      type:
      - string
    - id: comment
      description: <span data-ttu-id="9195d-114">Opcional.</span><span class="sxs-lookup"><span data-stu-id="9195d-114">Optional.</span></span> <span data-ttu-id="9195d-115">El comentario asociado con el elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-115">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.context
  summary: <span data-ttu-id="9195d-116">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="9195d-116">The request context associated with the object.</span></span> <span data-ttu-id="9195d-117">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="9195d-117">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItemCollection.getCount
  summary: >-
    <span data-ttu-id="9195d-118">Obtiene el número de elementos con nombre de la colección.</span><span class="sxs-lookup"><span data-stu-id="9195d-118">Gets the number of named items in the collection.</span></span>


    <span data-ttu-id="9195d-119">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9195d-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.NamedItemCollection.getItem
  summary: >-
    <span data-ttu-id="9195d-120">Obtiene un objeto NamedItem utilizando su nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-120">Gets a NamedItem object using its name.</span></span>


    <span data-ttu-id="9195d-121">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9195d-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9195d-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"9195d-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = 'Sheet1';\n    var nameditem = ctx.workbook.names.getItem(sheetName);\n    nameditem.load('type');\n    return ctx.sync().then(function() {\n            console.log(nameditem.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="9195d-123">Nombre de NamedItem.</span><span class="sxs-lookup"><span data-stu-id="9195d-123">Nameditem name.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="9195d-124">Obtiene un objeto NamedItem utilizando su nombre.</span><span class="sxs-lookup"><span data-stu-id="9195d-124">Gets a NamedItem object using its name.</span></span> <span data-ttu-id="9195d-125">Si no existe el objeto nameditem, devolverá un objeto null.</span><span class="sxs-lookup"><span data-stu-id="9195d-125">If the nameditem object does not exist, will return a null object.</span></span>


    <span data-ttu-id="9195d-126">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9195d-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="9195d-127">Nombre de NamedItem.</span><span class="sxs-lookup"><span data-stu-id="9195d-127">Nameditem name.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.items
  summary: <span data-ttu-id="9195d-128">Obtiene al secundario cargado los elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="9195d-128">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.NamedItem[];'
    return:
      type:
      - Excel.NamedItem[]
- uid: excel.Excel.NamedItemCollection.load
  summary: <span data-ttu-id="9195d-129">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="9195d-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9195d-130">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="9195d-130">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="9195d-131">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="9195d-131">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="9195d-132">`load(option?: string | string[]): Excel.NamedItemCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="9195d-132">`load(option?: string | string[]): Excel.NamedItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="9195d-133">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="9195d-133">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="9195d-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="9195d-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="9195d-135">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="9195d-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="9195d-136">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="9195d-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9195d-137">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="9195d-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9195d-138">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="9195d-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.NamedItemCollection.load_1
  summary: <span data-ttu-id="9195d-139">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="9195d-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9195d-140">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="9195d-140">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9195d-141\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"9195d-141\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var nameditems = ctx.workbook.names;\n    nameditems.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < nameditems.items.length; i++)\n        {\n            console.log(nameditems.items[i].name);\n            console.log(nameditems.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="9195d-142">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="9195d-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItemCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.NamedItemCollection.toJSON
  summary: <span data-ttu-id="9195d-143">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="9195d-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="9195d-144">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el original `Excel.NamedItemCollection` es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.NamedItemCollectionData` <!-- -->) que contiene una matriz de "elementos" con copias superficiales de las propiedades de elementos de la colección cargadas.</span><span class="sxs-lookup"><span data-stu-id="9195d-144">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.NamedItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemCollectionData
      description: ''
