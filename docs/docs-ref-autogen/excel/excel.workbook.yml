### YamlMime:UniversalReference
ms.openlocfilehash: 81eb4cb2aeddc0bd92ad7e7900eb9482b0f2a02c
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303252"
items:
- uid: excel.Excel.Workbook
  summary: >-
    <span data-ttu-id="d1cd1-101">Workbook es el objeto de nivel superior que contiene los objetos de libro relacionados, como hojas de cálculo, tablas, intervalos, etc.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.</span></span>


    <span data-ttu-id="d1cd1-102">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Workbook
  fullName: Excel.Workbook
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Workbook.application
  - excel.Excel.Workbook.autoSave
  - excel.Excel.Workbook.bindings
  - excel.Excel.Workbook.calculationEngineVersion
  - excel.Excel.Workbook.chartDataPointTrack
  - excel.Excel.Workbook.close
  - excel.Excel.Workbook.close_1
  - excel.Excel.Workbook.comments
  - excel.Excel.Workbook.context
  - excel.Excel.Workbook.customXmlParts
  - excel.Excel.Workbook.dataConnections
  - excel.Excel.Workbook.functions
  - excel.Excel.Workbook.getActiveCell
  - excel.Excel.Workbook.getActiveChart
  - excel.Excel.Workbook.getActiveChartOrNullObject
  - excel.Excel.Workbook.getActiveSlicer
  - excel.Excel.Workbook.getActiveSlicerOrNullObject
  - excel.Excel.Workbook.getIsActiveCollabSession
  - excel.Excel.Workbook.getSelectedRange
  - excel.Excel.Workbook.getSelectedRanges
  - excel.Excel.Workbook.isDirty
  - excel.Excel.Workbook.load
  - excel.Excel.Workbook.load_1
  - excel.Excel.Workbook.load_2
  - excel.Excel.Workbook.name
  - excel.Excel.Workbook.names
  - excel.Excel.Workbook.onAutoSaveSettingChanged
  - excel.Excel.Workbook.onSelectionChanged
  - excel.Excel.Workbook.pivotTables
  - excel.Excel.Workbook.previouslySaved
  - excel.Excel.Workbook.properties
  - excel.Excel.Workbook.protection
  - excel.Excel.Workbook.readOnly
  - excel.Excel.Workbook.save
  - excel.Excel.Workbook.save_1
  - excel.Excel.Workbook.set
  - excel.Excel.Workbook.set_1
  - excel.Excel.Workbook.settings
  - excel.Excel.Workbook.slicers
  - excel.Excel.Workbook.styles
  - excel.Excel.Workbook.tables
  - excel.Excel.Workbook.toJSON
  - excel.Excel.Workbook.use1904DateSystem
  - excel.Excel.Workbook.usePrecisionAsDisplayed
  - excel.Excel.Workbook.worksheets
- uid: excel.Excel.Workbook.application
  summary: >-
    <span data-ttu-id="d1cd1-103">Representa la instancia de la aplicación de Excel que contiene este libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-103">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="d1cd1-104">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-104">Read-only.</span></span>


    <span data-ttu-id="d1cd1-105">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: application
  fullName: application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type:
      - excel.Excel.Application
- uid: excel.Excel.Workbook.autoSave
  summary: >-
    <span data-ttu-id="d1cd1-106">True si el libro está en modo de guardado automático.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-106">True if the workbook is in auto save mode.</span></span>


    <span data-ttu-id="d1cd1-107">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: autoSave
  fullName: autoSave
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly autoSave: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.bindings
  summary: >-
    <span data-ttu-id="d1cd1-p102">Representa una colección de enlaces que forman parte del libro. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p102">Represents a collection of bindings that are part of the workbook. Read-only.</span></span>


    <span data-ttu-id="d1cd1-110">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
- uid: excel.Excel.Workbook.calculationEngineVersion
  summary: >-
    <span data-ttu-id="d1cd1-111">Devuelve un número sobre la versión del motor de cálculo de Excel.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-111">Returns a number about the version of Excel Calculation Engine.</span></span> <span data-ttu-id="d1cd1-112">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-112">Read-Only.</span></span>


    <span data-ttu-id="d1cd1-113">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: calculationEngineVersion
  fullName: calculationEngineVersion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type:
      - number
- uid: excel.Excel.Workbook.chartDataPointTrack
  summary: >-
    <span data-ttu-id="d1cd1-114">True si todos los gráficos del libro están realizando un seguimiento de los puntos de datos reales a los que están asociados.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-114">True if all charts in the workbook are tracking the actual data points to which they are attached.</span></span> <span data-ttu-id="d1cd1-115">False si los gráficos realizan un seguimiento del índice de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-115">False if the charts track the index of the data points.</span></span>


    <span data-ttu-id="d1cd1-116">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: chartDataPointTrack
  fullName: chartDataPointTrack
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartDataPointTrack: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.close
  summary: >-
    <span data-ttu-id="d1cd1-117">Cerrar libro actual.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-117">Close current workbook.</span></span>


    <span data-ttu-id="d1cd1-118">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: close(closeBehavior)
  fullName: close(closeBehavior)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(closeBehavior?: Excel.CloseBehavior): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1cd1-119\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1cd1-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.close(Excel.CloseBehavior.save);\n});\n```"
    parameters:
    - id: closeBehavior
      description: <span data-ttu-id="d1cd1-120">comportamiento de cierre de libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-120">workbook close behavior.</span></span>
      type:
      - excel.Excel.CloseBehavior
- uid: excel.Excel.Workbook.close_1
  summary: >-
    <span data-ttu-id="d1cd1-121">Cerrar libro actual.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-121">Close current workbook.</span></span>


    <span data-ttu-id="d1cd1-122">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: close(closeBehaviorString)
  fullName: close(closeBehaviorString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(closeBehaviorString?: "Save" | "SkipSave"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: closeBehaviorString
      description: <span data-ttu-id="d1cd1-123">comportamiento de cierre de libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-123">workbook close behavior.</span></span>
      type:
      - "\"Save\" | \"SkipSave\""
- uid: excel.Excel.Workbook.comments
  summary: >-
    <span data-ttu-id="d1cd1-124">Representa una colección de comentarios asociados con el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-124">Represents a collection of Comments associated with the workbook.</span></span> <span data-ttu-id="d1cd1-125">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-125">Read-only.</span></span>


    <span data-ttu-id="d1cd1-126">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: comments
  fullName: comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Excel.CommentCollection;'
    return:
      type:
      - excel.Excel.CommentCollection
- uid: excel.Excel.Workbook.context
  summary: <span data-ttu-id="d1cd1-127">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-127">The request context associated with the object.</span></span> <span data-ttu-id="d1cd1-128">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-128">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Workbook.customXmlParts
  summary: >-
    <span data-ttu-id="d1cd1-p107">Representa la colección de elementos XML personalizados incluidos en este libro. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p107">Represents the collection of custom XML parts contained by this workbook. Read-only.</span></span>


    <span data-ttu-id="d1cd1-131">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-131">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type:
      - excel.Excel.CustomXmlPartCollection
- uid: excel.Excel.Workbook.dataConnections
  summary: >-
    <span data-ttu-id="d1cd1-132">Representa todas las conexiones de datos en el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-132">Represents all data connections in the workbook.</span></span> <span data-ttu-id="d1cd1-133">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-133">Read-only.</span></span>


    <span data-ttu-id="d1cd1-134">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-134">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataConnections
  fullName: dataConnections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type:
      - excel.Excel.DataConnectionCollection
- uid: excel.Excel.Workbook.functions
  summary: >-
    <span data-ttu-id="d1cd1-135">Representa una colección de funciones de hoja de cálculo que se pueden usar para el cálculo.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-135">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="d1cd1-136">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-136">Read-only.</span></span>


    <span data-ttu-id="d1cd1-137">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-137">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: functions
  fullName: functions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type:
      - excel.Excel.Functions
- uid: excel.Excel.Workbook.getActiveCell
  summary: >-
    <span data-ttu-id="d1cd1-138">Obtiene la celda activa del libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-138">Gets the currently active cell from the workbook.</span></span>


    <span data-ttu-id="d1cd1-139">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-139">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getActiveCell()
  fullName: getActiveCell()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1cd1-140\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1cd1-140\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- uid: excel.Excel.Workbook.getActiveChart
  summary: >-
    <span data-ttu-id="d1cd1-141">Obtiene el gráfico actualmente activo en el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-141">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="d1cd1-142">Si no hay ningún gráfico activo, se producirá una excepción al invocar esta instrucción.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-142">If there is no active chart, will throw exception when invoke this statement</span></span>


    <span data-ttu-id="d1cd1-143">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-143">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveChart()
  fullName: getActiveChart()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveChart(): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
- uid: excel.Excel.Workbook.getActiveChartOrNullObject
  summary: >-
    <span data-ttu-id="d1cd1-144">Obtiene el gráfico actualmente activo en el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-144">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="d1cd1-145">Si no hay ningún gráfico activo, se devolverá un objeto null.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-145">If there is no active chart, will return null object</span></span>


    <span data-ttu-id="d1cd1-146">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveChartOrNullObject()
  fullName: getActiveChartOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveChartOrNullObject(): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
- uid: excel.Excel.Workbook.getActiveSlicer
  summary: >-
    <span data-ttu-id="d1cd1-147">Obtiene la segmentación de sesión actualmente activa en el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-147">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="d1cd1-148">Si no hay ningún segmentador activo, producirá una excepción al invocar esta instrucción.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-148">If there is no active slicer, will throw exception when invoke this statement.</span></span>


    <span data-ttu-id="d1cd1-149">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-149">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveSlicer()
  fullName: getActiveSlicer()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSlicer(): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
- uid: excel.Excel.Workbook.getActiveSlicerOrNullObject
  summary: >-
    <span data-ttu-id="d1cd1-150">Obtiene la segmentación de sesión actualmente activa en el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-150">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="d1cd1-151">Si no hay ningún segmentador activo, devolverá un objeto null.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-151">If there is no active slicer, will return null object</span></span>


    <span data-ttu-id="d1cd1-152">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-152">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveSlicerOrNullObject()
  fullName: getActiveSlicerOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
- uid: excel.Excel.Workbook.getIsActiveCollabSession
  summary: >-
    <span data-ttu-id="d1cd1-153">True si varios usuarios están editando el libro (co-autoría).</span><span class="sxs-lookup"><span data-stu-id="d1cd1-153">True if the workbook is being edited by multiple users (co-authoring).</span></span> <span data-ttu-id="d1cd1-154">Tenga en cuenta que puede haber algún retraso entre el momento en que cambia el estado del libro y el momento en que los cambios se reflejan en el resultado del método.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-154">Please be aware there might be some delay between when the workbook status changes and when the changes are reflected on the result of the method.</span></span>


    <span data-ttu-id="d1cd1-155">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getIsActiveCollabSession()
  fullName: getIsActiveCollabSession()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
- uid: excel.Excel.Workbook.getSelectedRange
  summary: >-
    <span data-ttu-id="d1cd1-156">Obtiene el intervalo único seleccionado actualmente desde el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-156">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="d1cd1-157">Si hay varios rangos seleccionados, este método generará un error.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-157">If there are multiple ranges selected, this method will throw an error.</span></span>


    <span data-ttu-id="d1cd1-158">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getSelectedRange()
  fullName: getSelectedRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1cd1-159\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1cd1-159\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Workbook.getSelectedRanges
  summary: >-
    <span data-ttu-id="d1cd1-160">Obtiene el intervalo uno o más seleccionado actualmente del libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-160">Gets the currently selected one or more ranges from the workbook.</span></span> <span data-ttu-id="d1cd1-161">A diferencia de getSelectedRange (), este método devuelve un objeto RangeAreas que representa todos los intervalos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-161">Unlike getSelectedRange(), this method returns a RangeAreas object that represents all the selected ranges.</span></span>


    <span data-ttu-id="d1cd1-162">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSelectedRanges()
  fullName: getSelectedRanges()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRanges(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1cd1-163\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1cd1-163\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    const selectedRanges = context.workbook.getSelectedRanges();\n    selectedRanges.format.fill.color = \"lightblue\";\n\n    await context.sync();\n})\n```"
- uid: excel.Excel.Workbook.isDirty
  summary: >-
    <span data-ttu-id="d1cd1-164">True si no se han realizado cambios en el libro especificado desde la última vez que se guardó.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-164">True if no changes have been made to the specified workbook since it was last saved.</span></span> <span data-ttu-id="d1cd1-165">Esta propiedad se puede establecer en True para cerrar un libro modificado sin guardarlo o sin que se pregunte si desea guardarlo.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-165">You can set this property to True if you want to close a modified workbook without either saving it or being prompted to save it.</span></span>


    <span data-ttu-id="d1cd1-166">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-166">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: isDirty
  fullName: isDirty
  langs:
  - typeScript
  type: property
  syntax:
    content: 'isDirty: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.load
  summary: <span data-ttu-id="d1cd1-167">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-167">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1cd1-168">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-168">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d1cd1-169">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="d1cd1-169">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d1cd1-170">`load(option?: string | string[]): Excel.Workbook`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-170">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d1cd1-171">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-171">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d1cd1-172">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-172">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="d1cd1-173">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-173">It is similar to the preceding signature.</span></span> <span data-ttu-id="d1cd1-174">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-174">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d1cd1-175">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-175">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d1cd1-176">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-176">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookLoadOptions
- uid: excel.Excel.Workbook.load_1
  summary: <span data-ttu-id="d1cd1-177">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-177">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1cd1-178">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-178">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d1cd1-179">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Workbook.load_2
  summary: <span data-ttu-id="d1cd1-180">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-180">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1cd1-181">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-181">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d1cd1-182">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-182">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Workbook.name
  summary: >-
    <span data-ttu-id="d1cd1-183">Obtiene el nombre del libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-183">Gets the workbook name.</span></span> <span data-ttu-id="d1cd1-184">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-184">Read-only.</span></span>


    <span data-ttu-id="d1cd1-185">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-185">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Workbook.names
  summary: >-
    <span data-ttu-id="d1cd1-p123">Representa una colección de elementos con nombre en el ámbito del libro (intervalos y constantes con nombre). Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p123">Represents a collection of workbook scoped named items (named ranges and constants). Read-only.</span></span>


    <span data-ttu-id="d1cd1-188">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-188">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: names
  fullName: names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel.Excel.Workbook.onAutoSaveSettingChanged
  summary: >-
    <span data-ttu-id="d1cd1-189">Se produce cuando se cambia la configuración de autoGuardado en el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-189">Occurs when AutoSave setting is changed on the workbook.</span></span>


    <span data-ttu-id="d1cd1-190">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-190">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: onAutoSaveSettingChanged
  fullName: onAutoSaveSettingChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
- uid: excel.Excel.Workbook.onSelectionChanged
  summary: >-
    <span data-ttu-id="d1cd1-191">Se produce al cambiar la selección en el documento.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-191">Occurs when the selection in the document is changed.</span></span>


    <span data-ttu-id="d1cd1-192">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-192">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
- uid: excel.Excel.Workbook.pivotTables
  summary: >-
    <span data-ttu-id="d1cd1-p124">Representa una colección de tablas dinámicas asociadas con el libro. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p124">Represents a collection of PivotTables associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="d1cd1-195">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-195">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: pivotTables
  fullName: pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel.Excel.Workbook.previouslySaved
  summary: >-
    <span data-ttu-id="d1cd1-196">True si el libro se ha guardado alguna vez localmente o en línea.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-196">True if the workbook has ever been saved locally or online.</span></span>


    <span data-ttu-id="d1cd1-197">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-197">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: previouslySaved
  fullName: previouslySaved
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly previouslySaved: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.properties
  summary: >-
    <span data-ttu-id="d1cd1-198">Obtiene las propiedades del libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-198">Gets the workbook properties.</span></span> <span data-ttu-id="d1cd1-199">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-199">Read-only.</span></span>


    <span data-ttu-id="d1cd1-200">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-200">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: properties
  fullName: properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type:
      - excel.Excel.DocumentProperties
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1cd1-201\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1cd1-201\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- uid: excel.Excel.Workbook.protection
  summary: >-
    <span data-ttu-id="d1cd1-202">Devuelve el objeto de protección de un libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-202">Returns workbook protection object for a workbook.</span></span> <span data-ttu-id="d1cd1-203">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-203">Read-only.</span></span>


    <span data-ttu-id="d1cd1-204">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-204">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protection
  fullName: protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
- uid: excel.Excel.Workbook.readOnly
  summary: >-
    <span data-ttu-id="d1cd1-205">True si el libro está abierto en modo de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-205">True if the workbook is open in Read-only mode.</span></span> <span data-ttu-id="d1cd1-206">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-206">Read-only.</span></span>


    <span data-ttu-id="d1cd1-207">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-207">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: readOnly
  fullName: readOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.save
  summary: >-
    <span data-ttu-id="d1cd1-208">Guarda el libro actual.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-208">Save current workbook.</span></span>


    <span data-ttu-id="d1cd1-209">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-209">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: save(saveBehavior)
  fullName: save(saveBehavior)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'save(saveBehavior?: Excel.SaveBehavior): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1cd1-210\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1cd1-210\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.save(Excel.SaveBehavior.save);\n});\n```"
    parameters:
    - id: saveBehavior
      description: <span data-ttu-id="d1cd1-211">comportamiento de guardado de libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-211">workbook save behavior.</span></span>
      type:
      - excel.Excel.SaveBehavior
- uid: excel.Excel.Workbook.save_1
  summary: >-
    <span data-ttu-id="d1cd1-212">Guarda el libro actual.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-212">Save current workbook.</span></span>


    <span data-ttu-id="d1cd1-213">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-213">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: save(saveBehaviorString)
  fullName: save(saveBehaviorString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'save(saveBehaviorString?: "Save" | "Prompt"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: saveBehaviorString
      description: <span data-ttu-id="d1cd1-214">comportamiento de guardado de libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-214">workbook save behavior.</span></span>
      type:
      - "\"Save\" | \"Prompt\""
- uid: excel.Excel.Workbook.set
  summary: <span data-ttu-id="d1cd1-215">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-215">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d1cd1-216">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-216">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="d1cd1-217">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="d1cd1-217">This method has the following additional signature:</span></span>


    `set(properties: Excel.Workbook): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="d1cd1-218">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-218">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.WorkbookUpdateData
    - id: options
      description: <span data-ttu-id="d1cd1-219">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-219">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Workbook.set_1
  summary: <span data-ttu-id="d1cd1-220">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-220">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Workbook
- uid: excel.Excel.Workbook.settings
  summary: >-
    <span data-ttu-id="d1cd1-p129">Representa una colección de configuraciones asociadas con el libro. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p129">Represents a collection of Settings associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="d1cd1-223">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-223">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
- uid: excel.Excel.Workbook.slicers
  summary: >-
    <span data-ttu-id="d1cd1-224">Representa una colección de segmentaciones de cálculo asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-224">Represents a collection of Slicers associated with the workbook.</span></span> <span data-ttu-id="d1cd1-225">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-225">Read-only.</span></span>


    <span data-ttu-id="d1cd1-226">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-226">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: slicers
  fullName: slicers
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly slicers: Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
- uid: excel.Excel.Workbook.styles
  summary: >-
    <span data-ttu-id="d1cd1-227">Representa una colección de estilos asociada con el libro.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-227">Represents a collection of styles associated with the workbook.</span></span> <span data-ttu-id="d1cd1-228">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-228">Read-only.</span></span>


    <span data-ttu-id="d1cd1-229">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-229">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: styles
  fullName: styles
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
- uid: excel.Excel.Workbook.tables
  summary: >-
    <span data-ttu-id="d1cd1-p132">Representa una colección de tablas asociadas con el libro. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p132">Represents a collection of tables associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="d1cd1-232">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-232">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel.Excel.Workbook.toJSON
  summary: <span data-ttu-id="d1cd1-233">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-233">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d1cd1-234">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. Workbook original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.WorkbookData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-234">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookData
      description: ''
- uid: excel.Excel.Workbook.use1904DateSystem
  summary: >-
    <span data-ttu-id="d1cd1-235">True si el libro usa el sistema de fecha 1904.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-235">True if the workbook uses the 1904 date system.</span></span>


    <span data-ttu-id="d1cd1-236">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-236">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: use1904DateSystem
  fullName: use1904DateSystem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'use1904DateSystem: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.usePrecisionAsDisplayed
  summary: >-
    <span data-ttu-id="d1cd1-237">True si los cálculos de este libro se realizarán usando sólo la precisión de los números tal y como se muestran.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-237">True if calculations in this workbook will be done using only the precision of the numbers as they're displayed.</span></span> <span data-ttu-id="d1cd1-238">Los datos perderán la precisión cuando se cambie esta propiedad de false a true.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-238">Data will permanently lose accuracy when switching this property from false to true.</span></span>


    <span data-ttu-id="d1cd1-239">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-239">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: usePrecisionAsDisplayed
  fullName: usePrecisionAsDisplayed
  langs:
  - typeScript
  type: property
  syntax:
    content: 'usePrecisionAsDisplayed: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.worksheets
  summary: >-
    <span data-ttu-id="d1cd1-p135">Representa una colección de hojas de cálculo asociadas con el libro. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1cd1-p135">Represents a collection of worksheets associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="d1cd1-242">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1cd1-242">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheets
  fullName: worksheets
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type:
      - excel.Excel.WorksheetCollection
