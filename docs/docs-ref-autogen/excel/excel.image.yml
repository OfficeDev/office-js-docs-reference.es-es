### YamlMime:UniversalReference
ms.openlocfilehash: 03af886840e9b3df7d3796ba913e024ba07753f9
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303126"
items:
- uid: excel.Excel.Image
  summary: >-
    <span data-ttu-id="f777c-101">Representa un objeto Image en la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="f777c-101">Represents an image object in the worksheet.</span></span>


    <span data-ttu-id="f777c-102">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f777c-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.Image
  fullName: Excel.Image
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Image.context
  - excel.Excel.Image.format
  - excel.Excel.Image.id
  - excel.Excel.Image.load
  - excel.Excel.Image.load_1
  - excel.Excel.Image.load_2
  - excel.Excel.Image.shape
  - excel.Excel.Image.toJSON
- uid: excel.Excel.Image.context
  summary: <span data-ttu-id="f777c-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="f777c-103">The request context associated with the object.</span></span> <span data-ttu-id="f777c-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="f777c-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Image.format
  summary: >-
    <span data-ttu-id="f777c-105">Devuelve el formato de la imagen.</span><span class="sxs-lookup"><span data-stu-id="f777c-105">Returns the format for the image.</span></span> <span data-ttu-id="f777c-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f777c-106">Read-only.</span></span>


    <span data-ttu-id="f777c-107">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f777c-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
    return:
      type:
      - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f777c-108\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"f777c-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const image = sheet.shapes.getItem(\"Image\").image;\n    image.load(\"format\");\n    await context.sync();\n\n    console.log(\"The image's format is: \" + image.format);\n    await context.sync();\n});\n```"
- uid: excel.Excel.Image.id
  summary: >-
    <span data-ttu-id="f777c-109">Representa el identificador de la forma del objeto de imagen.</span><span class="sxs-lookup"><span data-stu-id="f777c-109">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="f777c-110">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f777c-110">Read-only.</span></span>


    <span data-ttu-id="f777c-111">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f777c-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Image.load
  summary: <span data-ttu-id="f777c-112">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="f777c-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f777c-113">Debe llamar a "context. Sync ()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="f777c-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="f777c-114">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="f777c-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="f777c-115">`load(option?: string | string[]): Excel.Image`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="f777c-115">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="f777c-116">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="f777c-116">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="f777c-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="f777c-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="f777c-118">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="f777c-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="f777c-119">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="f777c-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f777c-120">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="f777c-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f777c-121">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="f777c-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ImageLoadOptions
- uid: excel.Excel.Image.load_1
  summary: <span data-ttu-id="f777c-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="f777c-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f777c-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="f777c-123">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="f777c-124">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="f777c-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Image.load_2
  summary: <span data-ttu-id="f777c-125">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="f777c-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f777c-126">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="f777c-126">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="f777c-127">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="f777c-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Image.shape
  summary: >-
    <span data-ttu-id="f777c-128">Devuelve el objeto Shape de la imagen.</span><span class="sxs-lookup"><span data-stu-id="f777c-128">Returns the shape object for the image.</span></span> <span data-ttu-id="f777c-129">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f777c-129">Read-only.</span></span>


    <span data-ttu-id="f777c-130">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f777c-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Image.toJSON
  summary: <span data-ttu-id="f777c-131">Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API.</span><span class="sxs-lookup"><span data-stu-id="f777c-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="f777c-132">(`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. Image original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.ImageData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="f777c-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ImageData;'
    return:
      type:
      - excel.Excel.Interfaces.ImageData
      description: ''
