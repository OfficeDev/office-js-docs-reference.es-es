### YamlMime:UniversalReference
ms.openlocfilehash: 0c03487ad6aa696fc145700056d79edd52c49258
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110252"
items:
- uid: excel.Excel.Image
  summary: >-
    Representa un objeto Image en la hoja de cálculo.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.Image
  fullName: Excel.Image
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Image.context
  - excel.Excel.Image.format
  - excel.Excel.Image.id
  - excel.Excel.Image.load
  - excel.Excel.Image.load_1
  - excel.Excel.Image.load_2
  - excel.Excel.Image.shape
  - excel.Excel.Image.toJSON
- uid: excel.Excel.Image.context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Image.format
  summary: >-
    Devuelve el formato de la imagen. Solo lectura.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
    return:
      type:
      - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
- uid: excel.Excel.Image.id
  summary: >-
    Representa el identificador de la forma del objeto de imagen. Solo lectura.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Image.load
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a "context. Sync ()" antes de leer las propiedades.
  remarks: >-
    Además de esta firma, este método tiene las siguientes firmas:


    `load(option?: string | string[]): Excel.Image`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.


    `load(option?: { select?: string; expand?: string; }): Excel.Image`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ImageLoadOptions
- uid: excel.Excel.Image.load_1
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type:
      - string | string[]
- uid: excel.Excel.Image.load_2
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Image.shape
  summary: >-
    Devuelve el objeto Shape de la imagen. Solo lectura.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Image.toJSON
  summary: Reemplaza el método de JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto de `JSON.stringify()` <!-- -->la API. (`JSON.stringify`<!-- -->a su vez, llama al `toJSON` método del objeto que se le pasa). Mientras que el objeto Excel. Image original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito `Excel.Interfaces.ImageData` <!-- -->como) que contiene las copias rasas de las propiedades secundarias cargadas del objeto original.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ImageData;'
    return:
      type:
      - excel.Excel.Interfaces.ImageData
      description: ''
