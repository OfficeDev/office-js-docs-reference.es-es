### YamlMime:UniversalReference
ms.openlocfilehash: 988122a0fe59cbd87fe14236450e6b3981f10cb8
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29982555"
items:
- uid: excel.Excel.ChartFill
  summary: >-
    <span data-ttu-id="253f5-101">Representa el formato de relleno para un elemento de gráfico.</span><span class="sxs-lookup"><span data-stu-id="253f5-101">Represents the fill formatting for a chart element.</span></span>


    <span data-ttu-id="253f5-102">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="253f5-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartFill
  fullName: Excel.ChartFill
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartFill.clear
  - excel.Excel.ChartFill.context
  - excel.Excel.ChartFill.load
  - excel.Excel.ChartFill.setSolidColor
  - excel.Excel.ChartFill.toJSON
- uid: excel.Excel.ChartFill.clear
  summary: >-
    <span data-ttu-id="253f5-103">Borrar el color de relleno de un elemento de gráfico.</span><span class="sxs-lookup"><span data-stu-id="253f5-103">Clear the fill color of a chart element.</span></span>


    <span data-ttu-id="253f5-104">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="253f5-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"253f5-105\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"253f5-105\">Examples</span></span>\n\n```javascript\n// Clear the line format of the major Gridlines on value axis of the Chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var gridlines = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").axes.valueAxis.majorGridlines;\n    gridlines.format.line.clear();\n    return ctx.sync().then(function() {\n            console.log(\"Chart Major Gridlines Format Cleared\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.ChartFill.context
  summary: <span data-ttu-id="253f5-106">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="253f5-106">The request context associated with the object.</span></span> <span data-ttu-id="253f5-107">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="253f5-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartFill.load
  summary: <span data-ttu-id="253f5-108">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="253f5-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="253f5-109">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="253f5-109">You must call "context.sync()" before reading the properties.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFill;'
    return:
      type:
      - excel.Excel.ChartFill
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - string | string[] | OfficeExtension.LoadOption
- uid: excel.Excel.ChartFill.setSolidColor
  summary: >-
    <span data-ttu-id="253f5-110">Establece el formato de relleno de un elemento de gráfico en un color uniforme.</span><span class="sxs-lookup"><span data-stu-id="253f5-110">Sets the fill formatting of a chart element to a uniform color.</span></span>


    <span data-ttu-id="253f5-111">\[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="253f5-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setSolidColor(color)
  fullName: setSolidColor(color)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSolidColor(color: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"253f5-112\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"253f5-112\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n\n    chart.format.fill.setSolidColor(\"#FF0000\");\n\n    return ctx.sync().then(function() {\n            console.log(\"Chart1 Background Color Changed.\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;\n    let point = pointsCollection.getItemAt(2);\n\n    // Set color for chart point.\n    point.format.fill.setSolidColor('red');\n\n    await context.sync();        \n});\n```"
    parameters:
    - id: color
      description: <span data-ttu-id="253f5-113">Código de color HTML que representa el color de fondo, del formulario \#RRGGBB (por ejemplo, "FFA500") o como un color HTML con nombre (por ejemplo, "naranja").</span><span class="sxs-lookup"><span data-stu-id="253f5-113">HTML color code representing the color of the background, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>
      type:
      - string
- uid: excel.Excel.ChartFill.toJSON
  summary: <span data-ttu-id="253f5-114">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="253f5-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="253f5-115">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.ChartFill es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.ChartFillData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="253f5-115">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartFillData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
