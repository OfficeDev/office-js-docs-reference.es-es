### YamlMime:UniversalReference
ms.openlocfilehash: c775cdfa4ee085c1cb1003a5e0771140c30b9414
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724678"
items:
- uid: excel.Excel.PivotTableCollection
  summary: >-
    Representa una colección de todas las tablas dinámicas que forman parte del libro o de la hoja de cálculo.


    \[[Conjunto de API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTableCollection.add
  - excel.Excel.PivotTableCollection.context
  - excel.Excel.PivotTableCollection.getCount
  - excel.Excel.PivotTableCollection.getItem
  - excel.Excel.PivotTableCollection.getItemOrNullObject
  - excel.Excel.PivotTableCollection.items
  - excel.Excel.PivotTableCollection.load
  - excel.Excel.PivotTableCollection.refreshAll
  - excel.Excel.PivotTableCollection.toJSON
- uid: excel.Excel.PivotTableCollection.add
  summary: >-
    Agrega una tabla dinámica basada en los datos de origen especificados y la inserta en la celda superior izquierda del rango de destino.


    \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: add(name, source, destination)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        Devuelve la tabla dinámica recién insertada.

        #### <a name="examples"></a>Ejemplos


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: El nombre de la nueva tabla dinámica.
      type:
      - string
    - id: source
      description: Los datos de origen para la nueva tabla dinámica, esto puede ser un intervalo (o dirección de la cadena, incluido el nombre de la hoja de cálculo) o una tabla.
      type:
      - Range | string | Table
    - id: destination
      description: La celda en la esquina superior izquierda del rango de destino del informe de tabla dinámica (el rango en la hoja de cálculo donde se colocará el informe resultante).
      type:
      - Range | string
- uid: excel.Excel.PivotTableCollection.context
  summary: El contexto de solicitud asociado con el objeto. Este comando conecta proceso del complemento al proceso de la aplicación host de Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTableCollection.getCount
  summary: >-
    Obtiene el número de tablas dinámicas de una colección.


    \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.PivotTableCollection.getItem
  summary: >-
    Obtiene una tabla dinámica por nombre.


    \[[Conjunto de API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItem(name)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: Nombre de la tabla dinámica que se va a recuperar.
      type:
      - string
- uid: excel.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    Obtiene una tabla dinámica por nombre. Si no existe la tabla dinámica, devolverá un objeto NULL.


    \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: Nombre de la tabla dinámica que se va a recuperar.
      type:
      - string
- uid: excel.Excel.PivotTableCollection.items
  summary: Obtiene al secundario cargado los elementos de esta colección.
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel.Excel.PivotTableCollection.load
  summary: Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas. Se debe llamar a "context.sync()" antes de leer las propiedades.
  remarks: >-
    Además de esta firma, este método no tiene las siguientes firmas:


    `load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Sólo está disponible en los tipos de colección. Es similar a la firma precedente. Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado. Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado. Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.
      type:
      - string | string[]
- uid: excel.Excel.PivotTableCollection.refreshAll
  summary: >-
    Actualiza todas las tablas dinámicas de la colección.


    \[[Conjunto de API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: refreshAll()
  fullName: refreshAll
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTableCollection.toJSON
  summary: Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el original `Excel.PivotTableCollection` es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.PivotTableCollectionData` <!-- -->) que contiene una matriz de "elementos" con copias superficiales de las propiedades de elementos de la colección cargadas.
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
