### YamlMime:UniversalReference
ms.openlocfilehash: a87b42583512df979f9ae15b74358f8d3085dec1
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980516"
items:
- uid: excel.Excel.PivotTableCollection
  summary: >-
    <span data-ttu-id="a0eea-101">Representa una colección de todas las tablas dinámicas que forman parte del libro o de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="a0eea-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>


    <span data-ttu-id="a0eea-102">\[[Conjunto de API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a0eea-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTableCollection.add
  - excel.Excel.PivotTableCollection.context
  - excel.Excel.PivotTableCollection.getCount
  - excel.Excel.PivotTableCollection.getItem
  - excel.Excel.PivotTableCollection.getItemOrNullObject
  - excel.Excel.PivotTableCollection.items
  - excel.Excel.PivotTableCollection.load
  - excel.Excel.PivotTableCollection.load_1
  - excel.Excel.PivotTableCollection.load_2
  - excel.Excel.PivotTableCollection.refreshAll
  - excel.Excel.PivotTableCollection.toJSON
- uid: excel.Excel.PivotTableCollection.add
  summary: >-
    <span data-ttu-id="a0eea-103">Agrega una tabla dinámica basada en los datos de origen especificados y la inserta en la celda superior izquierda del rango de destino.</span><span class="sxs-lookup"><span data-stu-id="a0eea-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>


    <span data-ttu-id="a0eea-104">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a0eea-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, source, destination)
  fullName: add(name, source, destination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        <span data-ttu-id="a0eea-105">Devuelve la tabla dinámica recién insertada.</span><span class="sxs-lookup"><span data-stu-id="a0eea-105">Returns the newly inserted PivotTable.</span></span>

        #### <a name="examples"></a><span data-ttu-id="a0eea-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="a0eea-106">Examples</span></span>


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: <span data-ttu-id="a0eea-107">El nombre de la nueva tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="a0eea-107">The name of the new PivotTable.</span></span>
      type:
      - string
    - id: source
      description: <span data-ttu-id="a0eea-108">Los datos de origen para la nueva tabla dinámica, esto puede ser un intervalo (o dirección de la cadena, incluido el nombre de la hoja de cálculo) o una tabla.</span><span class="sxs-lookup"><span data-stu-id="a0eea-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>
      type:
      - Range | string | Table
    - id: destination
      description: <span data-ttu-id="a0eea-109">La celda en la esquina superior izquierda del rango de destino del informe de tabla dinámica (el rango en la hoja de cálculo donde se colocará el informe resultante).</span><span class="sxs-lookup"><span data-stu-id="a0eea-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotTableCollection.context
  summary: <span data-ttu-id="a0eea-110">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="a0eea-110">The request context associated with the object.</span></span> <span data-ttu-id="a0eea-111">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="a0eea-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTableCollection.getCount
  summary: >-
    <span data-ttu-id="a0eea-112">Obtiene el número de tablas dinámicas de una colección.</span><span class="sxs-lookup"><span data-stu-id="a0eea-112">Gets the number of pivot tables in the collection.</span></span>


    <span data-ttu-id="a0eea-113">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a0eea-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.PivotTableCollection.getItem
  summary: >-
    <span data-ttu-id="a0eea-114">Obtiene una tabla dinámica por nombre.</span><span class="sxs-lookup"><span data-stu-id="a0eea-114">Gets a PivotTable by name.</span></span>


    <span data-ttu-id="a0eea-115">\[[Conjunto de API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a0eea-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="a0eea-116">Nombre de la tabla dinámica que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="a0eea-116">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="a0eea-p102">Obtiene una tabla dinámica por nombre. Si no existe la tabla dinámica, devolverá un objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="a0eea-p102">Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.</span></span>


    <span data-ttu-id="a0eea-119">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a0eea-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="a0eea-120">Nombre de la tabla dinámica que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="a0eea-120">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.items
  summary: <span data-ttu-id="a0eea-121">Obtiene al secundario cargado los elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="a0eea-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel.Excel.PivotTableCollection.load
  summary: <span data-ttu-id="a0eea-122">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a0eea-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a0eea-123">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a0eea-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a0eea-124">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="a0eea-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a0eea-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="a0eea-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a0eea-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="a0eea-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a0eea-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="a0eea-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="a0eea-128">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="a0eea-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="a0eea-129">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a0eea-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a0eea-130">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="a0eea-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a0eea-131">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a0eea-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.PivotTableCollection.load_1
  summary: <span data-ttu-id="a0eea-132">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="a0eea-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a0eea-133">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="a0eea-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a0eea-134">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="a0eea-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.PivotTableCollection.refreshAll
  summary: >-
    <span data-ttu-id="a0eea-135">Actualiza todas las tablas dinámicas de la colección.</span><span class="sxs-lookup"><span data-stu-id="a0eea-135">Refreshes all the pivot tables in the collection.</span></span>


    <span data-ttu-id="a0eea-136">\[[Conjunto de API: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a0eea-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTableCollection.toJSON
  summary: <span data-ttu-id="a0eea-137">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="a0eea-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a0eea-138">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el original `Excel.PivotTableCollection` es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.PivotTableCollectionData` <!-- -->) que contiene una matriz de "elementos" con copias superficiales de las propiedades de elementos de la colección cargadas.</span><span class="sxs-lookup"><span data-stu-id="a0eea-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
