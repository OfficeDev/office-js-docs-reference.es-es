### YamlMime:UniversalReference
ms.openlocfilehash: e5b105e7ca96311635d77d4d9777756e936a9795
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979837"
items:
- uid: excel.Excel.ColorScaleConditionalFormat
  summary: >-
    <span data-ttu-id="5f3a6-101">Representa un criterio IconSet para el formato condicional.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="5f3a6-102">\[[Conjunto de API: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f3a6-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ColorScaleConditionalFormat
  fullName: Excel.ColorScaleConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ColorScaleConditionalFormat.context
  - excel.Excel.ColorScaleConditionalFormat.criteria
  - excel.Excel.ColorScaleConditionalFormat.load
  - excel.Excel.ColorScaleConditionalFormat.load_1
  - excel.Excel.ColorScaleConditionalFormat.load_2
  - excel.Excel.ColorScaleConditionalFormat.set
  - excel.Excel.ColorScaleConditionalFormat.set_1
  - excel.Excel.ColorScaleConditionalFormat.threeColorScale
  - excel.Excel.ColorScaleConditionalFormat.toJSON
- uid: excel.Excel.ColorScaleConditionalFormat.context
  summary: <span data-ttu-id="5f3a6-103">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-103">The request context associated with the object.</span></span> <span data-ttu-id="5f3a6-104">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ColorScaleConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="5f3a6-p102">Criterios de la escala de colores. El punto medio es opcional cuando se usa una escala de colores de dos puntos.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-p102">The criteria of the color scale. Midpoint is optional when using a two point color scale.</span></span>


    <span data-ttu-id="5f3a6-107">\[[Conjunto de API: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f3a6-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalColorScaleCriteria;'
    return:
      type:
      - excel.Excel.ConditionalColorScaleCriteria
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5f3a6-108\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5f3a6-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ColorScaleConditionalFormat.load
  summary: <span data-ttu-id="5f3a6-109">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f3a6-110">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="5f3a6-111">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="5f3a6-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="5f3a6-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="5f3a6-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="5f3a6-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="5f3a6-115">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="5f3a6-116">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5f3a6-117">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5f3a6-118">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
- uid: excel.Excel.ColorScaleConditionalFormat.load_1
  summary: <span data-ttu-id="5f3a6-119">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f3a6-120">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="5f3a6-121">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ColorScaleConditionalFormat.load_2
  summary: <span data-ttu-id="5f3a6-122">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f3a6-123">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="5f3a6-124">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ColorScaleConditionalFormat.set
  summary: <span data-ttu-id="5f3a6-125">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5f3a6-126">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="5f3a6-127">Este método no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="5f3a6-127">This method has the following additional signature:</span></span>


    `set(properties: Excel.ColorScaleConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="5f3a6-128">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ColorScaleConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="5f3a6-129">Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ColorScaleConditionalFormat.set_1
  summary: <span data-ttu-id="5f3a6-130">Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel.Excel.ColorScaleConditionalFormat.threeColorScale
  summary: >-
    <span data-ttu-id="5f3a6-131">Si true, la escala de color tendrá tres puntos (como mínimo, punto medio, máximo), en caso contrario, tendrá dos (mínimo, máximo).</span><span class="sxs-lookup"><span data-stu-id="5f3a6-131">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>


    <span data-ttu-id="5f3a6-132">\[[Conjunto de API: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f3a6-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: threeColorScale
  fullName: threeColorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly threeColorScale: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ColorScaleConditionalFormat.toJSON
  summary: <span data-ttu-id="5f3a6-133">Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5f3a6-134">(`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.ColorScaleConditionalFormat es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.ColorScaleConditionalFormatData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.</span><span class="sxs-lookup"><span data-stu-id="5f3a6-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
      description: ''
