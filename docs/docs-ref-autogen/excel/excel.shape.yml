### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Shape
    summary: |-
      Representa un objeto Shape genérico de la hoja de cálculo. Una forma puede ser una forma geométrica, una línea, un grupo de formas, etc. Para obtener más información sobre el modelo de objetos de forma, vea [trabajar con formas mediante la API de JavaScript de Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes)<!-- -->.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Shape
    fullName: Excel.Shape
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Shape.altTextDescription
      - excel.Excel.Shape.altTextTitle
      - excel.Excel.Shape.connectionSiteCount
      - excel.Excel.Shape.context
      - excel.Excel.Shape.copyTo
      - excel.Excel.Shape.delete
      - excel.Excel.Shape.fill
      - excel.Excel.Shape.geometricShape
      - excel.Excel.Shape.geometricShapeType
      - excel.Excel.Shape.getAsImage
      - excel.Excel.Shape.getAsImage_1
      - excel.Excel.Shape.group
      - excel.Excel.Shape.height
      - excel.Excel.Shape.id
      - excel.Excel.Shape.image
      - excel.Excel.Shape.incrementLeft
      - excel.Excel.Shape.incrementRotation
      - excel.Excel.Shape.incrementTop
      - excel.Excel.Shape.left
      - excel.Excel.Shape.level
      - excel.Excel.Shape.line
      - excel.Excel.Shape.lineFormat
      - excel.Excel.Shape.load
      - excel.Excel.Shape.load_1
      - excel.Excel.Shape.load_2
      - excel.Excel.Shape.lockAspectRatio
      - excel.Excel.Shape.name
      - excel.Excel.Shape.onActivated
      - excel.Excel.Shape.onDeactivated
      - excel.Excel.Shape.parentGroup
      - excel.Excel.Shape.placement
      - excel.Excel.Shape.rotation
      - excel.Excel.Shape.scaleHeight
      - excel.Excel.Shape.scaleHeight_1
      - excel.Excel.Shape.scaleWidth
      - excel.Excel.Shape.scaleWidth_1
      - excel.Excel.Shape.set
      - excel.Excel.Shape.set_1
      - excel.Excel.Shape.setZOrder
      - excel.Excel.Shape.setZOrder_1
      - excel.Excel.Shape.textFrame
      - excel.Excel.Shape.toJSON
      - excel.Excel.Shape.top
      - excel.Excel.Shape.type
      - excel.Excel.Shape.visible
      - excel.Excel.Shape.width
      - excel.Excel.Shape.zOrderPosition
  - uid: excel.Excel.Shape.altTextDescription
    summary: |-
      Devuelve o establece el texto de descripción alternativo de un objeto de forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: altTextDescription
    fullName: altTextDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'altTextDescription: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.altTextTitle
    summary: |-
      Devuelve o establece el texto de título alternativo de un objeto de forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: altTextTitle
    fullName: altTextTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'altTextTitle: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.connectionSiteCount
    summary: |-
      Devuelve el número de sitios de conexión en esta forma. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: connectionSiteCount
    fullName: connectionSiteCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly connectionSiteCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.context
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Shape.copyTo
    summary: |-
      Copia y pega un objeto Shape. La forma pegada se copia en la misma ubicación de píxel que esta forma.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: copyTo(destinationSheet)
    fullName: copyTo(destinationSheet)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyTo(destinationSheet?: Worksheet | string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: destinationSheet
          description: Hoja a la que se va a pegar el objeto Shape. El valor predeterminado es la hoja de cálculo de la forma copiada.
          type:
            - Worksheet | string
  - uid: excel.Excel.Shape.delete
    summary: |-
      Quita la forma de la hoja de cálculo.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItemOrNullObject("Shapes").delete();
              const sheet = context.workbook.worksheets.add("Shapes");

              const shapes = sheet.shapes;

              // load all the shapes in the collection without loading their properties
              shapes.load("items/$none");
              await context.sync();

              shapes.items.forEach((shape) => shape.delete());
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.fill
    summary: |-
      Devuelve el formato de relleno de esta forma. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ShapeFill;'
      return:
        type:
          - excel.Excel.ShapeFill
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.smileyFace);
              shape.left = 300;
              shape.top = 100;
              shape.height = 100;
              shape.width = 100;
              shape.fill.foregroundColor = "yellow"
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.geometricShape
    summary: |-
      Devuelve la forma geométrica asociada con la forma. Produce un error si el tipo de forma no es "GeometricShape".

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: geometricShape
    fullName: geometricShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly geometricShape: Excel.GeometricShape;'
      return:
        type:
          - excel.Excel.GeometricShape
  - uid: excel.Excel.Shape.geometricShapeType
    summary: |-
      Representa el tipo de forma geométrica de esta forma geométrica. Para obtener más detalles, vea Excel.GeometricShapeType. Devuelve un valor nulo si el tipo de forma no es "GeometricShape".

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: geometricShapeType
    fullName: geometricShapeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'geometricShapeType: Excel.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus";'
      return:
        type:
          - Excel.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"
  - uid: excel.Excel.Shape.getAsImage
    summary: |-
      Convierte la forma a una imagen y devuelve la imagen como una cadena con codificación base 64. El valor de PPP es 96. Los únicos formatos admitidos son`Excel.PictureFormat.BMP`<!-- -->, `Excel.PictureFormat.PNG`<!-- -->, `Excel.PictureFormat.JPEG`<!-- -->, y`Excel.PictureFormat.GIF`<!-- -->.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getAsImage(format)
    fullName: getAsImage(format)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsImage(format: Excel.PictureFormat): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Image");
              const result = shape.getAsImage(Excel.PictureFormat.png);
              await context.sync();

              const imageString = result.value;
              // Your add-in would save this string as a .png file.
              console.log("The image's base64-encoded string: " + imageString);
          });
          ```
      parameters:
        - id: format
          description: Especifica el formato de la imagen.
          type:
            - excel.Excel.PictureFormat
  - uid: excel.Excel.Shape.getAsImage_1
    summary: |-
      Convierte la forma a una imagen y devuelve la imagen como una cadena con codificación base 64. El valor de PPP es 96. Los únicos formatos admitidos son`Excel.PictureFormat.BMP`<!-- -->, `Excel.PictureFormat.PNG`<!-- -->, `Excel.PictureFormat.JPEG`<!-- -->, y`Excel.PictureFormat.GIF`<!-- -->.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getAsImage(formatString)
    fullName: getAsImage(formatString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsImage(formatString: "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: formatString
          description: Especifica el formato de la imagen.
          type:
            - '"UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"'
  - uid: excel.Excel.Shape.group
    summary: |-
      Devuelve el grupo de forma asociado con la forma. Produce un error si el tipo de forma no es "GroupShape".

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: group
    fullName: group
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly group: Excel.ShapeGroup;'
      return:
        type:
          - excel.Excel.ShapeGroup
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");

              const shapeGroup = sheet.shapes.getItem("Group").group;
              shapeGroup.ungroup();
              console.log("Shapes ungrouped");

              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.height
    summary: |-
      Indica el alto, en puntos, de la forma. Produce una excepción de argumento no válido cuando se establece con un valor negativo o cero como entrada.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.id
    summary: |-
      Indica el identificador de forma. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.image
    summary: |-
      Devuelve la imagen asociada con la forma. Produce un error si el tipo de forma no es "Image".

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: image
    fullName: image
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly image: Excel.Image;'
      return:
        type:
          - excel.Excel.Image
  - uid: excel.Excel.Shape.incrementLeft
    summary: |-
      Mueve la forma horizontalmente el número de puntos especificado.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: incrementLeft(increment)
    fullName: incrementLeft(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementLeft(increment: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Square")
              shape.incrementLeft(-25);
              await context.sync();
          });
          ```
      parameters:
        - id: increment
          description: 'El incremento, en puntos, de la forma se moverá horizontalmente. Un valor positivo mueve la forma a la derecha y un valor negativo la mueve hacia la izquierda. Si la hoja está orientada de derecha a izquierda, esto se invierte: los valores positivos desplazarán la forma a la izquierda y los valores negativos la moverán hacia la derecha.'
          type:
            - number
  - uid: excel.Excel.Shape.incrementRotation
    summary: |-
      Gira la forma en el sentido de las agujas del reloj alrededor del eje Z según el número de grados. Utilice la `rotation` propiedad para establecer el giro absoluto de la forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: incrementRotation(increment)
    fullName: incrementRotation(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementRotation(increment: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Image");
              shape.incrementRotation(180);
              await context.sync();
          });
          ```
      parameters:
        - id: increment
          description: Número de grados que se girará la forma. Un valor positivo gira la forma en el sentido de las agujas del reloj; un valor negativo la gira en sentido contrario a las agujas del reloj.
          type:
            - number
  - uid: excel.Excel.Shape.incrementTop
    summary: |-
      Mueve la forma verticalmente el número de puntos.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: incrementTop(increment)
    fullName: incrementTop(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementTop(increment: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Pentagon")
              shape.incrementTop(25);
              await context.sync();
          });
          ```
      parameters:
        - id: increment
          description: 'El incremento, en puntos, de la forma se moverá verticalmente. en puntos. Un valor positivo mueve la forma hacia abajo y un valor negativo la mueve hacia arriba.'
          type:
            - number
  - uid: excel.Excel.Shape.left
    summary: |-
      La distancia, en puntos, desde el lado izquierdo de la forma hasta el lado izquierdo de la hoja de cálculo. Produce una excepción de argumento no válido cuando se establece con un valor negativo como entrada.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.level
    summary: |-
      Indica el nivel de la forma especificada. Por ejemplo, un nivel de 0 significa que la forma no es parte de ningún grupo, un nivel de 1 significa que la forma es parte de un grupo del nivel superior y un nivel 2 significa que la forma es parte de un grupo secundario del nivel superior.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: level
    fullName: level
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly level: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.line
    summary: |-
      Devuelve la línea asociada con la forma. Produce un error si el tipo de forma no es "Line".

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: line
    fullName: line
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly line: Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.beginArrowheadLength = Excel.ArrowheadLength.long;
              line.beginArrowheadWidth = Excel.ArrowheadWidth.wide;
              line.beginArrowheadStyle = Excel.ArrowheadStyle.oval;

              line.endArrowheadLength = Excel.ArrowheadLength.long;
              line.endArrowheadWidth = Excel.ArrowheadWidth.wide;
              line.endArrowheadStyle = Excel.ArrowheadStyle.triangle;

              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.lineFormat
    summary: |-
      Devuelve el formato de línea de esta forma. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: lineFormat
    fullName: lineFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lineFormat: Excel.ShapeLineFormat;'
      return:
        type:
          - excel.Excel.ShapeLineFormat
  - uid: excel.Excel.Shape.load
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.Shape`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.Shape`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Shape`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ShapeLoadOptions): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ShapeLoadOptions
  - uid: excel.Excel.Shape.load_1
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: excel.Excel.Shape.load_2
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Shape.lockAspectRatio
    summary: |-
      Especifica si se ha bloqueado la relación de aspecto de esta forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: lockAspectRatio
    fullName: lockAspectRatio
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lockAspectRatio: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Octagon")
              shape.lockAspectRatio = true;
              shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.name
    summary: |-
      Indica el nombre de la forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Shape.onActivated
    summary: |-
      Se produce cuando se activa la forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ShapeActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ShapeActivatedEventArgs>
  - uid: excel.Excel.Shape.onDeactivated
    summary: |-
      Se produce cuando se desactiva la forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ShapeDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ShapeDeactivatedEventArgs>
  - uid: excel.Excel.Shape.parentGroup
    summary: |-
      Representa el grupo principal de esta forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: parentGroup
    fullName: parentGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentGroup: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Shape.placement
    summary: |-
      Representa cómo está asociado el objeto a las celdas inferiores.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: placement
    fullName: placement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placement: Excel.Placement | "TwoCell" | "OneCell" | "Absolute";'
      return:
        type:
          - Excel.Placement | "TwoCell" | "OneCell" | "Absolute"
  - uid: excel.Excel.Shape.rotation
    summary: |-
      Indica la rotación, en grados, de la forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: rotation
    fullName: rotation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rotation: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.triangle);
              shape.left = 100;
              shape.top = 300;
              shape.height = 150;
              shape.width = 200;
              shape.rotation = 45;
              shape.fill.clear();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Shape.scaleHeight
    summary: |-
      Cambia el alto de la forma en un factor especificado. Para imágenes, puede indicar si desea aplicar una escala a la forma respecto al tamaño original o al actual. El tamaño de las formas distintas de imágenes siempre se ajusta en relación con su alto actual.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'scaleHeight(scaleFactor, scaleType, scaleFrom)'
    fullName: 'scaleHeight(scaleFactor, scaleType, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleHeight(scaleFactor: number, scaleType: Excel.ShapeScaleType, scaleFrom?: Excel.ShapeScaleFrom): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Octagon")
              shape.lockAspectRatio = true;
              shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);
              await context.sync();
          });
          ```
      parameters:
        - id: scaleFactor
          description: Especifica la relación entre el alto de la forma después de cambiar su tamaño y el alto original o actual.
          type:
            - number
        - id: scaleType
          description: Especifica si se aplica la escala a la forma respecto a su tamaño original o actual. La opción de escalado de tamaño original solo funciona con imágenes.
          type:
            - excel.Excel.ShapeScaleType
        - id: scaleFrom
          description: 'Opcional. Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma. Si se omite, representa la esquina superior izquierda de la forma mantiene su posición.'
          type:
            - excel.Excel.ShapeScaleFrom
  - uid: excel.Excel.Shape.scaleHeight_1
    summary: |-
      Cambia el alto de la forma en un factor especificado. Para imágenes, puede indicar si desea aplicar una escala a la forma respecto al tamaño original o al actual. El tamaño de las formas distintas de imágenes siempre se ajusta en relación con su alto actual.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'scaleHeight(scaleFactor, scaleTypeString, scaleFrom)'
    fullName: 'scaleHeight(scaleFactor, scaleTypeString, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleHeight(scaleFactor: number, scaleTypeString: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: scaleFactor
          description: Especifica la relación entre el alto de la forma después de cambiar su tamaño y el alto original o actual.
          type:
            - number
        - id: scaleTypeString
          description: Especifica si se aplica la escala a la forma respecto a su tamaño original o actual. La opción de escalado de tamaño original solo funciona con imágenes.
          type:
            - '"CurrentSize" | "OriginalSize"'
        - id: scaleFrom
          description: 'Opcional. Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma. Si se omite, representa la esquina superior izquierda de la forma mantiene su posición.'
          type:
            - '"ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"'
  - uid: excel.Excel.Shape.scaleWidth
    summary: |-
      Cambia el ancho de la forma en un factor especificado. Para imágenes, puede indicar si desea aplicar una escala a la forma respecto al tamaño original o al actual. El tamaño de las formas distintas de imágenes siempre se ajusta con relación a su ancho actual.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'scaleWidth(scaleFactor, scaleType, scaleFrom)'
    fullName: 'scaleWidth(scaleFactor, scaleType, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleWidth(scaleFactor: number, scaleType: Excel.ShapeScaleType, scaleFrom?: Excel.ShapeScaleFrom): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: scaleFactor
          description: Especifica la relación entre el ancho de la forma después de cambiar su tamaño y el ancho original o actual.
          type:
            - number
        - id: scaleType
          description: Especifica si se aplica la escala a la forma respecto a su tamaño original o actual. La opción de escalado de tamaño original solo funciona con imágenes.
          type:
            - excel.Excel.ShapeScaleType
        - id: scaleFrom
          description: 'Opcional. Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma. Si se omite, representa la esquina superior izquierda de la forma mantiene su posición.'
          type:
            - excel.Excel.ShapeScaleFrom
  - uid: excel.Excel.Shape.scaleWidth_1
    summary: |-
      Cambia el ancho de la forma en un factor especificado. Para imágenes, puede indicar si desea aplicar una escala a la forma respecto al tamaño original o al actual. El tamaño de las formas distintas de imágenes siempre se ajusta con relación a su ancho actual.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'scaleWidth(scaleFactor, scaleTypeString, scaleFrom)'
    fullName: 'scaleWidth(scaleFactor, scaleTypeString, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleWidth(scaleFactor: number, scaleTypeString: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: scaleFactor
          description: Especifica la relación entre el ancho de la forma después de cambiar su tamaño y el ancho original o actual.
          type:
            - number
        - id: scaleTypeString
          description: Especifica si se aplica la escala a la forma respecto a su tamaño original o actual. La opción de escalado de tamaño original solo funciona con imágenes.
          type:
            - '"CurrentSize" | "OriginalSize"'
        - id: scaleFrom
          description: 'Opcional. Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma. Si se omite, representa la esquina superior izquierda de la forma mantiene su posición.'
          type:
            - '"ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"'
  - uid: excel.Excel.Shape.set
    summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
    remarks: |-
      Este método tiene la siguiente firma adicional:

      `set(properties: Excel.Shape): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
          type:
            - Interfaces.ShapeUpdateData
        - id: options
          description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Shape.set_1
    summary: 'Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Shape): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Shape
  - uid: excel.Excel.Shape.setZOrder
    summary: |-
      Mueve la forma especificada hacia arriba o hacia abajo en el orden z de la colección, que se desplaza delante o detrás de otras formas.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setZOrder(position)
    fullName: setZOrder(position)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setZOrder(position: Excel.ShapeZOrder): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.getItem("Octagon")
              shape.setZOrder(Excel.ShapeZOrder.sendBackward);
              await context.sync();
          });
          ```
      parameters:
        - id: position
          description: Dónde mover la forma en la pila del orden z con relación a las otras formas. Consulte Excel. ShapeZOrder para obtener información detallada.
          type:
            - excel.Excel.ShapeZOrder
  - uid: excel.Excel.Shape.setZOrder_1
    summary: |-
      Mueve la forma especificada hacia arriba o hacia abajo en el orden z de la colección, que se desplaza delante o detrás de otras formas.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setZOrder(positionString)
    fullName: setZOrder(positionString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setZOrder(positionString: "BringToFront" | "BringForward" | "SendToBack" | "SendBackward"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: positionString
          description: Dónde mover la forma en la pila del orden z con relación a las otras formas. Consulte Excel. ShapeZOrder para obtener información detallada.
          type:
            - '"BringToFront" | "BringForward" | "SendToBack" | "SendBackward"'
  - uid: excel.Excel.Shape.textFrame
    summary: |-
      Devuelve el objeto de marco de texto de esta forma. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: textFrame
    fullName: textFrame
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textFrame: Excel.TextFrame;'
      return:
        type:
          - excel.Excel.TextFrame
  - uid: excel.Excel.Shape.toJSON
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Shape original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ShapeData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeData;'
      return:
        type:
          - excel.Excel.Interfaces.ShapeData
        description: ''
  - uid: excel.Excel.Shape.top
    summary: |-
      La distancia, en puntos, desde el borde superior de la forma al borde superior de la hoja de cálculo. Produce una excepción de argumento no válido cuando se establece con un valor negativo como entrada.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.type
    summary: |-
      Devuelve el tipo de esta forma. Para obtener más detalles, vea Excel.ShapeType. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.ShapeType | "Unsupported" | "Image" | "GeometricShape" | "Group" | "Line";'
      return:
        type:
          - Excel.ShapeType | "Unsupported" | "Image" | "GeometricShape" | "Group" | "Line"
  - uid: excel.Excel.Shape.visible
    summary: |-
      Representa la visibilidad de esta forma.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Shape.width
    summary: |-
      Indica el ancho, en puntos, de la forma. Produce una excepción de argumento no válido cuando se establece con un valor negativo o cero como entrada.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Shape.zOrderPosition
    summary: |-
      Devuelve la posición de la forma especificada en el orden z, siendo 0 la parte inferior de la pila del orden. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: zOrderPosition
    fullName: zOrderPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly zOrderPosition: number;'
      return:
        type:
          - number