### YamlMime:UniversalReference
ms.openlocfilehash: 1ace4ef8c45dc053ac3b2e2eab84584bd8a1d26e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976785"
items:
- uid: excel.Excel.RangeSort
  summary: >-
    Administra operaciones de ordenación en objetos Range.


    \[[Conjunto de API: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeSort
  fullName: Excel.RangeSort
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeSort.apply
  - excel.Excel.RangeSort.apply_1
  - excel.Excel.RangeSort.context
  - excel.Excel.RangeSort.toJSON
- uid: excel.Excel.RangeSort.apply
  summary: >-
    Realizar una operación de ordenación.


    \[[Conjunto de API: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, hasHeaders, orientation, method)
  fullName: apply(fields, matchCase, hasHeaders, orientation, method)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation, method?: Excel.SortMethod): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fields
      description: La lista de condiciones por las que realizar la ordenación.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Opcional. Indica si la ordenación de cadenas distingue mayúsculas de minúsculas.
      type:
      - boolean
    - id: hasHeaders
      description: Opcional. Si el rango tiene un encabezado.
      type:
      - boolean
    - id: orientation
      description: Opcional. Si la operación ordenar filas o columnas.
      type:
      - excel.Excel.SortOrientation
    - id: method
      description: Opcional. El método de ordenación que se utiliza para los caracteres chinos.
      type:
      - excel.Excel.SortMethod
- uid: excel.Excel.RangeSort.apply_1
  summary: >-
    Realizar una operación de ordenación.


    \[[Conjunto de API: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, hasHeaders, orientationString, method)
  fullName: apply(fields, matchCase, hasHeaders, orientationString, method)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" | "StrokeCount"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fields
      description: La lista de condiciones por las que realizar la ordenación.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Opcional. Indica si la ordenación de cadenas distingue mayúsculas de minúsculas.
      type:
      - boolean
    - id: hasHeaders
      description: Opcional. Si el rango tiene un encabezado.
      type:
      - boolean
    - id: orientationString
      description: Opcional. Si la operación ordenar filas o columnas.
      type:
      - "\"Rows\" | \"Columns\""
    - id: method
      description: Opcional. El método de ordenación que se utiliza para los caracteres chinos.
      type:
      - "\"PinYin\" | \"StrokeCount\""
- uid: excel.Excel.RangeSort.context
  summary: El contexto de solicitud asociado con el objeto. Este comando conecta proceso del complemento al proceso de la aplicación host de Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeSort.toJSON
  summary: Invalida el JavaScript `toJSON()` método con el fin de proporcionar resultados más útiles cuando se pasa un objeto de la API a `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama a la `toJSON` método del objeto que se pasa a ella.) Mientras que el objeto original de Excel.RangeSort es un objeto de la API, el `toJSON` método devuelve un objeto de JavaScript sin formato (escrito como `Excel.Interfaces.RangeSortData` <!-- -->) que contiene copias superficiales de todas las propiedades del objeto original secundario cargado.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
