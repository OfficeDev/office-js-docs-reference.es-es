### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeSort
    summary: |-
      Administra operaciones de ordenación en objetos Range.

      \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeSort
    fullName: Excel.RangeSort
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeSort.apply
      - excel.Excel.RangeSort.apply_1
      - excel.Excel.RangeSort.context
      - excel.Excel.RangeSort.toJSON
  - uid: excel.Excel.RangeSort.apply
    summary: |-
      Realizar una operación de ordenación.

      \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: La lista de condiciones por las que realizar la ordenación.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Opcional. Indica si la ordenación de cadenas distingue mayúsculas de minúsculas.
          type:
            - boolean
        - id: hasHeaders
          description: Opcional. Si el rango tiene un encabezado.
          type:
            - boolean
        - id: orientation
          description: Opcional. Indica si la operación ordena filas o columnas.
          type:
            - excel.Excel.SortOrientation
        - id: method
          description: Opcional. Método de ordenación que se usa para los caracteres chinos.
          type:
            - excel.Excel.SortMethod
  - uid: excel.Excel.RangeSort.apply_1
    summary: |-
      Realizar una operación de ordenación.

      \[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: La lista de condiciones por las que realizar la ordenación.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Opcional. Indica si la ordenación de cadenas distingue mayúsculas de minúsculas.
          type:
            - boolean
        - id: hasHeaders
          description: Opcional. Si el rango tiene un encabezado.
          type:
            - boolean
        - id: orientationString
          description: Opcional. Indica si la operación ordena filas o columnas.
          type:
            - '"Rows" | "Columns"'
        - id: method
          description: Opcional. Método de ordenación que se usa para los caracteres chinos.
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: excel.Excel.RangeSort.context
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.RangeSort.toJSON
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. RangeSort original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.RangeSortData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''