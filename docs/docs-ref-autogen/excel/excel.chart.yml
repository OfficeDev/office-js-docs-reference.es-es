### YamlMime:UniversalReference
ms.openlocfilehash: 70be953abd49688ce477065405cc980150f88d42
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 09/20/2018
ms.locfileid: "24052613"
items:
- uid: excel.Excel.Chart
  summary: >-
    Representa un objeto de gráfico de una hoja de cálculo.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  remarks: Nuestra [Guía de procedimientos sobre cómo trabajar con gráficos](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts) ha detallados tutoriales, imágenes y ejemplos de código.
  name: Excel.Chart
  fullName: excel.Excel.Chart
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Chart.axes
  - excel.Excel.Chart.chartType
  - excel.Excel.Chart.dataLabels
  - excel.Excel.Chart.delete
  - excel.Excel.Chart.format
  - excel.Excel.Chart.getImage
  - excel.Excel.Chart.height
  - excel.Excel.Chart.id
  - excel.Excel.Chart.left
  - excel.Excel.Chart.legend
  - excel.Excel.Chart.load
  - excel.Excel.Chart.name
  - excel.Excel.Chart.series
  - excel.Excel.Chart.setData
  - excel.Excel.Chart.setPosition
  - excel.Excel.Chart.showAllFieldButtons
  - excel.Excel.Chart.title
  - excel.Excel.Chart.toJSON
  - excel.Excel.Chart.top
  - excel.Excel.Chart.width
  - excel.Excel.Chart.worksheet
- uid: excel.Excel.Chart.axes
  summary: >-
    Representa los ejes del gráfico. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: axes
  fullName: excel.Excel.Chart.axes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type:
      - excel.Excel.ChartAxes
- uid: excel.Excel.Chart.chartType
  summary: >-
    Representa el tipo del gráfico. Para obtener información detallada, vea Excel.ChartType.


    \[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: chartType
  fullName: excel.Excel.Chart.chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.Chart.dataLabels
  summary: >-
    Representa la clase DataLabels del gráfico. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: dataLabels
  fullName: excel.Excel.Chart.dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.Chart.delete
  summary: >-
    Elimina el objeto chart.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: excel.Excel.Chart.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.format
  summary: >-
    Encapsula las propiedades de formato del área del gráfico. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: format
  fullName: excel.Excel.Chart.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type:
      - excel.Excel.ChartAreaFormat
- uid: excel.Excel.Chart.getImage
  summary: >-
    Representa el gráfico como una imagen con codificación Base64 al escalar el gráfico a las dimensiones especificadas. La relación de aspecto se conserva como parte del cambio de tamaño.


    \[[Conjunto de API: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getImage(width, height, fittingMode)
  fullName: excel.Excel.Chart.getImage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: width
      description: (Opcional) El ancho deseado de la imagen resultante.
      type:
      - number
    - id: height
      description: (Opcional) La altura deseada de la imagen resultante.
      type:
      - number
    - id: fittingMode
      description: (Opcional) El método utilizado para escalar del gráfico especificado a las dimensiones especificadas (si se establecen el alto y ancho).
      type:
      - excel.Excel.ImageFittingMode
- uid: excel.Excel.Chart.height
  summary: >-
    Representa el alto, en puntos, del objeto de gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: height
  fullName: excel.Excel.Chart.height
  langs:
  - typeScript
  type: property
  syntax:
    content: 'height: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.id
  summary: >-
    Identificador único del gráfico. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: id
  fullName: excel.Excel.Chart.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Chart.left
  summary: >-
    Distancia, en puntos, desde el lado izquierdo del gráfico hasta el origen de la hoja de cálculo.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: left
  fullName: excel.Excel.Chart.left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.legend
  summary: >-
    Representa la leyenda del gráfico. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: legend
  fullName: excel.Excel.Chart.legend
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type:
      - excel.Excel.ChartLegend
- uid: excel.Excel.Chart.load
  summary: Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas. Se debe llamar a "context.sync()" antes de leer las propiedades.
  remarks: "Además de esta firma, este método no tiene las siguientes firmas:\n\n`load(option?: { select?: string; expand?: string; }): Excel.Chart`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart`-Sólo está disponible en los tipos de colección. Es similar a la firma precedente. Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado. Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado. Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.Chart.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: option
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.
      type:
      - string | string[]
- uid: excel.Excel.Chart.name
  summary: >-
    Representa el nombre de un objeto de gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.Chart.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.series
  summary: >-
    Representa una sola serie o una colección de series del gráfico. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: series
  fullName: excel.Excel.Chart.series
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type:
      - excel.Excel.ChartSeriesCollection
- uid: excel.Excel.Chart.setData
  summary: >-
    Restablece los datos de origen del gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: setData(sourceData, seriesBy)
  fullName: excel.Excel.Chart.setData
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: sourceData
      description: El objeto range correspondiente en el origen de datos.
      type:
      - Range
    - id: seriesBy
      description: 'Especifica las filas o columnas de forma que se usan como series de datos en el gráfico. Puede ser una de las siguientes opciones: automático (valor predeterminado), las filas y columnas. Para obtener información detallada, vea Excel.ChartSeriesBy.'
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.Chart.setPosition
  summary: >-
    Coloca el gráfico con respecto a las celdas de la hoja de cálculo.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: setPosition(startCell, endCell)
  fullName: excel.Excel.Chart.setPosition
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: startCell
      description: Celda de inicio. Aquí es adonde se moverá el gráfico. La celda de inicio es la celda superior izquierda o superior derecha, en función de la configuración del usuario de la presentación de derecha a izquierda.
      type:
      - Range | string
    - id: endCell
      description: (Opcional) La celda final. Si se especifica, se establecerá para cubrir completamente este rango de celdas ancho y el alto del gráfico.
      type:
      - Range | string
- uid: excel.Excel.Chart.showAllFieldButtons
  summary: >-
    Representa si se debe mostrar todos los botones de campo de un gráfico dinámico.


    \[[Conjunto de API: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showAllFieldButtons
  fullName: excel.Excel.Chart.showAllFieldButtons
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.title
  summary: >-
    Representa el título del gráfico especificado, incluido el texto, la visibilidad, la posición y el formato del título del. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: title
  fullName: excel.Excel.Chart.title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type:
      - excel.Excel.ChartTitle
- uid: excel.Excel.Chart.toJSON
  name: toJSON()
  fullName: excel.Excel.Chart.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartData
      description: ''
- uid: excel.Excel.Chart.top
  summary: >-
    Representa la distancia, en puntos, desde el borde superior del objeto hasta la parte superior de la fila 1 (en una hoja de cálculo) o la parte superior del área del gráfico (en un gráfico).


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: top
  fullName: excel.Excel.Chart.top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.width
  summary: >-
    Representa el ancho, en puntos, del objeto graph.


    \[[Conjunto de API: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: width
  fullName: excel.Excel.Chart.width
  langs:
  - typeScript
  type: property
  syntax:
    content: 'width: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.worksheet
  summary: >-
    La hoja de cálculo que contiene el gráfico actual. Solo lectura.


    \[[Conjunto de API: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: worksheet
  fullName: excel.Excel.Chart.worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
