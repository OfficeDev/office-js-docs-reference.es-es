### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerCollection
    summary: |-
      <span data-ttu-id="45201-101">Representa una colección de todos los objetos Slicer en el libro o en una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="45201-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>

      <span data-ttu-id="45201-102">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45201-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerCollection
    fullName: Excel.SlicerCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerCollection.add
      - excel.Excel.SlicerCollection.context
      - excel.Excel.SlicerCollection.getCount
      - excel.Excel.SlicerCollection.getItem
      - excel.Excel.SlicerCollection.getItemAt
      - excel.Excel.SlicerCollection.getItemOrNullObject
      - excel.Excel.SlicerCollection.items
      - excel.Excel.SlicerCollection.load
      - excel.Excel.SlicerCollection.load_1
      - excel.Excel.SlicerCollection.load_2
      - excel.Excel.SlicerCollection.toJSON
  - uid: excel.Excel.SlicerCollection.add
    summary: |-
      <span data-ttu-id="45201-103">Agrega una nueva segmentación al libro.</span><span class="sxs-lookup"><span data-stu-id="45201-103">Adds a new slicer to the workbook.</span></span>

      <span data-ttu-id="45201-104">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45201-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(slicerSource, sourceField, slicerDestination)'
    fullName: 'add(slicerSource, sourceField, slicerDestination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: <span data-ttu-id="45201-105">Nueva segmentación de los segmentos.</span><span class="sxs-lookup"><span data-stu-id="45201-105">The new slicer.</span></span>
      parameters:
        - id: slicerSource
          description: '<span data-ttu-id="45201-106">El origen de datos en el que se basará la nueva segmentación de datos.</span><span class="sxs-lookup"><span data-stu-id="45201-106">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="45201-107">Puede ser un objeto de tabla dinámica, un objeto Table o una cadena.</span><span class="sxs-lookup"><span data-stu-id="45201-107">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="45201-108">Cuando se pasa un objeto PivotTable, el origen de datos es el origen del objeto PivotTable.</span><span class="sxs-lookup"><span data-stu-id="45201-108">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="45201-109">Cuando se pasa un objeto Table, el origen de datos es el objeto Table.</span><span class="sxs-lookup"><span data-stu-id="45201-109">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="45201-110">Cuando se pasa una cadena, se interpreta como el nombre o el identificador de una tabla dinámica o tabla.</span><span class="sxs-lookup"><span data-stu-id="45201-110">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>'
          type:
            - string | PivotTable | Table
        - id: sourceField
          description: '<span data-ttu-id="45201-111">Campo del origen de datos por el que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="45201-111">The field in the data source to filter by.</span></span> <span data-ttu-id="45201-112">Puede ser un objeto PivotField, un objeto TableColumn, el identificador de un campo dinámico o el identificador o nombre de TableColumn.</span><span class="sxs-lookup"><span data-stu-id="45201-112">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>'
          type:
            - string | PivotField | number | TableColumn
        - id: slicerDestination
          description: <span data-ttu-id="45201-113">Opcional.</span><span class="sxs-lookup"><span data-stu-id="45201-113">Optional.</span></span> <span data-ttu-id="45201-114">La hoja de cálculo en la que se creará la nueva segmentación de trabajo.</span><span class="sxs-lookup"><span data-stu-id="45201-114">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="45201-115">Puede ser un objeto Worksheet o el nombre/identificador de una hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="45201-115">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="45201-116">Este parámetro se puede omitir si la colección Slicer se recupera de Worksheet.</span><span class="sxs-lookup"><span data-stu-id="45201-116">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>
          type:
            - string | Worksheet
  - uid: excel.Excel.SlicerCollection.context
    summary: <span data-ttu-id="45201-117">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="45201-117">The request context associated with the object.</span></span> <span data-ttu-id="45201-118">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="45201-118">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerCollection.getCount
    summary: |-
      <span data-ttu-id="45201-119">Devuelve el número de segmentaciones incluidas en la colección.</span><span class="sxs-lookup"><span data-stu-id="45201-119">Returns the number of slicers in the collection.</span></span>

      <span data-ttu-id="45201-120">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45201-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerCollection.getItem
    summary: |-
      <span data-ttu-id="45201-121">Obtiene un objeto de segmentación mediante su nombre o identificador.</span><span class="sxs-lookup"><span data-stu-id="45201-121">Gets a slicer object using its name or id.</span></span>

      <span data-ttu-id="45201-122">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45201-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="45201-123">El nombre o el identificador de la segmentación de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="45201-123">The name or id of the slicer.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.getItemAt
    summary: |-
      <span data-ttu-id="45201-124">Obtiene una segmentación basándose en su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="45201-124">Gets a slicer based on its position in the collection.</span></span>

      <span data-ttu-id="45201-125">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45201-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="45201-126">Valor de índice del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="45201-126">Index value of the object to be retrieved.</span></span> <span data-ttu-id="45201-127">Indizado con cero.</span><span class="sxs-lookup"><span data-stu-id="45201-127">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.SlicerCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="45201-128">Obtiene una segmentación mediante su nombre o identificador. Si la segmentación no existe, devolverá un objeto null.</span><span class="sxs-lookup"><span data-stu-id="45201-128">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>

      <span data-ttu-id="45201-129">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45201-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="45201-130">Nombre o identificador de la segmentación de la segmentación de la que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="45201-130">Name or Id of the slicer to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.items
    summary: <span data-ttu-id="45201-131">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="45201-131">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Slicer[];'
      return:
        type:
          - 'Excel.Slicer[]'
  - uid: excel.Excel.SlicerCollection.load
    summary: '<span data-ttu-id="45201-132">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="45201-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45201-133">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="45201-133">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="45201-134">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="45201-134">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="45201-135">`load(option?: string | string[]): Excel.SlicerCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="45201-135">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="45201-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="45201-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="45201-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="45201-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="45201-138">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="45201-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="45201-139">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="45201-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="45201-140">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="45201-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="45201-141">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="45201-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerCollection.load_1
    summary: <span data-ttu-id="45201-142">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="45201-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45201-143">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="45201-143">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="45201-144">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="45201-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerCollection.toJSON
    summary: '<span data-ttu-id="45201-145">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="45201-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="45201-146">.</span><span class="sxs-lookup"><span data-stu-id="45201-146"></span></span> <span data-ttu-id="45201-147">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="45201-147"></span></span><!-- --><span data-ttu-id="45201-148">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.SlicerCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.SlicerCollectionData`</span><span class="sxs-lookup"><span data-stu-id="45201-148">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`</span></span><!-- --><span data-ttu-id="45201-149">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="45201-149">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerCollectionData
        description: ''