### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SlicerItem:class'
    summary: |-
      <span data-ttu-id="02479-101">Representa un elemento de segmentación de un rebanador.</span><span class="sxs-lookup"><span data-stu-id="02479-101">Represents a slicer item in a slicer.</span></span>

      <span data-ttu-id="02479-102">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="02479-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerItem
    fullName: Excel.SlicerItem
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SlicerItem#context:member'
      - 'excel!Excel.SlicerItem#hasData:member'
      - 'excel!Excel.SlicerItem#isSelected:member'
      - 'excel!Excel.SlicerItem#key:member'
      - 'excel!Excel.SlicerItem#load:member(1)'
      - 'excel!Excel.SlicerItem#load:member(2)'
      - 'excel!Excel.SlicerItem#load:member(3)'
      - 'excel!Excel.SlicerItem#name:member'
      - 'excel!Excel.SlicerItem#set:member(1)'
      - 'excel!Excel.SlicerItem#set:member(2)'
      - 'excel!Excel.SlicerItem#toJSON:member(1)'
  - uid: 'excel!Excel.SlicerItem#context:member'
    summary: <span data-ttu-id="02479-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="02479-103">The request context associated with the object.</span></span> <span data-ttu-id="02479-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="02479-104">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SlicerItem#hasData:member'
    summary: |-
      <span data-ttu-id="02479-105">True si el elemento de segmentación tiene datos.</span><span class="sxs-lookup"><span data-stu-id="02479-105">True if the slicer item has data.</span></span>

      <span data-ttu-id="02479-106">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="02479-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: hasData
    fullName: hasData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hasData: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.SlicerItem#isSelected:member'
    summary: |-
      <span data-ttu-id="02479-107">Es True si se selecciona el elemento de segmentación.</span><span class="sxs-lookup"><span data-stu-id="02479-107">True if the slicer item is selected.</span></span> <span data-ttu-id="02479-108">Establecer esta valor no limpiará el estado de selección de otros SlicerItems.</span><span class="sxs-lookup"><span data-stu-id="02479-108">Setting this value will not clear other SlicerItems' selected state.</span></span> <span data-ttu-id="02479-109">De forma predeterminada, si el elemento de segmentación de elementos es el único seleccionado, al anular la selección, se seleccionarán todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="02479-109">By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.</span></span>

      <span data-ttu-id="02479-110">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="02479-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.SlicerItem#key:member'
    summary: |-
      <span data-ttu-id="02479-111">Indica el valor único que representa el elemento de segmentación.</span><span class="sxs-lookup"><span data-stu-id="02479-111">Represents the unique value representing the slicer item.</span></span>

      <span data-ttu-id="02479-112">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="02479-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.SlicerItem#load:member(1)'
    summary: '<span data-ttu-id="02479-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="02479-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="02479-114">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="02479-114">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="02479-115">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="02479-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="02479-116">`load(option?: string | string[]): Excel.SlicerItem`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="02479-116">`load(option?: string | string[]): Excel.SlicerItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="02479-117">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItem`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="02479-117">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="02479-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItem`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="02479-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItem` - Only available on collection types.</span></span> <span data-ttu-id="02479-119">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="02479-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="02479-120">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="02479-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="02479-121">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="02479-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="02479-122">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="02479-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerItemLoadOptions): Excel.SlicerItem;'
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.SlicerItemLoadOptions:interface'
  - uid: 'excel!Excel.SlicerItem#load:member(2)'
    summary: <span data-ttu-id="02479-123">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="02479-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="02479-124">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="02479-124">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerItem;'
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="02479-125">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="02479-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SlicerItem#load:member(3)'
    summary: <span data-ttu-id="02479-126">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="02479-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="02479-127">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="02479-127">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.SlicerItem;'
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="02479-128">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="02479-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.SlicerItem#name:member'
    summary: |-
      <span data-ttu-id="02479-129">Representa el título que se muestra en la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="02479-129">Represents the title displayed in the UI.</span></span>

      <span data-ttu-id="02479-130">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="02479-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.SlicerItem#set:member(1)'
    summary: '<span data-ttu-id="02479-131">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="02479-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="02479-132">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="02479-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="02479-133">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="02479-133">This method has the following additional signature:</span></span>

      `set(properties: Excel.SlicerItem): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="02479-134">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="02479-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerItemUpdateData:interface'
        - id: options
          description: <span data-ttu-id="02479-135">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="02479-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.SlicerItem#set:member(2)'
    summary: '<span data-ttu-id="02479-136">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="02479-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.SlicerItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.SlicerItem:class'
  - uid: 'excel!Excel.SlicerItem#toJSON:member(1)'
    summary: '<span data-ttu-id="02479-137">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="02479-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="02479-138">.</span><span class="sxs-lookup"><span data-stu-id="02479-138"></span></span> <span data-ttu-id="02479-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="02479-139"></span></span><!-- --><span data-ttu-id="02479-140">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. SlicerItem original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.SlicerItemData`</span><span class="sxs-lookup"><span data-stu-id="02479-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.SlicerItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerItemData`</span></span><!-- --><span data-ttu-id="02479-141">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="02479-141">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerItemData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerItemData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SlicerItem:class'
    name: Excel.SlicerItem
  - uid: 'excel!Excel.Interfaces.SlicerItemLoadOptions:interface'
    name: Excel.Interfaces.SlicerItemLoadOptions
  - uid: 'excel!Excel.Interfaces.SlicerItemUpdateData:interface'
    name: Interfaces.SlicerItemUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.SlicerItemData:interface'
    name: Excel.Interfaces.SlicerItemData