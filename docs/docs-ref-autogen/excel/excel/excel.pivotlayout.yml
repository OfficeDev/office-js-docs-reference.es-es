### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotLayout:class'
    summary: |-
      <span data-ttu-id="cfb94-101">Representa el diseño visual de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="cfb94-102">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotLayout#autoFormat:member'
      - 'excel!Excel.PivotLayout#context:member'
      - 'excel!Excel.PivotLayout#enableFieldList:member'
      - 'excel!Excel.PivotLayout#getCell:member(1)'
      - 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
      - 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(2)'
      - 'excel!Excel.PivotLayout#getRange:member(1)'
      - 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#layoutType:member'
      - 'excel!Excel.PivotLayout#load:member(1)'
      - 'excel!Excel.PivotLayout#load:member(2)'
      - 'excel!Excel.PivotLayout#load:member(3)'
      - 'excel!Excel.PivotLayout#preserveFormatting:member'
      - 'excel!Excel.PivotLayout#set:member(1)'
      - 'excel!Excel.PivotLayout#set:member(2)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
      - 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
      - 'excel!Excel.PivotLayout#showRowGrandTotals:member'
      - 'excel!Excel.PivotLayout#subtotalLocation:member'
      - 'excel!Excel.PivotLayout#toJSON:member(1)'
  - uid: 'excel!Excel.PivotLayout#autoFormat:member'
    summary: |-
      <span data-ttu-id="cfb94-103">Especifica si el formato se aplicará automáticamente cuando se actualice o cuando se muevan los campos</span><span class="sxs-lookup"><span data-stu-id="cfb94-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="cfb94-104">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-104">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#context:member'
    summary: <span data-ttu-id="cfb94-105">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="cfb94-105">The request context associated with the object.</span></span> <span data-ttu-id="cfb94-106">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="cfb94-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotLayout#enableFieldList:member'
    summary: |-
      <span data-ttu-id="cfb94-107">Especifica si se puede mostrar la lista de campos en la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="cfb94-107">Specifies whether the field list can be shown in the UI.</span></span>

      <span data-ttu-id="cfb94-108">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableFieldList
    fullName: enableFieldList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableFieldList: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#getCell:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-109">Obtiene una única celda de la tabla dinámica en función de una jerarquía de datos y de los elementos de fila y columna de sus respectivas jerarquías.</span><span class="sxs-lookup"><span data-stu-id="cfb94-109">Gets a unique cell in the PivotTable based on a data hierarchy and the row and column items of their respective hierarchies.</span></span> <span data-ttu-id="cfb94-110">La celda devuelta es la intersección de la fila y columna determinadas que contiene los datos de la jerarquía determinada.</span><span class="sxs-lookup"><span data-stu-id="cfb94-110">The returned cell is the intersection of the given row and column that contains the data from the given hierarchy.</span></span> <span data-ttu-id="cfb94-111">Este método es el inverso de llamar a getPivotItems y getDataHierarchy en una celda determinata.</span><span class="sxs-lookup"><span data-stu-id="cfb94-111">This method is the inverse of calling getPivotItems and getDataHierarchy on a particular cell.</span></span>

      <span data-ttu-id="cfb94-112">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getCell(dataHierarchy, rowItems, columnItems)'
    fullName: 'getCell(dataHierarchy, rowItems, columnItems)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems: Array<PivotItem | string>): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: <span data-ttu-id="cfb94-113">Un rango que especifica una sola celda que contiene el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="cfb94-113">A range specifying a single cell that contains the value specified.</span></span>
      parameters:
        - id: dataHierarchy
          description: <span data-ttu-id="cfb94-114">La jerarquía que proporciona el elemento de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-114">The dataHierarchy that provides the data item to find.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getCell~0:complex'
        - id: rowItems
          description: <span data-ttu-id="cfb94-115">PivotItems del eje de filas que constituye el valor que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-115">The PivotItems from the row axis that make up the value to find.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getCell~1:complex'
        - id: columnItems
          description: <span data-ttu-id="cfb94-116">PivotItems del eje de columnas que constituye el valor que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-116">The PivotItems from the column axis that make up the value to find.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getCell~2:complex'
  - uid: 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-117">Devuelve el intervalo donde residen las etiquetas de columna de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-117">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="cfb94-118">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-119">Devuelve el intervalo donde residen los valores de datos de tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-119">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="cfb94-120">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cfb94-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="cfb94-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-122">Obtiene la DataHierarchy que se usa para calcular el valor de un intervalo especificado en la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-122">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="cfb94-123">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-123">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: <span data-ttu-id="cfb94-124">Objeto DataPivotHierarchy que se usa para calcular el valor de la celda especificada.</span><span class="sxs-lookup"><span data-stu-id="cfb94-124">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>
      parameters:
        - id: cell
          description: <span data-ttu-id="cfb94-125">Una sola celda del cuerpo de datos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-125">A single cell within the PivotTable data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
  - uid: 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-126">Devuelve el intervalo del área de filtro de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-126">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="cfb94-127">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-128">Obtiene los elementos dinámicos de un eje que componen el valor de un intervalo especificado en la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-128">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="cfb94-129">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-129">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~0:complex'
        description: <span data-ttu-id="cfb94-130">Una colección de PivotItems que se usa para calcular los valores de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="cfb94-130">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axis
          description: <span data-ttu-id="cfb94-131">Eje del que se va a obtener el PivotItems.</span><span class="sxs-lookup"><span data-stu-id="cfb94-131">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="cfb94-132">Debe ser "fila" o "columna".</span><span class="sxs-lookup"><span data-stu-id="cfb94-132">Must be either "row" or "column."</span></span>
          type:
            - 'excel!Excel.PivotAxis:enum'
        - id: cell
          description: <span data-ttu-id="cfb94-133">Una sola celda del cuerpo de datos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-133">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~1:complex'
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(2)'
    summary: |-
      <span data-ttu-id="cfb94-134">Obtiene los elementos dinámicos de un eje que componen el valor de un intervalo especificado en la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-134">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="cfb94-135">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-135">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~2:complex'
        description: <span data-ttu-id="cfb94-136">Una colección de PivotItems que se usa para calcular los valores de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="cfb94-136">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axisString
          description: <span data-ttu-id="cfb94-137">Eje del que se va a obtener el PivotItems.</span><span class="sxs-lookup"><span data-stu-id="cfb94-137">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="cfb94-138">Debe ser "fila" o "columna".</span><span class="sxs-lookup"><span data-stu-id="cfb94-138">Must be either "row" or "column."</span></span>
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="cfb94-139">Una sola celda del cuerpo de datos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-139">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~3:complex'
  - uid: 'excel!Excel.PivotLayout#getRange:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-140">Devuelve el intervalo en el que existe la tabla dinámica, excluyendo el área de filtro.</span><span class="sxs-lookup"><span data-stu-id="cfb94-140">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="cfb94-141">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-142">Devuelve el intervalo donde residen las etiquetas de fila de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-142">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="cfb94-143">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#layoutType:member'
    summary: |-
      <span data-ttu-id="cfb94-144">Esta propiedad indica el PivotLayoutType de todos los campos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-144">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="cfb94-145">Si los campos tienen diferentes estados, será null.</span><span class="sxs-lookup"><span data-stu-id="cfb94-145">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="cfb94-146">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - 'excel!Excel.PivotLayout#layoutType~0:complex'
  - uid: 'excel!Excel.PivotLayout#load:member(1)'
    summary: '<span data-ttu-id="cfb94-147">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cfb94-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfb94-148">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="cfb94-148">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="cfb94-149">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="cfb94-149">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="cfb94-150">`load(option?: string | string[]): Excel.PivotLayout`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-150">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="cfb94-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="cfb94-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="cfb94-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="cfb94-153">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="cfb94-153">It is similar to the preceding signature.</span></span> <span data-ttu-id="cfb94-154">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="cfb94-154">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="cfb94-155">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="cfb94-155">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="cfb94-156">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="cfb94-156">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
  - uid: 'excel!Excel.PivotLayout#load:member(2)'
    summary: <span data-ttu-id="cfb94-157">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cfb94-157">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfb94-158">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cfb94-158">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="cfb94-159">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-159">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotLayout#load:member(3)'
    summary: <span data-ttu-id="cfb94-160">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="cfb94-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfb94-161">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="cfb94-161">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="cfb94-162">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="cfb94-162">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.PivotLayout#preserveFormatting:member'
    summary: |-
      <span data-ttu-id="cfb94-163">Especifica si el formato se conserva cuando se actualiza el informe o se vuelve a calcular con operaciones como el desplazamiento, la ordenación o el cambio de los elementos de campo de página.</span><span class="sxs-lookup"><span data-stu-id="cfb94-163">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="cfb94-164">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-164">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#set:member(1)'
    summary: '<span data-ttu-id="cfb94-165">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="cfb94-165">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="cfb94-166">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="cfb94-166">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="cfb94-167">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="cfb94-167">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="cfb94-168">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="cfb94-168">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
        - id: options
          description: <span data-ttu-id="cfb94-169">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cfb94-169">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotLayout#set:member(2)'
    summary: '<span data-ttu-id="cfb94-170">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="cfb94-170">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotLayout:class'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
    summary: |-
      <span data-ttu-id="cfb94-171">Establece la tabla dinámica para la ordenación automática mediante la celda especificada para seleccionar automáticamente el contexto y todos los criterios necesarios.</span><span class="sxs-lookup"><span data-stu-id="cfb94-171">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="cfb94-172">Esto funciona igual que aplicar un Autoordenar desde la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="cfb94-172">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="cfb94-173">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-173">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="cfb94-174">Una sola celda que se utiliza para obtener los criterios de para aplicar la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cfb94-174">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
        - id: sortBy
          description: <span data-ttu-id="cfb94-175">Dirección de la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cfb94-175">The direction of the sort.</span></span>
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
    summary: |-
      <span data-ttu-id="cfb94-176">Establece la tabla dinámica para la ordenación automática mediante la celda especificada para seleccionar automáticamente el contexto y todos los criterios necesarios.</span><span class="sxs-lookup"><span data-stu-id="cfb94-176">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="cfb94-177">Esto funciona igual que aplicar un Autoordenar desde la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="cfb94-177">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="cfb94-178">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-178">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="cfb94-179">Una sola celda que se utiliza para obtener los criterios de para aplicar la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cfb94-179">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
        - id: sortByString
          description: <span data-ttu-id="cfb94-180">Dirección de la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cfb94-180">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
    summary: |-
      <span data-ttu-id="cfb94-181">Especifica si el informe de tabla dinámica muestra el total general de las columnas.</span><span class="sxs-lookup"><span data-stu-id="cfb94-181">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="cfb94-182">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-182">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#showRowGrandTotals:member'
    summary: |-
      <span data-ttu-id="cfb94-183">Especifica si el informe de tabla dinámica muestra el total general de las filas.</span><span class="sxs-lookup"><span data-stu-id="cfb94-183">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="cfb94-184">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-184">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#subtotalLocation:member'
    summary: |-
      <span data-ttu-id="cfb94-185">Esta propiedad indica el SubtotalLocationType de todos los campos de la tabla dinámica.</span><span class="sxs-lookup"><span data-stu-id="cfb94-185">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="cfb94-186">Si los campos tienen diferentes estados, será null.</span><span class="sxs-lookup"><span data-stu-id="cfb94-186">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="cfb94-187">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb94-187">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
  - uid: 'excel!Excel.PivotLayout#toJSON:member(1)'
    summary: '<span data-ttu-id="cfb94-188">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cfb94-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cfb94-189">.</span><span class="sxs-lookup"><span data-stu-id="cfb94-189"></span></span> <span data-ttu-id="cfb94-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cfb94-190"></span></span><!-- --><span data-ttu-id="cfb94-191">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. PivotLayout original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="cfb94-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="cfb94-192">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="cfb94-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotLayoutData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.PivotLayout#getCell~0:complex'
    name: DataPivotHierarchy | string
    fullName: Excel.DataPivotHierarchy | string
    spec.typeScript:
      - uid: 'excel!Excel.DataPivotHierarchy:class'
        name: DataPivotHierarchy
        fullName: Excel.DataPivotHierarchy
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getCell~1:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.PivotLayout#getCell~2:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~0:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotAxis:enum'
    name: Excel.PivotAxis
  - uid: 'excel!Excel.PivotLayout#getPivotItems~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~2:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~3:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#layoutType~0:complex'
    name: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    fullName: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    spec.typeScript:
      - uid: 'excel!Excel.PivotLayoutType:enum'
        name: Excel.PivotLayoutType
        fullName: Excel.PivotLayoutType
      - name: ' | "Compact" | "Tabular" | "Outline"'
        fullName: ' | "Compact" | "Tabular" | "Outline"'
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
    name: Excel.Interfaces.PivotLayoutLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
    name: Interfaces.PivotLayoutUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.SortBy:enum'
    name: Excel.SortBy
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
    name: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    fullName: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    spec.typeScript:
      - uid: 'excel!Excel.SubtotalLocationType:enum'
        name: Excel.SubtotalLocationType
        fullName: Excel.SubtotalLocationType
      - name: ' | "AtTop" | "AtBottom" | "Off"'
        fullName: ' | "AtTop" | "AtBottom" | "Off"'
  - uid: 'excel!Excel.Interfaces.PivotLayoutData:interface'
    name: Excel.Interfaces.PivotLayoutData