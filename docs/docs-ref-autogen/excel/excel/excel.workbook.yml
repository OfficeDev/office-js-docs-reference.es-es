### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Workbook
    summary: |-
      <span data-ttu-id="261f7-101">Workbook es el objeto de nivel superior que contiene los objetos de libro relacionados, como hojas de cálculo, tablas, intervalos, etc. Para obtener más información sobre el modelo de objetos de libro, lea [trabajar con libros mediante la API de JavaScript de Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)</span><span class="sxs-lookup"><span data-stu-id="261f7-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc. To learn more about the workbook object model, read [Work with workbooks using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)</span></span><!-- --><span data-ttu-id="261f7-102">.</span><span class="sxs-lookup"><span data-stu-id="261f7-102"></span></span>

      <span data-ttu-id="261f7-103">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-103">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Workbook.application
      - excel.Excel.Workbook.autoSave
      - excel.Excel.Workbook.bindings
      - excel.Excel.Workbook.calculationEngineVersion
      - excel.Excel.Workbook.chartDataPointTrack
      - excel.Excel.Workbook.close
      - excel.Excel.Workbook.close_1
      - excel.Excel.Workbook.comments
      - excel.Excel.Workbook.context
      - excel.Excel.Workbook.customXmlParts
      - excel.Excel.Workbook.dataConnections
      - excel.Excel.Workbook.functions
      - excel.Excel.Workbook.getActiveCell
      - excel.Excel.Workbook.getActiveChart
      - excel.Excel.Workbook.getActiveChartOrNullObject
      - excel.Excel.Workbook.getActiveSlicer
      - excel.Excel.Workbook.getActiveSlicerOrNullObject
      - excel.Excel.Workbook.getIsActiveCollabSession
      - excel.Excel.Workbook.getSelectedRange
      - excel.Excel.Workbook.getSelectedRanges
      - excel.Excel.Workbook.isDirty
      - excel.Excel.Workbook.load
      - excel.Excel.Workbook.load_1
      - excel.Excel.Workbook.load_2
      - excel.Excel.Workbook.name
      - excel.Excel.Workbook.names
      - excel.Excel.Workbook.onAutoSaveSettingChanged
      - excel.Excel.Workbook.onSelectionChanged
      - excel.Excel.Workbook.pivotTables
      - excel.Excel.Workbook.pivotTableStyles
      - excel.Excel.Workbook.previouslySaved
      - excel.Excel.Workbook.properties
      - excel.Excel.Workbook.protection
      - excel.Excel.Workbook.readOnly
      - excel.Excel.Workbook.save
      - excel.Excel.Workbook.save_1
      - excel.Excel.Workbook.set
      - excel.Excel.Workbook.set_1
      - excel.Excel.Workbook.settings
      - excel.Excel.Workbook.slicers
      - excel.Excel.Workbook.slicerStyles
      - excel.Excel.Workbook.styles
      - excel.Excel.Workbook.tables
      - excel.Excel.Workbook.tableStyles
      - excel.Excel.Workbook.timelineStyles
      - excel.Excel.Workbook.toJSON
      - excel.Excel.Workbook.use1904DateSystem
      - excel.Excel.Workbook.usePrecisionAsDisplayed
      - excel.Excel.Workbook.worksheets
  - uid: excel.Excel.Workbook.application
    summary: |-
      <span data-ttu-id="261f7-104">Representa la instancia de la aplicación de Excel que contiene este libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-104">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="261f7-105">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-105">Read-only.</span></span>

      <span data-ttu-id="261f7-106">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - excel.Excel.Application
  - uid: excel.Excel.Workbook.autoSave
    summary: |-
      <span data-ttu-id="261f7-107">Especifica si el libro está en modo de autoguardado.</span><span class="sxs-lookup"><span data-stu-id="261f7-107">Specifies whether or not the workbook is in autosave mode.</span></span> <span data-ttu-id="261f7-108">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-108">Read-Only.</span></span>

      <span data-ttu-id="261f7-109">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-109">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoSave
    fullName: autoSave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoSave: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.bindings
    summary: |-
      <span data-ttu-id="261f7-110">Representa una colección de enlaces que forman parte del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-110">Represents a collection of bindings that are part of the workbook.</span></span> <span data-ttu-id="261f7-111">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-111">Read-only.</span></span>

      <span data-ttu-id="261f7-112">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
  - uid: excel.Excel.Workbook.calculationEngineVersion
    summary: |-
      <span data-ttu-id="261f7-113">Devuelve un número acerca de la versión del motor de cálculo de Excel.</span><span class="sxs-lookup"><span data-stu-id="261f7-113">Returns a number about the version of Excel Calculation Engine.</span></span> <span data-ttu-id="261f7-114">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-114">Read-Only.</span></span>

      <span data-ttu-id="261f7-115">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-115">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Workbook.chartDataPointTrack
    summary: |-
      <span data-ttu-id="261f7-116">True si todos los gráficos en el libro están siguiendo los puntos de datos reales a los que están conectados.</span><span class="sxs-lookup"><span data-stu-id="261f7-116">True if all charts in the workbook are tracking the actual data points to which they are attached.</span></span> <span data-ttu-id="261f7-117">False si los gráficos realizan un seguimiento del índice de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="261f7-117">False if the charts track the index of the data points.</span></span>

      <span data-ttu-id="261f7-118">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-118">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartDataPointTrack
    fullName: chartDataPointTrack
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartDataPointTrack: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.close
    summary: |-
      <span data-ttu-id="261f7-119">Cierra el libro actual.</span><span class="sxs-lookup"><span data-stu-id="261f7-119">Close current workbook.</span></span>

      <span data-ttu-id="261f7-120">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: close(closeBehavior)
    fullName: close(closeBehavior)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(closeBehavior?: Excel.CloseBehavior): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="261f7-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="261f7-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.close(Excel.CloseBehavior.save);
          });
          ```
      parameters:
        - id: closeBehavior
          description: <span data-ttu-id="261f7-122">comportamiento de cierre de libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-122">workbook close behavior.</span></span>
          type:
            - excel.Excel.CloseBehavior
  - uid: excel.Excel.Workbook.close_1
    summary: |-
      <span data-ttu-id="261f7-123">Cierra el libro actual.</span><span class="sxs-lookup"><span data-stu-id="261f7-123">Close current workbook.</span></span>

      <span data-ttu-id="261f7-124">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: close(closeBehaviorString)
    fullName: close(closeBehaviorString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(closeBehaviorString?: "Save" | "SkipSave"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: closeBehaviorString
          description: <span data-ttu-id="261f7-125">comportamiento de cierre de libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-125">workbook close behavior.</span></span>
          type:
            - '"Save" | "SkipSave"'
  - uid: excel.Excel.Workbook.comments
    summary: |-
      <span data-ttu-id="261f7-126">Indica una colección de comentarios asociada con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-126">Represents a collection of Comments associated with the workbook.</span></span> <span data-ttu-id="261f7-127">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-127">Read-only.</span></span>

      <span data-ttu-id="261f7-128">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Excel.CommentCollection;'
      return:
        type:
          - excel.Excel.CommentCollection
  - uid: excel.Excel.Workbook.context
    summary: <span data-ttu-id="261f7-129">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="261f7-129">The request context associated with the object.</span></span> <span data-ttu-id="261f7-130">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="261f7-130">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Workbook.customXmlParts
    summary: |-
      <span data-ttu-id="261f7-131">Representa la colección de elementos XML personalizados contenidos en este libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-131">Represents the collection of custom XML parts contained by this workbook.</span></span> <span data-ttu-id="261f7-132">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-132">Read-only.</span></span>

      <span data-ttu-id="261f7-133">\[[Conjunto de API: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-133">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type:
          - excel.Excel.CustomXmlPartCollection
  - uid: excel.Excel.Workbook.dataConnections
    summary: |-
      <span data-ttu-id="261f7-134">Representa todas las conexiones de datos en el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-134">Represents all data connections in the workbook.</span></span> <span data-ttu-id="261f7-135">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-135">Read-only.</span></span>

      <span data-ttu-id="261f7-136">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-136">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataConnections
    fullName: dataConnections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataConnections: Excel.DataConnectionCollection;'
      return:
        type:
          - excel.Excel.DataConnectionCollection
  - uid: excel.Excel.Workbook.functions
    summary: |-
      <span data-ttu-id="261f7-137">Representa una colección de funciones de hoja de cálculo que se pueden usar para el cálculo.</span><span class="sxs-lookup"><span data-stu-id="261f7-137">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="261f7-138">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-138">Read-only.</span></span>

      <span data-ttu-id="261f7-139">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-139">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - excel.Excel.Functions
  - uid: excel.Excel.Workbook.getActiveCell
    summary: |-
      <span data-ttu-id="261f7-140">Obtiene la celda activa del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-140">Gets the currently active cell from the workbook.</span></span>

      <span data-ttu-id="261f7-141">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-141">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveCell()
    fullName: getActiveCell()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveCell(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="261f7-142">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="261f7-142">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let activeCell = myWorkbook.getActiveCell();
              activeCell.load("address");

              await context.sync();
              
              console.log("The active cell is " + activeCell.address);
          });
          ```
  - uid: excel.Excel.Workbook.getActiveChart
    summary: |-
      <span data-ttu-id="261f7-143">Obtiene el gráfico activo del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-143">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="261f7-144">Si no hay ningún gráfico activo, se `ItemNotFound` produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="261f7-144">If there is no active chart, an `ItemNotFound` exception is thrown.</span></span>

      <span data-ttu-id="261f7-145">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-145">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveChart()
    fullName: getActiveChart()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChart(): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
  - uid: excel.Excel.Workbook.getActiveChartOrNullObject
    summary: |-
      <span data-ttu-id="261f7-146">Obtiene el gráfico activo del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-146">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="261f7-147">Si no hay ningún gráfico activo, se devuelve un objeto null.</span><span class="sxs-lookup"><span data-stu-id="261f7-147">If there is no active chart, a null object is returned.</span></span>

      <span data-ttu-id="261f7-148">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-148">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveChartOrNullObject()
    fullName: getActiveChartOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChartOrNullObject(): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
  - uid: excel.Excel.Workbook.getActiveSlicer
    summary: |-
      <span data-ttu-id="261f7-149">Obtiene la segmentación activa del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-149">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="261f7-150">Si no hay ningún rebanador activo, se `ItemNotFound` produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="261f7-150">If there is no active slicer, an `ItemNotFound` exception is thrown.</span></span>

      <span data-ttu-id="261f7-151">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-151">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getActiveSlicer()
    fullName: getActiveSlicer()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSlicer(): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
  - uid: excel.Excel.Workbook.getActiveSlicerOrNullObject
    summary: |-
      <span data-ttu-id="261f7-152">Obtiene la segmentación activa del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-152">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="261f7-153">Si no hay ninguna segmentación de datos activa, se devuelve un objeto nulo.</span><span class="sxs-lookup"><span data-stu-id="261f7-153">If there is no active slicer, a null object is returned.</span></span>

      <span data-ttu-id="261f7-154">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-154">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getActiveSlicerOrNullObject()
    fullName: getActiveSlicerOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
  - uid: excel.Excel.Workbook.getIsActiveCollabSession
    summary: |-
      <span data-ttu-id="261f7-155">True si varios usuarios están editando el libro (coautoría).</span><span class="sxs-lookup"><span data-stu-id="261f7-155">True if the workbook is being edited by multiple users (co-authoring).</span></span> <span data-ttu-id="261f7-156">Tenga en cuenta que puede haber algún retraso entre el momento en que cambia el estado del libro y el momento en que los cambios se reflejan en el resultado del método.</span><span class="sxs-lookup"><span data-stu-id="261f7-156">Please be aware there might be some delay between when the workbook status changes and when the changes are reflected on the result of the method.</span></span>

      <span data-ttu-id="261f7-157">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-157">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getIsActiveCollabSession()
    fullName: getIsActiveCollabSession()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
  - uid: excel.Excel.Workbook.getSelectedRange
    summary: |-
      <span data-ttu-id="261f7-158">Obtiene el intervalo único seleccionado actualmente desde el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-158">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="261f7-159">Si hay varios rangos seleccionados, este método generará un error.</span><span class="sxs-lookup"><span data-stu-id="261f7-159">If there are multiple ranges selected, this method will throw an error.</span></span>

      <span data-ttu-id="261f7-160">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-160">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="261f7-161">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="261f7-161">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Workbook.getSelectedRanges
    summary: |-
      <span data-ttu-id="261f7-162">Obtiene los intervalos seleccionados actualmente en el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-162">Gets the currently selected one or more ranges from the workbook.</span></span> <span data-ttu-id="261f7-163">A diferencia de getSelectedRange(), este método devuelve un objeto RangeAreas que representa todos los intervalos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="261f7-163">Unlike getSelectedRange(), this method returns a RangeAreas object that represents all the selected ranges.</span></span>

      <span data-ttu-id="261f7-164">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-164">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRanges()
    fullName: getSelectedRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRanges(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-


          #### <a name="examples"></a><span data-ttu-id="261f7-165">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="261f7-165">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              const selectedRanges = context.workbook.getSelectedRanges();
              selectedRanges.format.fill.color = "lightblue";

              await context.sync();
          })
          ```
  - uid: excel.Excel.Workbook.isDirty
    summary: |-
      <span data-ttu-id="261f7-166">Especifica si se han realizado cambios desde que el libro se guardó por última vez.</span><span class="sxs-lookup"><span data-stu-id="261f7-166">Specifies whether or not changes have been made since the workbook was last saved.</span></span> <span data-ttu-id="261f7-167">Puede establecer esta propiedad en true si desea cerrar un libro modificado sin guardarlo o sin que se le pida que lo guarde.</span><span class="sxs-lookup"><span data-stu-id="261f7-167">You can set this property to true if you want to close a modified workbook without either saving it or being prompted to save it.</span></span>

      <span data-ttu-id="261f7-168">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-168">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: isDirty
    fullName: isDirty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDirty: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.load
    summary: '<span data-ttu-id="261f7-169">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="261f7-169">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="261f7-170">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="261f7-170">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="261f7-171">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="261f7-171">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="261f7-172">`load(option?: string | string[]): Excel.Workbook`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="261f7-172">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="261f7-173">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="261f7-173">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="261f7-174">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="261f7-174">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="261f7-175">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="261f7-175">It is similar to the preceding signature.</span></span> <span data-ttu-id="261f7-176">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="261f7-176">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="261f7-177">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="261f7-177">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="261f7-178">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="261f7-178">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookLoadOptions
  - uid: excel.Excel.Workbook.load_1
    summary: <span data-ttu-id="261f7-179">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="261f7-179">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="261f7-180">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="261f7-180">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="261f7-181">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="261f7-181">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Workbook.load_2
    summary: <span data-ttu-id="261f7-182">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="261f7-182">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="261f7-183">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="261f7-183">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="261f7-184">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="261f7-184">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Workbook.name
    summary: |-
      <span data-ttu-id="261f7-185">Obtiene el nombre del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-185">Gets the workbook name.</span></span> <span data-ttu-id="261f7-186">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-186">Read-only.</span></span>

      <span data-ttu-id="261f7-187">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-187">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Workbook.names
    summary: |-
      <span data-ttu-id="261f7-188">Representa una colección de elementos con nombre en el ámbito del libro (intervalos y constantes con nombre).</span><span class="sxs-lookup"><span data-stu-id="261f7-188">Represents a collection of workbook scoped named items (named ranges and constants).</span></span> <span data-ttu-id="261f7-189">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-189">Read-only.</span></span>

      <span data-ttu-id="261f7-190">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-190">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel.Excel.Workbook.onAutoSaveSettingChanged
    summary: |-
      <span data-ttu-id="261f7-191">Se produce cuando se cambia la configuración de guardado automático en el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-191">Occurs when the autoSave setting is changed on the workbook.</span></span>

      <span data-ttu-id="261f7-192">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-192">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAutoSaveSettingChanged
    fullName: onAutoSaveSettingChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
  - uid: excel.Excel.Workbook.onSelectionChanged
    summary: |-
      <span data-ttu-id="261f7-193">Se genera al cambiar la selección en el documento.</span><span class="sxs-lookup"><span data-stu-id="261f7-193">Occurs when the selection in the document is changed.</span></span>

      <span data-ttu-id="261f7-194">\[[Conjunto de API: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-194">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
  - uid: excel.Excel.Workbook.pivotTables
    summary: |-
      <span data-ttu-id="261f7-195">Representa una colección de tablas dinámicas asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-195">Represents a collection of PivotTables associated with the workbook.</span></span> <span data-ttu-id="261f7-196">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-196">Read-only.</span></span>

      <span data-ttu-id="261f7-197">\[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-197">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel.Excel.Workbook.pivotTableStyles
    summary: |-
      <span data-ttu-id="261f7-198">Representa una colección de PivotTableStyles asociados con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-198">Represents a collection of PivotTableStyles associated with the workbook.</span></span> <span data-ttu-id="261f7-199">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-199">Read-only.</span></span>

      <span data-ttu-id="261f7-200">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-200">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: pivotTableStyles
    fullName: pivotTableStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTableStyles: Excel.PivotTableStyleCollection;'
      return:
        type:
          - excel.Excel.PivotTableStyleCollection
  - uid: excel.Excel.Workbook.previouslySaved
    summary: |-
      <span data-ttu-id="261f7-201">Especifica si el libro se ha guardado en algún momento localmente o en línea.</span><span class="sxs-lookup"><span data-stu-id="261f7-201">Specifies whether or not the workbook has ever been saved locally or online.</span></span> <span data-ttu-id="261f7-202">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-202">Read-Only.</span></span>

      <span data-ttu-id="261f7-203">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-203">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: previouslySaved
    fullName: previouslySaved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly previouslySaved: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.properties
    summary: |-
      <span data-ttu-id="261f7-204">Obtiene las propiedades del libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-204">Gets the workbook properties.</span></span> <span data-ttu-id="261f7-205">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-205">Read-only.</span></span>

      <span data-ttu-id="261f7-206">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-206">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: properties
    fullName: properties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly properties: Excel.DocumentProperties;'
      return:
        type:
          - excel.Excel.DocumentProperties
        description: |-


          #### <a name="examples"></a><span data-ttu-id="261f7-207">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="261f7-207">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let titleValue = "Excel document properties API";
              let subjectValue = "Set and get document properties";
              let keywordsValue = "Set and get operations";
              let commentsValue = "This is an Excel document properties API code sample";
              let categoryValue = "Office Add-ins";
              let managerValue = "John";
              let companyValue = "Microsoft";

              let docProperties = context.workbook.properties;

              // Set the writeable document properties.
              docProperties.title = titleValue;
              docProperties.subject = subjectValue;
              docProperties.keywords = keywordsValue;
              docProperties.comments = commentsValue;
              docProperties.category = categoryValue;
              docProperties.manager = managerValue;
              docProperties.company = companyValue;

              await context.sync();

              console.log("Set the following document properties: title, subject, keywords, comments, category, manager, company.");
          });
          ```
  - uid: excel.Excel.Workbook.protection
    summary: |-
      <span data-ttu-id="261f7-208">Devuelve el objeto de protección de un libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-208">Returns workbook protection object for a workbook.</span></span> <span data-ttu-id="261f7-209">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-209">Read-only.</span></span>

      <span data-ttu-id="261f7-210">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
  - uid: excel.Excel.Workbook.readOnly
    summary: |-
      <span data-ttu-id="261f7-211">True si el libro está abierto en modo de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-211">True if the workbook is open in Read-only mode.</span></span> <span data-ttu-id="261f7-212">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-212">Read-only.</span></span>

      <span data-ttu-id="261f7-213">\[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-213">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly readOnly: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.save
    summary: |-
      <span data-ttu-id="261f7-214">Guarda el libro actual.</span><span class="sxs-lookup"><span data-stu-id="261f7-214">Save current workbook.</span></span>

      <span data-ttu-id="261f7-215">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-215">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: save(saveBehavior)
    fullName: save(saveBehavior)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'save(saveBehavior?: Excel.SaveBehavior): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="261f7-216">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="261f7-216">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.save(Excel.SaveBehavior.save);
          });
          ```
      parameters:
        - id: saveBehavior
          description: <span data-ttu-id="261f7-217">comportamiento de guardado de libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-217">workbook save behavior.</span></span>
          type:
            - excel.Excel.SaveBehavior
  - uid: excel.Excel.Workbook.save_1
    summary: |-
      <span data-ttu-id="261f7-218">Guarda el libro actual.</span><span class="sxs-lookup"><span data-stu-id="261f7-218">Save current workbook.</span></span>

      <span data-ttu-id="261f7-219">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-219">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: save(saveBehaviorString)
    fullName: save(saveBehaviorString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'save(saveBehaviorString?: "Save" | "Prompt"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: saveBehaviorString
          description: <span data-ttu-id="261f7-220">comportamiento de guardado de libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-220">workbook save behavior.</span></span>
          type:
            - '"Save" | "Prompt"'
  - uid: excel.Excel.Workbook.set
    summary: '<span data-ttu-id="261f7-221">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="261f7-221">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="261f7-222">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="261f7-222">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="261f7-223">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="261f7-223">This method has the following additional signature:</span></span>

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="261f7-224">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="261f7-224">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.WorkbookUpdateData
        - id: options
          description: <span data-ttu-id="261f7-225">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-225">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Workbook.set_1
    summary: '<span data-ttu-id="261f7-226">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="261f7-226">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Workbook
  - uid: excel.Excel.Workbook.settings
    summary: |-
      <span data-ttu-id="261f7-227">Representa una colección de configuraciones asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-227">Represents a collection of Settings associated with the workbook.</span></span> <span data-ttu-id="261f7-228">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-228">Read-only.</span></span>

      <span data-ttu-id="261f7-229">\[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-229">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
  - uid: excel.Excel.Workbook.slicers
    summary: |-
      <span data-ttu-id="261f7-230">Representa una colección de segmentaciones asociada con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-230">Represents a collection of Slicers associated with the workbook.</span></span> <span data-ttu-id="261f7-231">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-231">Read-only.</span></span>

      <span data-ttu-id="261f7-232">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-232">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicers
    fullName: slicers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicers: Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
  - uid: excel.Excel.Workbook.slicerStyles
    summary: |-
      <span data-ttu-id="261f7-233">Representa una colección de SlicerStyles asociados con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-233">Represents a collection of SlicerStyles associated with the workbook.</span></span> <span data-ttu-id="261f7-234">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-234">Read-only.</span></span>

      <span data-ttu-id="261f7-235">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-235">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerStyles
    fullName: slicerStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerStyles: Excel.SlicerStyleCollection;'
      return:
        type:
          - excel.Excel.SlicerStyleCollection
  - uid: excel.Excel.Workbook.styles
    summary: |-
      <span data-ttu-id="261f7-236">Representa una colección de estilos asociada con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-236">Represents a collection of styles associated with the workbook.</span></span> <span data-ttu-id="261f7-237">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-237">Read-only.</span></span>

      <span data-ttu-id="261f7-238">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-238">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly styles: Excel.StyleCollection;'
      return:
        type:
          - excel.Excel.StyleCollection
  - uid: excel.Excel.Workbook.tables
    summary: |-
      <span data-ttu-id="261f7-239">Representa una colección de tablas asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-239">Represents a collection of tables associated with the workbook.</span></span> <span data-ttu-id="261f7-240">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-240">Read-only.</span></span>

      <span data-ttu-id="261f7-241">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-241">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Workbook.tableStyles
    summary: |-
      <span data-ttu-id="261f7-242">Representa una colección de TableStyles asociados con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-242">Represents a collection of TableStyles associated with the workbook.</span></span> <span data-ttu-id="261f7-243">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-243">Read-only.</span></span>

      <span data-ttu-id="261f7-244">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-244">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: tableStyles
    fullName: tableStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableStyles: Excel.TableStyleCollection;'
      return:
        type:
          - excel.Excel.TableStyleCollection
  - uid: excel.Excel.Workbook.timelineStyles
    summary: |-
      <span data-ttu-id="261f7-245">Representa una colección de TimelineStyles asociados con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-245">Represents a collection of TimelineStyles associated with the workbook.</span></span> <span data-ttu-id="261f7-246">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-246">Read-only.</span></span>

      <span data-ttu-id="261f7-247">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-247">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: timelineStyles
    fullName: timelineStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly timelineStyles: Excel.TimelineStyleCollection;'
      return:
        type:
          - excel.Excel.TimelineStyleCollection
  - uid: excel.Excel.Workbook.toJSON
    summary: '<span data-ttu-id="261f7-248">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="261f7-248">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="261f7-249">.</span><span class="sxs-lookup"><span data-stu-id="261f7-249"></span></span> <span data-ttu-id="261f7-250">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="261f7-250"></span></span><!-- --><span data-ttu-id="261f7-251">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Workbook original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.WorkbookData`</span><span class="sxs-lookup"><span data-stu-id="261f7-251">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`</span></span><!-- --><span data-ttu-id="261f7-252">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="261f7-252">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookData
        description: ''
  - uid: excel.Excel.Workbook.use1904DateSystem
    summary: "<span data-ttu-id=\"261f7-253\">True si el libro usa el sistema de fechas\_1904.</span><span class=\"sxs-lookup\"><span data-stu-id=\"261f7-253\">True if the workbook uses the 1904 date system.</span></span>\n\n<span data-ttu-id=\"261f7-254\">\\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"261f7-254\">\\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    isPreview: true
    name: use1904DateSystem
    fullName: use1904DateSystem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'use1904DateSystem: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.usePrecisionAsDisplayed
    summary: |-
      <span data-ttu-id="261f7-255">True si los cálculos de este libro se llevan a cabo con la misma precisión con que se muestran los números.</span><span class="sxs-lookup"><span data-stu-id="261f7-255">True if calculations in this workbook will be done using only the precision of the numbers as they're displayed.</span></span> <span data-ttu-id="261f7-256">Los datos perderán la precisión cuando se cambie esta propiedad de false a true.</span><span class="sxs-lookup"><span data-stu-id="261f7-256">Data will permanently lose accuracy when switching this property from false to true.</span></span>

      <span data-ttu-id="261f7-257">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-257">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: usePrecisionAsDisplayed
    fullName: usePrecisionAsDisplayed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'usePrecisionAsDisplayed: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Workbook.worksheets
    summary: |-
      <span data-ttu-id="261f7-258">Representa una colección de hojas de cálculo asociadas con el libro.</span><span class="sxs-lookup"><span data-stu-id="261f7-258">Represents a collection of worksheets associated with the workbook.</span></span> <span data-ttu-id="261f7-259">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="261f7-259">Read-only.</span></span>

      <span data-ttu-id="261f7-260">\[[Conjunto de API: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="261f7-260">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection