### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.GroupShapeCollection:class'
    summary: |-
      Representa la colección de formas dentro de un grupo de formas.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.GroupShapeCollection
    fullName: Excel.GroupShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.GroupShapeCollection#context:member'
      - 'excel!Excel.GroupShapeCollection#getCount:member(1)'
      - 'excel!Excel.GroupShapeCollection#getItem:member(1)'
      - 'excel!Excel.GroupShapeCollection#getItemAt:member(1)'
      - 'excel!Excel.GroupShapeCollection#items:member'
      - 'excel!Excel.GroupShapeCollection#load:member(1)'
      - 'excel!Excel.GroupShapeCollection#load:member(2)'
      - 'excel!Excel.GroupShapeCollection#load:member(3)'
      - 'excel!Excel.GroupShapeCollection#toJSON:member(1)'
  - uid: 'excel!Excel.GroupShapeCollection#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.GroupShapeCollection#getCount:member(1)'
    summary: |-
      Devuelve el número de formas del grupo de formas. Solo lectura.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.GroupShapeCollection#getItem:member(1)'
    summary: |-
      Obtiene una forma mediante su nombre o identificador.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: key
          description: Nombre o identificador de la forma que se va a recuperar.
          type:
            - string
  - uid: 'excel!Excel.GroupShapeCollection#getItemAt:member(1)'
    summary: |-
      Obtiene una forma basada en su posición en la colección.

      \[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: index
          description: Valor de índice de base cero del objeto que se va a recuperar.
          type:
            - number
  - uid: 'excel!Excel.GroupShapeCollection#items:member'
    summary: Obtiene los elementos secundarios cargados en esta colección.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection#items~0:complex'
  - uid: 'excel!Excel.GroupShapeCollection#load:member(1)'
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.GroupShapeCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.GroupShapeCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.GroupShapeCollection`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.GroupShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.GroupShapeCollection#load~0:complex'
  - uid: 'excel!Excel.GroupShapeCollection#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.GroupShapeCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.GroupShapeCollection#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.GroupShapeCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.GroupShapeCollectionData`<!-- -->) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.GroupShapeCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.GroupShapeCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.GroupShapeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.GroupShapeCollection#items~0:complex'
    name: 'Excel.Shape[]'
    fullName: 'Excel.Shape[]'
    spec.typeScript:
      - uid: 'excel!Excel.Shape:class'
        name: Excel.Shape
        fullName: Excel.Shape
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.GroupShapeCollection:class'
    name: Excel.GroupShapeCollection
  - uid: 'excel!Excel.GroupShapeCollection#load~0:complex'
    name: Excel.Interfaces.GroupShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.GroupShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.GroupShapeCollectionLoadOptions:interface'
        name: Excel.Interfaces.GroupShapeCollectionLoadOptions
        fullName: Excel.Interfaces.GroupShapeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.GroupShapeCollectionData:interface'
    name: Excel.Interfaces.GroupShapeCollectionData