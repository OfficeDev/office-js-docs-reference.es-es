### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentCollection:class'
    summary: |-
      Representa una colección de objetos Comment que forman parte del libro.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: Excel.CommentCollection
    fullName: Excel.CommentCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CommentCollection#add:member(1)'
      - 'excel!Excel.CommentCollection#add:member(2)'
      - 'excel!Excel.CommentCollection#context:member'
      - 'excel!Excel.CommentCollection#getCount:member(1)'
      - 'excel!Excel.CommentCollection#getItem:member(1)'
      - 'excel!Excel.CommentCollection#getItemAt:member(1)'
      - 'excel!Excel.CommentCollection#getItemByCell:member(1)'
      - 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
      - 'excel!Excel.CommentCollection#items:member'
      - 'excel!Excel.CommentCollection#load:member(1)'
      - 'excel!Excel.CommentCollection#load:member(2)'
      - 'excel!Excel.CommentCollection#load:member(3)'
      - 'excel!Excel.CommentCollection#toJSON:member(1)'
  - uid: 'excel!Excel.CommentCollection#add:member(1)'
    summary: |-
      Crea un nuevo comentario (hilo de comentarios) con el contenido dado en la celda especificada. Si `InvalidArgument` el rango proporcionado tiene más de una celda, se produce un error.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: 'add(content, cellAddress, contentType)'
    fullName: 'add(content, cellAddress, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, cellAddress: Range | string, contentType?: Excel.ContentType): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");

              // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.
              sheet.comments.add("TODO: add data.", "A2");
              await context.sync();
          });
          ```
      parameters:
        - id: content
          description: El contenido del comentario.
          type:
            - string
        - id: cellAddress
          description: 'Celda a la que se agrega el comentario. Puede ser un objeto de rango o una cadena. Si es una cadena, debe contener la dirección completa, incluido el nombre de la hoja. Si `InvalidArgument` el rango proporcionado tiene más de una celda, se produce un error.'
          type:
            - 'excel!Excel.CommentCollection#add~0:complex'
        - id: contentType
          description: Opcional. El tipo de contenido del comentario
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentCollection#add:member(2)'
    summary: |-
      Crea un nuevo comentario (hilo de comentarios) con el contenido dado en la celda especificada. Si `InvalidArgument` el rango proporcionado tiene más de una celda, se produce un error.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: 'add(content, cellAddress, contentTypeString)'
    fullName: 'add(content, cellAddress, contentTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, cellAddress: Range | string, contentTypeString?: "Plain"): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: content
          description: El contenido del comentario.
          type:
            - string
        - id: cellAddress
          description: 'Celda a la que se agrega el comentario. Puede ser un objeto de rango o una cadena. Si es una cadena, debe contener la dirección completa, incluido el nombre de la hoja. Si `InvalidArgument` el rango proporcionado tiene más de una celda, se produce un error.'
          type:
            - 'excel!Excel.CommentCollection#add~1:complex'
        - id: contentTypeString
          description: Opcional. El tipo de contenido del comentario
          type:
            - '"Plain"'
  - uid: 'excel!Excel.CommentCollection#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CommentCollection#getCount:member(1)'
    summary: |-
      Obtiene el número de comentarios de la colección.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.CommentCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.CommentCollection#getItem:member(1)'
    summary: |-
      Obtiene un comentario de la colección en función de su identificador. Solo lectura.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItem(commentId)
    fullName: getItem(commentId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentId: string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: commentId
          description: El identificador del comentario.
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#getItemAt:member(1)'
    summary: |-
      Obtiene un comentario de la colección en función de su posición.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: index
          description: Valor de índice del objeto que se va a recuperar. Indizado con cero.
          type:
            - number
  - uid: 'excel!Excel.CommentCollection#getItemByCell:member(1)'
    summary: |-
      Obtiene el comentario de la celda especificada.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItemByCell(cellAddress)
    fullName: getItemByCell(cellAddress)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByCell(cellAddress: Range | string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: cellAddress
          description: 'La celda en la que se encuentra el comentario. Puede ser un objeto de rango o una cadena. Si es una cadena, debe contener la dirección completa, incluido el nombre de la hoja. Si `InvalidArgument` el rango proporcionado tiene más de una celda, se produce un error.'
          type:
            - 'excel!Excel.CommentCollection#getItemByCell~0:complex'
  - uid: 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
    summary: |-
      Obtiene un comentario relacionado con su Id. de respuesta en la colección.

      \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItemByReplyId(replyId)
    fullName: getItemByReplyId(replyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByReplyId(replyId: string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: replyId
          description: Identificador de la respuesta de comentario.
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#items:member'
    summary: Obtiene los elementos secundarios cargados en esta colección.
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Comment[];'
      return:
        type:
          - 'excel!Excel.CommentCollection#items~0:complex'
  - uid: 'excel!Excel.CommentCollection#load:member(1)'
    summary: 'Pone en cola un comando para cargar las propiedades especificadas del objeto. Antes de leer las propiedades, debe llamar a "context.sync()".'
    remarks: |-
      Además de esta firma, este método tiene las siguientes firmas:

      `load(option?: string | string[]): Excel.CommentCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.

      `load(option?: { select?: string; expand?: string; }): Excel.CommentCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentCollection`-Solo disponible en tipos de colección. Es similar a la firma anterior. Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado. La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado. Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.CommentCollection#load~0:complex'
  - uid: 'excel!Excel.CommentCollection#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CommentCollection#load:member(3)'
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.CommentCollection#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.CommentCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.CommentCollectionData`<!-- -->) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CommentCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Comment:class'
    name: Excel.Comment
  - uid: 'excel!Excel.CommentCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ContentType:enum'
    name: Excel.ContentType
  - uid: 'excel!Excel.CommentCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CommentCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.CommentCollection#getItemByCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#items~0:complex'
    name: 'Excel.Comment[]'
    fullName: 'Excel.Comment[]'
    spec.typeScript:
      - uid: 'excel!Excel.Comment:class'
        name: Excel.Comment
        fullName: Excel.Comment
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentCollection:class'
    name: Excel.CommentCollection
  - uid: 'excel!Excel.CommentCollection#load~0:complex'
    name: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.CommentCollectionLoadOptions:interface'
        name: Excel.Interfaces.CommentCollectionLoadOptions
        fullName: Excel.Interfaces.CommentCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.CommentCollectionData:interface'
    name: Excel.Interfaces.CommentCollectionData