### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableCollection:class'
    summary: |-
      Representa una colección de todas las tablas dinámicas que forman parte del libro o de la hoja de cálculo.

      \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableCollection#add:member(1)'
      - 'excel!Excel.PivotTableCollection#context:member'
      - 'excel!Excel.PivotTableCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableCollection#items:member'
      - 'excel!Excel.PivotTableCollection#load:member(1)'
      - 'excel!Excel.PivotTableCollection#load:member(2)'
      - 'excel!Excel.PivotTableCollection#load:member(3)'
      - 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
      - 'excel!Excel.PivotTableCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableCollection#add:member(1)'
    summary: |-
      Agrega una tabla dinámica basada en los datos de origen especificados y la inserta en la celda superior izquierda del rango de destino.

      \[[Conjunto de API: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: |-
          Devuelve la tabla dinámica que se acaba de insertar.

          #### <a name="examples"></a>Ejemplos

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: Nombre de la nueva tabla dinámica.
          type:
            - string
        - id: source
          description: 'Los datos de origen de la nueva tabla dinámica, pueden ser un intervalo (o una dirección de cadena que incluya el nombre de la hoja de cálculo) o una tabla.'
          type:
            - 'excel!Excel.PivotTableCollection#add~0:complex'
        - id: destination
          description: Celda de la esquina superior izquierda del rango de destino del informe de tabla dinámica (el rango de la hoja de cálculo en el que se colocará el informe de tabla dinámica resultante).
          type:
            - 'excel!Excel.PivotTableCollection#add~1:complex'
  - uid: 'excel!Excel.PivotTableCollection#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableCollection#getCount:member(1)'
    summary: |-
      Obtiene el número de tablas dinámicas de una colección.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#getItem:member(1)'
    summary: |-
      Obtiene una tabla dinámica por nombre.

      \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Nombre de la tabla dinámica que se va a recuperar.
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
    summary: |-
      Obtiene una tabla dinámica por nombre. Si no existe la tabla dinámica, devolverá un objeto NULL.

      \[[Conjunto de API: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Nombre de la tabla dinámica que se va a recuperar.
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#items:member'
    summary: Obtiene los elementos secundarios cargados en esta colección.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: options
          description: Proporciona opciones para las propiedades del objeto que se va a cargar.
          type:
            - 'excel!Excel.PivotTableCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableCollection#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
    summary: |-
      Actualiza todas las tablas dinámicas de la colección.

      \[[Conjunto de API: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.PivotTableCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.PivotTableCollectionData`<!-- -->) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableCollection#add~0:complex'
    name: Range | string | Table
    fullName: Excel.Range | string | Excel.Table
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string | '
        fullName: ' | string | '
      - uid: 'excel!Excel.Table:class'
        name: Table
        fullName: Excel.Table
  - uid: 'excel!Excel.PivotTableCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTableCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.PivotTableCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
    name: Excel.Interfaces.PivotTableCollectionData