### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorkbookProtection
    summary: |-
      <span data-ttu-id="7f0f9-101">Representa la protección de un objeto Workbook.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-101">Represents the protection of a workbook object.</span></span>

      <span data-ttu-id="7f0f9-102">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f0f9-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorkbookProtection
    fullName: Excel.WorkbookProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.WorkbookProtection.context
      - excel.Excel.WorkbookProtection.load
      - excel.Excel.WorkbookProtection.load_1
      - excel.Excel.WorkbookProtection.load_2
      - excel.Excel.WorkbookProtection.protect
      - excel.Excel.WorkbookProtection.protected
      - excel.Excel.WorkbookProtection.toJSON
      - excel.Excel.WorkbookProtection.unprotect
  - uid: excel.Excel.WorkbookProtection.context
    summary: <span data-ttu-id="7f0f9-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-103">The request context associated with the object.</span></span> <span data-ttu-id="7f0f9-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.WorkbookProtection.load
    summary: '<span data-ttu-id="7f0f9-105">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f0f9-106">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="7f0f9-106">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="7f0f9-107">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="7f0f9-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7f0f9-108">`load(option?: string | string[]): Excel.WorkbookProtection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7f0f9-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7f0f9-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="7f0f9-111">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="7f0f9-112">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7f0f9-113">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7f0f9-114">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
  - uid: excel.Excel.WorkbookProtection.load_1
    summary: <span data-ttu-id="7f0f9-115">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f0f9-116">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7f0f9-117">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorkbookProtection.load_2
    summary: <span data-ttu-id="7f0f9-118">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f0f9-119">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7f0f9-120">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.WorkbookProtection.protect
    summary: |-
      <span data-ttu-id="7f0f9-121">Protege un libro.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-121">Protects a workbook.</span></span> <span data-ttu-id="7f0f9-122">Produce un error si se ha protegido el libro.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-122">Fails if the workbook has been protected.</span></span>

      <span data-ttu-id="7f0f9-123">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f0f9-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protect(password)
    fullName: protect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7f0f9-124">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="7f0f9-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect(password);
              }
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="7f0f9-125">contraseña de protección del libro.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-125">workbook protection password.</span></span>
          type:
            - string
  - uid: excel.Excel.WorkbookProtection.protected
    summary: |-
      <span data-ttu-id="7f0f9-126">Indica si el libro está protegido.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="7f0f9-127">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-127">Read-Only.</span></span>

      <span data-ttu-id="7f0f9-128">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f0f9-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.WorkbookProtection.toJSON
    summary: '<span data-ttu-id="7f0f9-129">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7f0f9-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7f0f9-130">.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-130"></span></span> <span data-ttu-id="7f0f9-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7f0f9-131"></span></span><!-- --><span data-ttu-id="7f0f9-132">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. WorkbookProtection original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.WorkbookProtectionData`</span><span class="sxs-lookup"><span data-stu-id="7f0f9-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`</span></span><!-- --><span data-ttu-id="7f0f9-133">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookProtectionData
        description: ''
  - uid: excel.Excel.WorkbookProtection.unprotect
    summary: |-
      <span data-ttu-id="7f0f9-134">Desprotege un libro.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-134">Unprotects a workbook.</span></span>

      <span data-ttu-id="7f0f9-135">\[[Conjunto de API: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f0f9-135">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7f0f9-136">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="7f0f9-136">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="7f0f9-137">contraseña de protección del libro.</span><span class="sxs-lookup"><span data-stu-id="7f0f9-137">workbook protection password.</span></span>
          type:
            - string