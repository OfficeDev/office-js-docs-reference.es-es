### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.IterativeCalculation:class'
    summary: |-
      <span data-ttu-id="ae024-101">Representa la configuración de cálculo iterativo.</span><span class="sxs-lookup"><span data-stu-id="ae024-101">Represents the Iterative Calculation settings.</span></span>

      <span data-ttu-id="ae024-102">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ae024-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.IterativeCalculation
    fullName: Excel.IterativeCalculation
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.IterativeCalculation#context:member'
      - 'excel!Excel.IterativeCalculation#enabled:member'
      - 'excel!Excel.IterativeCalculation#load:member(1)'
      - 'excel!Excel.IterativeCalculation#load:member(2)'
      - 'excel!Excel.IterativeCalculation#load:member(3)'
      - 'excel!Excel.IterativeCalculation#maxChange:member'
      - 'excel!Excel.IterativeCalculation#maxIteration:member'
      - 'excel!Excel.IterativeCalculation#set:member(1)'
      - 'excel!Excel.IterativeCalculation#set:member(2)'
      - 'excel!Excel.IterativeCalculation#toJSON:member(1)'
  - uid: 'excel!Excel.IterativeCalculation#context:member'
    summary: <span data-ttu-id="ae024-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="ae024-103">The request context associated with the object.</span></span> <span data-ttu-id="ae024-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="ae024-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.IterativeCalculation#enabled:member'
    summary: |-
      <span data-ttu-id="ae024-105">True si Excel usa iteración para resolver referencias circulares.</span><span class="sxs-lookup"><span data-stu-id="ae024-105">True if Excel will use iteration to resolve circular references.</span></span>

      <span data-ttu-id="ae024-106">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ae024-106">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enabled: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.IterativeCalculation#load:member(1)'
    summary: <span data-ttu-id="ae024-107">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="ae024-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae024-108">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="ae024-108">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.IterativeCalculationLoadOptions): Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="ae024-109">Proporciona opciones para las propiedades del objeto que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="ae024-109">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.IterativeCalculationLoadOptions:interface'
  - uid: 'excel!Excel.IterativeCalculation#load:member(2)'
    summary: <span data-ttu-id="ae024-110">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="ae024-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae024-111">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="ae024-111">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="ae024-112">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="ae024-112">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.IterativeCalculation#load:member(3)'
    summary: <span data-ttu-id="ae024-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="ae024-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae024-114">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="ae024-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.IterativeCalculation;
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ae024-115">`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="ae024-115">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.IterativeCalculation#maxChange:member'
    summary: |-
      <span data-ttu-id="ae024-116">Devuelve o establece el cambio máximo entre cada iteración cuando Excel resuelve referencias circulares.</span><span class="sxs-lookup"><span data-stu-id="ae024-116">Returns or sets the maximum amount of change between each iteration as Excel resolves circular references.</span></span>

      <span data-ttu-id="ae024-117">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ae024-117">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: maxChange
    fullName: maxChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxChange: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.IterativeCalculation#maxIteration:member'
    summary: |-
      <span data-ttu-id="ae024-118">Devuelve o establece el número máximo de iteraciones que puede usar Excel para resolver una referencia circular.</span><span class="sxs-lookup"><span data-stu-id="ae024-118">Returns or sets the maximum number of iterations that Excel can use to resolve a circular reference.</span></span>

      <span data-ttu-id="ae024-119">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ae024-119">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: maxIteration
    fullName: maxIteration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxIteration: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.IterativeCalculation#set:member(1)'
    summary: '<span data-ttu-id="ae024-120">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="ae024-120">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ae024-121">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="ae024-121">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="ae024-122">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="ae024-122">This method has the following additional signature:</span></span>

      `set(properties: Excel.IterativeCalculation): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.IterativeCalculationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="ae024-123">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="ae024-123">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.IterativeCalculationUpdateData:interface'
        - id: options
          description: <span data-ttu-id="ae024-124">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ae024-124">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.IterativeCalculation#set:member(2)'
    summary: '<span data-ttu-id="ae024-125">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="ae024-125">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.IterativeCalculation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.IterativeCalculation:class'
  - uid: 'excel!Excel.IterativeCalculation#toJSON:member(1)'
    summary: '<span data-ttu-id="ae024-126">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="ae024-126">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="ae024-127">.</span><span class="sxs-lookup"><span data-stu-id="ae024-127"></span></span> <span data-ttu-id="ae024-128">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="ae024-128"></span></span><!-- --><span data-ttu-id="ae024-129">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. IterativeCalculation original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.IterativeCalculationData`</span><span class="sxs-lookup"><span data-stu-id="ae024-129">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IterativeCalculation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IterativeCalculationData`</span></span><!-- --><span data-ttu-id="ae024-130">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="ae024-130">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.IterativeCalculationData;'
      return:
        type:
          - 'excel!Excel.Interfaces.IterativeCalculationData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.IterativeCalculation:class'
    name: Excel.IterativeCalculation
  - uid: 'excel!Excel.Interfaces.IterativeCalculationLoadOptions:interface'
    name: Excel.Interfaces.IterativeCalculationLoadOptions
  - uid: 'excel!Excel.Interfaces.IterativeCalculationUpdateData:interface'
    name: Interfaces.IterativeCalculationUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.IterativeCalculationData:interface'
    name: Excel.Interfaces.IterativeCalculationData