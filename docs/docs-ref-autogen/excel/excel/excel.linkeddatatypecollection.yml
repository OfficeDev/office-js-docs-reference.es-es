### YamlMime:TSType
name: Excel.LinkedDataTypeCollection
uid: excel!Excel.LinkedDataTypeCollection:class
package: excel!
fullName: Excel.LinkedDataTypeCollection
summary: >-
  Representa una colección de tipos de datos vinculados.


  \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.LinkedDataTypeCollection#context:member
  package: excel!
  fullName: context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: items
  uid: excel!Excel.LinkedDataTypeCollection#items:member
  package: excel!
  fullName: items
  summary: Obtiene los elementos secundarios cargados en esta colección.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.LinkedDataType[];'
    return:
      type: <xref uid="excel!Excel.LinkedDataType:class" />[]
methods:
- name: getCount()
  uid: excel!Excel.LinkedDataTypeCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Obtiene el número de tipos de datos vinculados de la colección.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: excel!Excel.LinkedDataTypeCollection#getItem:member(1)
  package: excel!
  fullName: getItem(key)
  summary: >-
    Obtiene un tipo de datos vinculado por identificador de servicio.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItem(key: number): Excel.LinkedDataType;'
    parameters:
    - id: key
      description: Identificador del tipo de datos vinculados.
      type: number
    return:
      type: <xref uid="excel!Excel.LinkedDataType:class" />
      description: ''
- name: getItemAt(index)
  uid: excel!Excel.LinkedDataTypeCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: >-
    Obtiene un tipo de datos vinculado por su índice en la colección.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Excel.LinkedDataType;'
    parameters:
    - id: index
      description: Índice del objeto de tipo de datos vinculado de la colección.
      type: number
    return:
      type: <xref uid="excel!Excel.LinkedDataType:class" />
      description: El tipo de datos vinculados en el índice especificado.
- name: getItemOrNullObject(key)
  uid: excel!Excel.LinkedDataTypeCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(key)
  summary: >-
    Obtiene un tipo de datos vinculado por ID. Si el tipo de datos vinculados no existe, un objeto con su `isNullObject` propiedad establecida en `true`<!-- -->. Para obtener más información, vea [métodos y propiedades de * OrNullObject](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: number): Excel.LinkedDataType;'
    parameters:
    - id: key
      description: Identificador del servicio del tipo de datos vinculado.
      type: number
    return:
      type: <xref uid="excel!Excel.LinkedDataType:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.LinkedDataTypeCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.LinkedDataTypeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.LinkedDataTypeCollection;'
    parameters:
    - id: options
      description: Proporciona opciones para las propiedades del objeto que se va a cargar.
      type: <xref uid="excel!Excel.Interfaces.LinkedDataTypeCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.LinkedDataTypeCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.LinkedDataTypeCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.LinkedDataTypeCollection;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.LinkedDataTypeCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.LinkedDataTypeCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.LinkedDataTypeCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.LinkedDataTypeCollection:class" />
      description: ''
- name: requestRefreshAll()
  uid: excel!Excel.LinkedDataTypeCollection#requestRefreshAll:member(1)
  package: excel!
  fullName: requestRefreshAll()
  summary: >-
    Realiza una solicitud para actualizar todos los tipos de datos vinculados de la colección. Si el servicio está ocupado o temporalmente inaccesible, no se cumplirá la solicitud.


    \[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'requestRefreshAll(): void;'
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.LinkedDataTypeCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el `Excel.LinkedDataTypeCollection` objeto original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como `Excel.Interfaces.LinkedDataTypeCollectionData`<!-- -->) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.LinkedDataTypeCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.LinkedDataTypeCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: d945bf7a308623f8acb34da09c9bd15aac5646a6
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49295246"
