### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Image:class'
    summary: |-
      <span data-ttu-id="4b4af-101">Representa una imagen de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="4b4af-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="4b4af-102">Para obtener el objeto Shape correspondiente, use Image. Shape.</span><span class="sxs-lookup"><span data-stu-id="4b4af-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="4b4af-103">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b4af-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Image#context:member'
      - 'excel!Excel.Image#format:member'
      - 'excel!Excel.Image#id:member'
      - 'excel!Excel.Image#load:member(1)'
      - 'excel!Excel.Image#load:member(2)'
      - 'excel!Excel.Image#load:member(3)'
      - 'excel!Excel.Image#shape:member'
      - 'excel!Excel.Image#toJSON:member(1)'
  - uid: 'excel!Excel.Image#context:member'
    summary: <span data-ttu-id="4b4af-104">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="4b4af-104">The request context associated with the object.</span></span> <span data-ttu-id="4b4af-105">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="4b4af-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Image#format:member'
    summary: |-
      <span data-ttu-id="4b4af-106">Devuelve el formato de la imagen.</span><span class="sxs-lookup"><span data-stu-id="4b4af-106">Returns the format of the image.</span></span> <span data-ttu-id="4b4af-107">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4b4af-107">Read-only.</span></span>

      <span data-ttu-id="4b4af-108">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b4af-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - 'excel!Excel.Image#format~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4b4af-109">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="4b4af-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Image#id:member'
    summary: |-
      <span data-ttu-id="4b4af-110">Indica el identificador de forma del objeto de imagen.</span><span class="sxs-lookup"><span data-stu-id="4b4af-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="4b4af-111">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4b4af-111">Read-only.</span></span>

      <span data-ttu-id="4b4af-112">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b4af-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Image#load:member(1)'
    summary: '<span data-ttu-id="4b4af-113">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="4b4af-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b4af-114">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="4b4af-114">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="4b4af-115">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="4b4af-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="4b4af-116">`load(option?: string | string[]): Excel.Image`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="4b4af-116">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="4b4af-117">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="4b4af-117">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="4b4af-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="4b4af-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="4b4af-119">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="4b4af-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="4b4af-120">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="4b4af-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4b4af-121">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="4b4af-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4b4af-122">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="4b4af-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - 'excel!Excel.Image:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ImageLoadOptions:interface'
  - uid: 'excel!Excel.Image#load:member(2)'
    summary: <span data-ttu-id="4b4af-123">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="4b4af-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b4af-124">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4b4af-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - 'excel!Excel.Image:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="4b4af-125">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="4b4af-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Image#load:member(3)'
    summary: <span data-ttu-id="4b4af-126">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="4b4af-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b4af-127">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4b4af-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
      return:
        type:
          - 'excel!Excel.Image:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4b4af-128">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="4b4af-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Image#shape:member'
    summary: |-
      <span data-ttu-id="4b4af-129">Devuelve el objeto de forma asociado con la imagen.</span><span class="sxs-lookup"><span data-stu-id="4b4af-129">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="4b4af-130">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4b4af-130">Read-only.</span></span>

      <span data-ttu-id="4b4af-131">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b4af-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.Image#toJSON:member(1)'
    summary: '<span data-ttu-id="4b4af-132">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4b4af-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4b4af-133">.</span><span class="sxs-lookup"><span data-stu-id="4b4af-133"></span></span> <span data-ttu-id="4b4af-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4b4af-134"></span></span><!-- --><span data-ttu-id="4b4af-135">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Image original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="4b4af-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="4b4af-136">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="4b4af-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ImageData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Image#format~0:complex'
    name: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
    fullName: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
    spec.typeScript:
      - uid: 'excel!Excel.PictureFormat:enum'
        name: Excel.PictureFormat
        fullName: Excel.PictureFormat
      - name: ' | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"'
        fullName: ' | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"'
  - uid: 'excel!Excel.Image:class'
    name: Excel.Image
  - uid: 'excel!Excel.Interfaces.ImageLoadOptions:interface'
    name: Excel.Interfaces.ImageLoadOptions
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.Interfaces.ImageData:interface'
    name: Excel.Interfaces.ImageData