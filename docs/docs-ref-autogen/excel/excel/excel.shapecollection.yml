### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ShapeCollection:class'
    summary: |-
      <span data-ttu-id="d12a0-101">Representa una colección de todas las formas de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-101">Represents a collection of all the shapes in the worksheet.</span></span>

      <span data-ttu-id="d12a0-102">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ShapeCollection
    fullName: Excel.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ShapeCollection#addGeometricShape:member(1)'
      - 'excel!Excel.ShapeCollection#addGeometricShape:member(2)'
      - 'excel!Excel.ShapeCollection#addGroup:member(1)'
      - 'excel!Excel.ShapeCollection#addImage:member(1)'
      - 'excel!Excel.ShapeCollection#addLine:member(1)'
      - 'excel!Excel.ShapeCollection#addLine:member(2)'
      - 'excel!Excel.ShapeCollection#addSvg:member(1)'
      - 'excel!Excel.ShapeCollection#addTextBox:member(1)'
      - 'excel!Excel.ShapeCollection#context:member'
      - 'excel!Excel.ShapeCollection#getCount:member(1)'
      - 'excel!Excel.ShapeCollection#getItem:member(1)'
      - 'excel!Excel.ShapeCollection#getItemAt:member(1)'
      - 'excel!Excel.ShapeCollection#items:member'
      - 'excel!Excel.ShapeCollection#load:member(1)'
      - 'excel!Excel.ShapeCollection#load:member(2)'
      - 'excel!Excel.ShapeCollection#load:member(3)'
      - 'excel!Excel.ShapeCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ShapeCollection#addGeometricShape:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-103">Agrega una forma geométrica a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-103">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="d12a0-104">Devuelve un objeto Shape que representa la nueva forma.</span><span class="sxs-lookup"><span data-stu-id="d12a0-104">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="d12a0-105">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGeometricShape(geometricShapeType)
    fullName: addGeometricShape(geometricShapeType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeType: Excel.GeometricShapeType): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d12a0-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d12a0-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);
              shape.left = 5;
              shape.top = 5;
              shape.height = 175;
              shape.width = 200;
              await context.sync();
          });
          ```
      parameters:
        - id: geometricShapeType
          description: '<span data-ttu-id="d12a0-107">Representa el tipo de la forma geométrica.</span><span class="sxs-lookup"><span data-stu-id="d12a0-107">Represents the type of the geometric shape.</span></span> <span data-ttu-id="d12a0-108">Para obtener más detalles, vea Excel.GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="d12a0-108">See Excel.GeometricShapeType for details.</span></span>'
          type:
            - 'excel!Excel.GeometricShapeType:enum'
  - uid: 'excel!Excel.ShapeCollection#addGeometricShape:member(2)'
    summary: |-
      <span data-ttu-id="d12a0-109">Agrega una forma geométrica a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-109">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="d12a0-110">Devuelve un objeto Shape que representa la nueva forma.</span><span class="sxs-lookup"><span data-stu-id="d12a0-110">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="d12a0-111">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-111">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGeometricShape(geometricShapeTypeString)
    fullName: addGeometricShape(geometricShapeTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeTypeString: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: geometricShapeTypeString
          description: '<span data-ttu-id="d12a0-112">Representa el tipo de la forma geométrica.</span><span class="sxs-lookup"><span data-stu-id="d12a0-112">Represents the type of the geometric shape.</span></span> <span data-ttu-id="d12a0-113">Para obtener más detalles, vea Excel.GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="d12a0-113">See Excel.GeometricShapeType for details.</span></span>'
          type:
            - '"LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"'
  - uid: 'excel!Excel.ShapeCollection#addGroup:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-114">Agrupa un subconjunto de formas en la hoja de cálculo de esta colección.</span><span class="sxs-lookup"><span data-stu-id="d12a0-114">Groups a subset of shapes in this collection's worksheet.</span></span> <span data-ttu-id="d12a0-115">Devuelve un objeto Shape que representa el nuevo grupo de formas.</span><span class="sxs-lookup"><span data-stu-id="d12a0-115">Returns a Shape object that represents the new group of shapes.</span></span>

      <span data-ttu-id="d12a0-116">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-116">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGroup(values)
    fullName: addGroup(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGroup(values: Array<string | Shape>): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d12a0-117">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d12a0-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const square = sheet.shapes.getItem("Square");
              const pentagon = sheet.shapes.getItem("Pentagon");
              const octagon = sheet.shapes.getItem("Octagon");

              const shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);
              shapeGroup.name = "Group";
              console.log("Shapes grouped");

              await context.sync();
          });
          ```
      parameters:
        - id: values
          description: <span data-ttu-id="d12a0-118">Una matriz de objetos Shape ID o Shape.</span><span class="sxs-lookup"><span data-stu-id="d12a0-118">An array of shape ID or shape objects.</span></span>
          type:
            - 'excel!Excel.ShapeCollection#addGroup~0:complex'
  - uid: 'excel!Excel.ShapeCollection#addImage:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-119">Crea una imagen de una cadena con codificación base64 y la agrega a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-119">Creates an image from a base64-encoded string and adds it to the worksheet.</span></span> <span data-ttu-id="d12a0-120">Devuelve el objeto Shape que representa la nueva imagen.</span><span class="sxs-lookup"><span data-stu-id="d12a0-120">Returns the Shape object that represents the new image.</span></span>

      <span data-ttu-id="d12a0-121">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-121">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addImage(base64ImageString)
    fullName: addImage(base64ImageString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addImage(base64ImageString: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d12a0-122">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d12a0-122">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("selectedFile");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  const startIndex = reader.result.toString().indexOf("base64,");
                  const mybase64 = reader.result.toString().substr(startIndex + 7);
                  const sheet = context.workbook.worksheets.getItem("Shapes");
                  const image = sheet.shapes.addImage(mybase64);
                  image.name = "Image";
                  return context.sync();
              });
          };

          // Read in the image file as a data URL.
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64ImageString
          description: <span data-ttu-id="d12a0-123">Una cadena codificada en Base64 que representa una imagen en formato JPEG o PNG.</span><span class="sxs-lookup"><span data-stu-id="d12a0-123">A base64-encoded string representing an image in either JPEG or PNG format.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#addLine:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-124">Agrega una línea a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-124">Adds a line to worksheet.</span></span> <span data-ttu-id="d12a0-125">Devuelve un objeto Shape que representa la nueva línea.</span><span class="sxs-lookup"><span data-stu-id="d12a0-125">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="d12a0-126">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-126">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorType?: Excel.ConnectorType): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d12a0-127">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d12a0-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);
              line.name = "StraightLine";
              await context.sync();
          });
          ```
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="d12a0-128">Distancia, en puntos, desde el principio de la línea hasta el lado izquierdo de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-128">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="d12a0-129">Distancia, en puntos, desde el principio de la línea hasta la parte superior de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-129">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="d12a0-130">Distancia, en puntos, desde el final de la línea a la izquierda de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-130">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="d12a0-131">Distancia, en puntos, desde el final de la línea hasta la parte superior de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-131">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorType
          description: <span data-ttu-id="d12a0-132">Representa el tipo de conector.</span><span class="sxs-lookup"><span data-stu-id="d12a0-132">Represents the connector type.</span></span> <span data-ttu-id="d12a0-133">Consulte Excel. ConnectorType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="d12a0-133">See Excel.ConnectorType for details.</span></span>
          type:
            - 'excel!Excel.ConnectorType:enum'
  - uid: 'excel!Excel.ShapeCollection#addLine:member(2)'
    summary: |-
      <span data-ttu-id="d12a0-134">Agrega una línea a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-134">Adds a line to worksheet.</span></span> <span data-ttu-id="d12a0-135">Devuelve un objeto Shape que representa la nueva línea.</span><span class="sxs-lookup"><span data-stu-id="d12a0-135">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="d12a0-136">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-136">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorTypeString?: "Straight" | "Elbow" | "Curve"): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="d12a0-137">Distancia, en puntos, desde el principio de la línea hasta el lado izquierdo de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-137">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="d12a0-138">Distancia, en puntos, desde el principio de la línea hasta la parte superior de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-138">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="d12a0-139">Distancia, en puntos, desde el final de la línea a la izquierda de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-139">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="d12a0-140">Distancia, en puntos, desde el final de la línea hasta la parte superior de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-140">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorTypeString
          description: <span data-ttu-id="d12a0-141">Representa el tipo de conector.</span><span class="sxs-lookup"><span data-stu-id="d12a0-141">Represents the connector type.</span></span> <span data-ttu-id="d12a0-142">Consulte Excel. ConnectorType para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="d12a0-142">See Excel.ConnectorType for details.</span></span>
          type:
            - '"Straight" | "Elbow" | "Curve"'
  - uid: 'excel!Excel.ShapeCollection#addSvg:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-143">Crea un gráfico vectorial escalable (SVG) de una cadena XML y lo agrega a la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-143">Creates a scalable vector graphic (SVG) from an XML string and adds it to the worksheet.</span></span> <span data-ttu-id="d12a0-144">Devuelve un objeto Shape que representa la nueva imagen.</span><span class="sxs-lookup"><span data-stu-id="d12a0-144">Returns a Shape object that represents the new image.</span></span>

      <span data-ttu-id="d12a0-145">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addSvg(xml)
    fullName: addSvg(xml)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSvg(xml: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: xml
          description: <span data-ttu-id="d12a0-146">Cadena XML que representa el SVG.</span><span class="sxs-lookup"><span data-stu-id="d12a0-146">An XML string that represents the SVG.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#addTextBox:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-147">Agrega un cuadro de texto a la hoja de cálculo con el texto proporcionado como contenido.</span><span class="sxs-lookup"><span data-stu-id="d12a0-147">Adds a text box to the worksheet with the provided text as the content.</span></span> <span data-ttu-id="d12a0-148">Devuelve un objeto Shape que representa el nuevo cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="d12a0-148">Returns a Shape object that represents the new text box.</span></span>

      <span data-ttu-id="d12a0-149">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-149">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addTextBox(text)
    fullName: addTextBox(text)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addTextBox(text?: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d12a0-150">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="d12a0-150">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const textbox = shapes.addTextBox("A box with text");
              textbox.left = 100;
              textbox.top = 100;
              textbox.height = 20;
              textbox.width = 175;
              textbox.name = "Textbox";
              await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="d12a0-151">Representa el texto que se mostrará en el cuadro de texto creado.</span><span class="sxs-lookup"><span data-stu-id="d12a0-151">Represents the text that will be shown in the created text box.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#context:member'
    summary: <span data-ttu-id="d12a0-152">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="d12a0-152">The request context associated with the object.</span></span> <span data-ttu-id="d12a0-153">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="d12a0-153">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ShapeCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-154">Devuelve el número de formas de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="d12a0-154">Returns the number of shapes in the worksheet.</span></span> <span data-ttu-id="d12a0-155">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d12a0-155">Read-only.</span></span>

      <span data-ttu-id="d12a0-156">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-156">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ShapeCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ShapeCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-157">Obtiene una forma mediante su nombre o identificador.</span><span class="sxs-lookup"><span data-stu-id="d12a0-157">Gets a shape using its Name or ID.</span></span>

      <span data-ttu-id="d12a0-158">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-158">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="d12a0-159">Nombre o identificador de la forma que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="d12a0-159">Name or ID of the shape to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ShapeCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="d12a0-160">Obtiene una forma utilizando su posición en la colección.</span><span class="sxs-lookup"><span data-stu-id="d12a0-160">Gets a shape using its position in the collection.</span></span>

      <span data-ttu-id="d12a0-161">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12a0-161">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="d12a0-162">Índice de base cero de la forma que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="d12a0-162">The zero-based index of the shape to be retrieved.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ShapeCollection#items:member'
    summary: <span data-ttu-id="d12a0-163">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="d12a0-163">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'excel!Excel.ShapeCollection#items~0:complex'
  - uid: 'excel!Excel.ShapeCollection#load:member(1)'
    summary: '<span data-ttu-id="d12a0-164">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d12a0-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d12a0-165">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="d12a0-165">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="d12a0-166">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="d12a0-166">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d12a0-167">`load(option?: string | string[]): Excel.ShapeCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d12a0-167">`load(option?: string | string[]): Excel.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d12a0-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="d12a0-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d12a0-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="d12a0-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="d12a0-170">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="d12a0-170">It is similar to the preceding signature.</span></span> <span data-ttu-id="d12a0-171">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d12a0-171">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d12a0-172">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="d12a0-172">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d12a0-173">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="d12a0-173">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ShapeCollection;'
      return:
        type:
          - 'excel!Excel.ShapeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ShapeCollection#load~0:complex'
  - uid: 'excel!Excel.ShapeCollection#load:member(2)'
    summary: <span data-ttu-id="d12a0-174">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="d12a0-174">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d12a0-175">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d12a0-175">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeCollection;'
      return:
        type:
          - 'excel!Excel.ShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d12a0-176">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="d12a0-176">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ShapeCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ShapeCollection;'
      return:
        type:
          - 'excel!Excel.ShapeCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ShapeCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="d12a0-177">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d12a0-177">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d12a0-178">.</span><span class="sxs-lookup"><span data-stu-id="d12a0-178"></span></span> <span data-ttu-id="d12a0-179">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d12a0-179"></span></span><!-- --><span data-ttu-id="d12a0-180">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.ShapeCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="d12a0-180">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="d12a0-181">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="d12a0-181">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ShapeCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.GeometricShapeType:enum'
    name: Excel.GeometricShapeType
  - uid: 'excel!Excel.ShapeCollection#addGroup~0:complex'
    name: Array<string | Shape>
    fullName: Array<string | Excel.Shape>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: '<string | '
        fullName: '<string | '
      - uid: 'excel!Excel.Shape:class'
        name: Shape
        fullName: Excel.Shape
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.ConnectorType:enum'
    name: Excel.ConnectorType
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ShapeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ShapeCollection#items~0:complex'
    name: 'Excel.Shape[]'
    fullName: 'Excel.Shape[]'
    spec.typeScript:
      - uid: 'excel!Excel.Shape:class'
        name: Excel.Shape
        fullName: Excel.Shape
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ShapeCollection:class'
    name: Excel.ShapeCollection
  - uid: 'excel!Excel.ShapeCollection#load~0:complex'
    name: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ShapeCollectionLoadOptions:interface'
        name: Excel.Interfaces.ShapeCollectionLoadOptions
        fullName: Excel.Interfaces.ShapeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ShapeCollectionData:interface'
    name: Excel.Interfaces.ShapeCollectionData