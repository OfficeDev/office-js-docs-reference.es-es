### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Slicer
    summary: |-
      <span data-ttu-id="768db-101">Representa un objeto Slicer en el libro.</span><span class="sxs-lookup"><span data-stu-id="768db-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="768db-102">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Slicer.caption
      - excel.Excel.Slicer.clearFilters
      - excel.Excel.Slicer.context
      - excel.Excel.Slicer.delete
      - excel.Excel.Slicer.getSelectedItems
      - excel.Excel.Slicer.height
      - excel.Excel.Slicer.id
      - excel.Excel.Slicer.isFilterCleared
      - excel.Excel.Slicer.left
      - excel.Excel.Slicer.load
      - excel.Excel.Slicer.load_1
      - excel.Excel.Slicer.load_2
      - excel.Excel.Slicer.name
      - excel.Excel.Slicer.nameInFormula
      - excel.Excel.Slicer.selectItems
      - excel.Excel.Slicer.set
      - excel.Excel.Slicer.set_1
      - excel.Excel.Slicer.slicerItems
      - excel.Excel.Slicer.sortBy
      - excel.Excel.Slicer.style
      - excel.Excel.Slicer.toJSON
      - excel.Excel.Slicer.top
      - excel.Excel.Slicer.width
      - excel.Excel.Slicer.worksheet
  - uid: excel.Excel.Slicer.caption
    summary: |-
      <span data-ttu-id="768db-103">Indica el título de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="768db-104">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.clearFilters
    summary: |-
      <span data-ttu-id="768db-105">Borra todos los filtros aplicados actualmente en la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="768db-106">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="768db-107">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="768db-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.context
    summary: <span data-ttu-id="768db-108">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="768db-108">The request context associated with the object.</span></span> <span data-ttu-id="768db-109">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="768db-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Slicer.delete
    summary: |-
      <span data-ttu-id="768db-110">Elimina la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-110">Deletes the slicer.</span></span>

      <span data-ttu-id="768db-111">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="768db-112">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="768db-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.getSelectedItems
    summary: |-
      <span data-ttu-id="768db-113">Devuelve una matriz de claves de los elementos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="768db-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="768db-114">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="768db-114">Read-only.</span></span>

      <span data-ttu-id="768db-115">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: ''
  - uid: excel.Excel.Slicer.height
    summary: |-
      <span data-ttu-id="768db-116">Indica el alto, en puntos, de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="768db-117">Produce una excepción de argumento no válido cuando se establece con valor negativo o cero como entrada.</span><span class="sxs-lookup"><span data-stu-id="768db-117">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="768db-118">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.id
    summary: |-
      <span data-ttu-id="768db-119">Indica el Id. único de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-119">Represents the unique id of slicer.</span></span> <span data-ttu-id="768db-120">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="768db-120">Read-only.</span></span>

      <span data-ttu-id="768db-121">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.isFilterCleared
    summary: |-
      <span data-ttu-id="768db-122">Verdadero si se borran todos los filtros aplicados actualmente en la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-122">True if all filters currently applied on the slicer are cleared.</span></span>

      <span data-ttu-id="768db-123">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Slicer.left
    summary: |-
      <span data-ttu-id="768db-124">La distancia, en puntos, desde el lado izquierdo de la segmentación hasta el izquierdo de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="768db-124">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="768db-125">Produce una excepción de argumento no válido cuando se establece con valor negativo como entrada.</span><span class="sxs-lookup"><span data-stu-id="768db-125">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="768db-126">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.load
    summary: '<span data-ttu-id="768db-127">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="768db-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="768db-128">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="768db-128">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="768db-129">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="768db-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="768db-130">`load(option?: string | string[]): Excel.Slicer`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="768db-130">`load(option?: string | string[]): Excel.Slicer` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="768db-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="768db-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="768db-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="768db-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer` - Only available on collection types.</span></span> <span data-ttu-id="768db-133">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="768db-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="768db-134">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="768db-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="768db-135">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="768db-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="768db-136">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="768db-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SlicerLoadOptions
  - uid: excel.Excel.Slicer.load_1
    summary: <span data-ttu-id="768db-137">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="768db-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="768db-138">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="768db-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="768db-139">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="768db-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Slicer.load_2
    summary: <span data-ttu-id="768db-140">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="768db-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="768db-141">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="768db-141">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="768db-142">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="768db-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Slicer.name
    summary: |-
      <span data-ttu-id="768db-143">Indica el nombre de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-143">Represents the name of slicer.</span></span>

      <span data-ttu-id="768db-144">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.nameInFormula
    summary: |-
      <span data-ttu-id="768db-145">Indica el nombre de la segmentación usado en la fórmula.</span><span class="sxs-lookup"><span data-stu-id="768db-145">Represents the slicer name used in the formula.</span></span>

      <span data-ttu-id="768db-146">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.selectItems
    summary: |-
      <span data-ttu-id="768db-147">Selecciona elementos de segmentación en función de sus claves.</span><span class="sxs-lookup"><span data-stu-id="768db-147">Select slicer items based on their keys.</span></span> <span data-ttu-id="768db-148">Se borrará la selección anterior.</span><span class="sxs-lookup"><span data-stu-id="768db-148">Previous selection will be cleared.</span></span> <span data-ttu-id="768db-149">Todos los elementos se seleccionarán de forma predeterminada si la matriz está vacía.</span><span class="sxs-lookup"><span data-stu-id="768db-149">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="768db-150">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-150">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="768db-151">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="768db-151">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="768db-152">Opcional.</span><span class="sxs-lookup"><span data-stu-id="768db-152">Optional.</span></span> <span data-ttu-id="768db-153">Los nombres de elemento de segmentación de elementos especificados que se van a seleccionar.</span><span class="sxs-lookup"><span data-stu-id="768db-153">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: excel.Excel.Slicer.set
    summary: '<span data-ttu-id="768db-154">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="768db-154">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="768db-155">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="768db-155">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="768db-156">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="768db-156">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="768db-157">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="768db-157">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.SlicerUpdateData
        - id: options
          description: <span data-ttu-id="768db-158">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="768db-158">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Slicer.set_1
    summary: '<span data-ttu-id="768db-159">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="768db-159">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Slicer
  - uid: excel.Excel.Slicer.slicerItems
    summary: |-
      <span data-ttu-id="768db-160">Indica la colección de SlicerItems que forman parte de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-160">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="768db-161">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="768db-161">Read-only.</span></span>

      <span data-ttu-id="768db-162">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - excel.Excel.SlicerItemCollection
  - uid: excel.Excel.Slicer.sortBy
    summary: |-
      <span data-ttu-id="768db-163">Indica el orden de los elementos de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-163">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="768db-164">Los valores posibles son: DataSourceOrder, Ascending, Descending.</span><span class="sxs-lookup"><span data-stu-id="768db-164">Possible values are: DataSourceOrder, Ascending, Descending.</span></span>

      <span data-ttu-id="768db-165">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-165">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
  - uid: excel.Excel.Slicer.style
    summary: |-
      <span data-ttu-id="768db-166">Valor constante que representa el estilo de segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-166">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="768db-167">Los valores posibles son: "SlicerStyleLight1" a "SlicerStyleLight6", "TableStyleOther1" a "TableStyleOther2", "SlicerStyleDark1" a "SlicerStyleDark6".</span><span class="sxs-lookup"><span data-stu-id="768db-167">Possible values are: "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".</span></span> <span data-ttu-id="768db-168">También puede especificarse un estilo personalizado definido por el usuario presente en el libro.</span><span class="sxs-lookup"><span data-stu-id="768db-168">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="768db-169">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-169">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="768db-170">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="768db-170">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.toJSON
    summary: '<span data-ttu-id="768db-171">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="768db-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="768db-172">.</span><span class="sxs-lookup"><span data-stu-id="768db-172"></span></span> <span data-ttu-id="768db-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="768db-173"></span></span><!-- --><span data-ttu-id="768db-174">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Excel. Sliceer original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="768db-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="768db-175">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="768db-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerData
        description: ''
  - uid: excel.Excel.Slicer.top
    summary: |-
      <span data-ttu-id="768db-176">La distancia, en puntos, desde el borde superior de la segmentación hasta la parte superior de la hoja de cálculo.</span><span class="sxs-lookup"><span data-stu-id="768db-176">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="768db-177">Produce una excepción de argumento no válido cuando se establece con valor negativo como entrada.</span><span class="sxs-lookup"><span data-stu-id="768db-177">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="768db-178">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.width
    summary: |-
      <span data-ttu-id="768db-179">Indica el ancho, en puntos, de la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-179">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="768db-180">Produce una excepción de argumento no válido cuando se establece con valor negativo o cero como entrada.</span><span class="sxs-lookup"><span data-stu-id="768db-180">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="768db-181">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.worksheet
    summary: |-
      <span data-ttu-id="768db-182">Indica la hoja de cálculo que contiene la segmentación.</span><span class="sxs-lookup"><span data-stu-id="768db-182">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="768db-183">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="768db-183">Read-only.</span></span>

      <span data-ttu-id="768db-184">\[[Conjunto de API: EXCELAPI beta (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="768db-184">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet