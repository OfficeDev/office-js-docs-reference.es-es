### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableScopedCollection
    summary: |-
      <span data-ttu-id="143ac-101">Representa una colección de tablas con ámbito.</span><span class="sxs-lookup"><span data-stu-id="143ac-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="143ac-102">Para cada tabla, su esquina superior izquierda se considera la ubicación del delimitador y las tablas se ordenan de arriba abajo y de izquierda a derecha.</span><span class="sxs-lookup"><span data-stu-id="143ac-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>

      <span data-ttu-id="143ac-103">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="143ac-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableScopedCollection
    fullName: Excel.TableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableScopedCollection.context
      - excel.Excel.TableScopedCollection.getCount
      - excel.Excel.TableScopedCollection.getFirst
      - excel.Excel.TableScopedCollection.getItem
      - excel.Excel.TableScopedCollection.items
      - excel.Excel.TableScopedCollection.load
      - excel.Excel.TableScopedCollection.load_1
      - excel.Excel.TableScopedCollection.load_2
      - excel.Excel.TableScopedCollection.toJSON
  - uid: excel.Excel.TableScopedCollection.context
    summary: <span data-ttu-id="143ac-104">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="143ac-104">The request context associated with the object.</span></span> <span data-ttu-id="143ac-105">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="143ac-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableScopedCollection.getCount
    summary: |-
      <span data-ttu-id="143ac-106">Obtiene el número de tablas de la colección.</span><span class="sxs-lookup"><span data-stu-id="143ac-106">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="143ac-107">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="143ac-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.TableScopedCollection.getFirst
    summary: |-
      <span data-ttu-id="143ac-108">Obtiene la primera tabla de la colección.</span><span class="sxs-lookup"><span data-stu-id="143ac-108">Gets the first table in the collection.</span></span> <span data-ttu-id="143ac-109">Las tablas de la colección están ordenadas de arriba a abajo y de izquierda a derecha, de forma que la tabla superior izquierda es la primera tabla de la colección.</span><span class="sxs-lookup"><span data-stu-id="143ac-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>

      <span data-ttu-id="143ac-110">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="143ac-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
  - uid: excel.Excel.TableScopedCollection.getItem
    summary: |-
      <span data-ttu-id="143ac-111">Obtiene una tabla por nombre o identificador.</span><span class="sxs-lookup"><span data-stu-id="143ac-111">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="143ac-112">\[[Conjunto de API: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="143ac-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="143ac-113">Nombre o identificador de la tabla que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="143ac-113">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.TableScopedCollection.items
    summary: <span data-ttu-id="143ac-114">Obtiene los elementos secundarios cargados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="143ac-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'Excel.Table[]'
  - uid: excel.Excel.TableScopedCollection.load
    summary: '<span data-ttu-id="143ac-115">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="143ac-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="143ac-116">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="143ac-116">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="143ac-117">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="143ac-117">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="143ac-118">`load(option?: string | string[]): Excel.TableScopedCollection`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="143ac-118">`load(option?: string | string[]): Excel.TableScopedCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="143ac-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="143ac-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="143ac-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="143ac-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection` - Only available on collection types.</span></span> <span data-ttu-id="143ac-121">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="143ac-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="143ac-122">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="143ac-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="143ac-123">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="143ac-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="143ac-124">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="143ac-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.TableScopedCollection.load_1
    summary: <span data-ttu-id="143ac-125">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="143ac-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="143ac-126">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="143ac-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="143ac-127">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="143ac-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableScopedCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.TableScopedCollection.toJSON
    summary: '<span data-ttu-id="143ac-128">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="143ac-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="143ac-129">.</span><span class="sxs-lookup"><span data-stu-id="143ac-129"></span></span> <span data-ttu-id="143ac-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="143ac-130"></span></span><!-- --><span data-ttu-id="143ac-131">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.TableScopedCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.TableScopedCollectionData`</span><span class="sxs-lookup"><span data-stu-id="143ac-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`</span></span><!-- --><span data-ttu-id="143ac-132">) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="143ac-132">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.TableScopedCollectionData
        description: ''