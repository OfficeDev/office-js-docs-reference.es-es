### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableScopedCollection:class'
    summary: |-
      Representa una colección con ámbito de tablas dinámicas. Las tablas dinámicas se ordenan en función de la ubicación de la esquina superior izquierda de la tabla dinámica. Se ordenan de arriba abajo y de izquierda a derecha.

      \[[Conjunto de API: ExcelApiOnline 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotTableScopedCollection
    fullName: Excel.PivotTableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableScopedCollection#context:member'
      - 'excel!Excel.PivotTableScopedCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getFirst:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#items:member'
      - 'excel!Excel.PivotTableScopedCollection#load:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#load:member(2)'
      - 'excel!Excel.PivotTableScopedCollection#load:member(3)'
      - 'excel!Excel.PivotTableScopedCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableScopedCollection#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableScopedCollection#getCount:member(1)'
    summary: |-
      Obtiene el número de tablas dinámicas de la colección.

      \[[Conjunto de API: ExcelApiOnline 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableScopedCollection#getFirst:member(1)'
    summary: |-
      Obtiene la primera tabla dinámica de la colección. Las tablas dinámicas de la colección se ordenan de arriba a abajo y de izquierda a derecha, de tal forma que la tabla superior izquierda es la primera tabla dinámica de la colección.

      \[[Conjunto de API: ExcelApiOnline 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
  - uid: 'excel!Excel.PivotTableScopedCollection#getItem:member(1)'
    summary: |-
      Obtiene una tabla dinámica por nombre.

      \[[Conjunto de API: ExcelApiOnline 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: key
          description: Nombre de la tabla dinámica que se va a recuperar.
          type:
            - string
  - uid: 'excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)'
    summary: |-
      Obtiene una tabla dinámica por nombre. Si no existe la tabla dinámica, devolverá un objeto NULL.

      \[[Conjunto de API: ExcelApiOnline 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Nombre de la tabla dinámica que se va a recuperar.
          type:
            - string
  - uid: 'excel!Excel.PivotTableScopedCollection#items:member'
    summary: Obtiene los elementos secundarios cargados en esta colección.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: options
          description: Proporciona opciones para las propiedades del objeto que se va a cargar.
          type:
            - 'excel!Excel.PivotTableScopedCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van `propertyNamesAndPaths.expand` a cargar y es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableScopedCollection#toJSON:member(1)'
    summary: 'Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el `Excel.PivotTableScopedCollection` objeto original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Excel.Interfaces.PivotTableScopedCollectionData`<!-- -->) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableScopedCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableScopedCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableScopedCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableScopedCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableScopedCollection:class'
    name: Excel.PivotTableScopedCollection
  - uid: 'excel!Excel.PivotTableScopedCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableScopedCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableScopedCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableScopedCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableScopedCollectionData:interface'
    name: Excel.Interfaces.PivotTableScopedCollectionData