### YamlMime:UniversalReference
ms.openlocfilehash: 0d319098dfdeb44e0754289afff3272be9c58298
ms.sourcegitcommit: 5c1011d5e46e007fd1f7f620d4dff74356dcd029
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 03/01/2019
ms.locfileid: "30358977"
items:
- uid: Outlook_1_2.Office.AppointmentCompose
  summary: >-
    El modo de organizador de citas de [Office. Context. Mailbox. Item](xref:Outlook_1_2.Office.Item)<!-- -->.


    **Importante**: se trata de un objeto interno de Outlook, que no se expone directamente a través de las interfaces existentes. Debe tratarlo como un modo de Office. Context. Mailbox. Item. Consulte la página del [modelo de objetos](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.2/office.context.mailbox.item) para obtener más información.
  name: Office.AppointmentCompose
  fullName: Office.AppointmentCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Appointment
  - 'ItemCompose '
  package: Outlook_1_2
  children:
  - Outlook_1_2.Office.AppointmentCompose.addFileAttachmentAsync
  - Outlook_1_2.Office.AppointmentCompose.addFileAttachmentAsync_1
  - Outlook_1_2.Office.AppointmentCompose.addItemAttachmentAsync
  - Outlook_1_2.Office.AppointmentCompose.addItemAttachmentAsync_1
  - Outlook_1_2.Office.AppointmentCompose.getSelectedDataAsync
  - Outlook_1_2.Office.AppointmentCompose.getSelectedDataAsync_1
  - Outlook_1_2.Office.AppointmentCompose.loadCustomPropertiesAsync
  - Outlook_1_2.Office.AppointmentCompose.removeAttachmentAsync
  - Outlook_1_2.Office.AppointmentCompose.removeAttachmentAsync_1
  - Outlook_1_2.Office.AppointmentCompose.setSelectedDataAsync
  - Outlook_1_2.Office.AppointmentCompose.setSelectedDataAsync_1
  - Outlook_1_2.Office.AppointmentCompose.body
  - Outlook_1_2.Office.AppointmentCompose.end
  - Outlook_1_2.Office.AppointmentCompose.itemType
  - Outlook_1_2.Office.AppointmentCompose.location
  - Outlook_1_2.Office.AppointmentCompose.optionalAttendees
  - Outlook_1_2.Office.AppointmentCompose.requiredAttendees
  - Outlook_1_2.Office.AppointmentCompose.start
  - Outlook_1_2.Office.AppointmentCompose.subject
- uid: Outlook_1_2.Office.AppointmentCompose.addFileAttachmentAsync
  summary: >-
    Agrega un archivo a un mensaje o cita como datos adjuntos.


    El método addFileAttachmentAsync carga el archivo en el URI especificado y lo asocia al elemento en el formulario de redacción.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>AttachmentSizeExceeded: los datos adjuntos son más grandes de lo permitidos.</td></tr> <tr><td></td><td>FileTypeNotSupported: los datos adjuntos tienen una extensión no permitida.</td></tr> <tr><td></td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr> </table>

    ####Incluyen


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: El URI que proporciona la ubicación del archivo que se va a adjuntar al mensaje o a la cita. La longitud máxima es de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada. isInline: si es true, indica que los datos adjuntos se mostrarán en línea en el cuerpo del mensaje y no deben mostrarse en la lista de datos adjuntos.'
      type:
      - 'Office.AsyncContextOptions & { isInline: boolean }'
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si la carga de los datos adjuntos no se completa correctamente, el objeto asyncResult contendrá un objeto Error que proporcionará una descripción del error.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.addFileAttachmentAsync_1
  summary: >-
    Agrega un archivo a un mensaje o cita como datos adjuntos.


    El método addFileAttachmentAsync carga el archivo en el URI especificado y lo asocia al elemento en el formulario de redacción.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: '<table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>AttachmentSizeExceeded: los datos adjuntos son más grandes de lo permitidos.</td></tr> <tr><td></td><td>FileTypeNotSupported: los datos adjuntos tienen una extensión no permitida.</td></tr> <tr><td></td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr> </table>'
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: El URI que proporciona la ubicación del archivo que se va a adjuntar al mensaje o a la cita. La longitud máxima es de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si la carga de los datos adjuntos no se completa correctamente, el objeto asyncResult contendrá un objeto Error que proporcionará una descripción del error.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.addItemAttachmentAsync
  summary: >-
    Agrega un elemento de Exchange (por ejemplo, un mensaje) como datos adjuntos al mensaje o a la cita.


    El método addItemAttachmentAsync adjunta el elemento con el identificador de Exchange especificado al elemento del formulario de redacción. Si especifica un método de devolución de llamada, se llamará a este con un parámetro, asyncResult, que contiene el identificador de datos adjuntos o un código que indica cualquier error que se haya generado al adjuntar el elemento. Con el parámetro options, puede pasar información de estado al método de devolución de llamada, si lo considera necesario.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    Si el complemento para Office se ejecuta en Outlook Web App, el método addItemAttachmentAsync puede adjuntar elementos a otros elementos distintos del elemento que quiere editar. No obstante, esta acción no es compatible y no se recomienda.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr> </table>

    ####Incluyen


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: El identificador de Exchange del elemento que debe adjuntarse. La longitud máxima es de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si se produce un error al agregar los datos adjuntos, el objeto asyncResult contendrá un objeto error que proporciona una descripción del error.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.addItemAttachmentAsync_1
  summary: >-
    Agrega un elemento de Exchange (por ejemplo, un mensaje) como datos adjuntos al mensaje o a la cita.


    El método addItemAttachmentAsync adjunta el elemento con el identificador de Exchange especificado al elemento del formulario de redacción. Si especifica un método de devolución de llamada, se llamará a este con un parámetro, asyncResult, que contiene el identificador de datos adjuntos o un código que indica cualquier error que se haya generado al adjuntar el elemento. Con el parámetro options, puede pasar información de estado al método de devolución de llamada, si lo considera necesario.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    Si el complemento para Office se ejecuta en Outlook Web App, el método addItemAttachmentAsync puede adjuntar elementos a otros elementos distintos del elemento que quiere editar. No obstante, esta acción no es compatible y no se recomienda.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: '<table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr> </table>'
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: El identificador de Exchange del elemento que debe adjuntarse. La longitud máxima es de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si se produce un error al agregar los datos adjuntos, el objeto asyncResult contendrá un objeto error que proporciona una descripción del error.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.getSelectedDataAsync
  summary: >-
    Devuelve asincrónicamente datos seleccionados desde el asunto o el cuerpo de un mensaje.


    Si no hay ninguna selección, pero el cursor está en el cuerpo o el asunto, el método devuelve el valor NULL para los datos seleccionados. Si se selecciona un campo que no sea el asunto o el cuerpo, el método devuelve el error InvalidSelection.


    Para tener acceso a los datos seleccionados desde el método de devolución de llamada, llame a asyncResult.value.data. Para tener acceso a la propiedad de origen de la que proviene la selección, llame a asyncResult.value.sourceProperty, que será body o subject.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: Los datos seleccionados como cadena con formato determinado por coercionType.
    parameters:
    - id: coercionType
      description: Solicita un formato para los datos. Si es Texto, el método devuelve el texto sin formato como cadena, quitando toda etiqueta HTML que hubiera. Si es HTML, el método devuelve el texto seleccionado, ya sea texto sin formato o HTML.
      type:
      - Office.CoercionType
    - id: options
      description: 'Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<any>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.getSelectedDataAsync_1
  summary: >-
    Devuelve asincrónicamente datos seleccionados desde el asunto o el cuerpo de un mensaje.


    Si no hay ninguna selección, pero el cursor está en el cuerpo o el asunto, el método devuelve el valor NULL para los datos seleccionados. Si se selecciona un campo que no sea el asunto o el cuerpo, el método devuelve el error InvalidSelection.


    Para tener acceso a los datos seleccionados desde el método de devolución de llamada, llame a asyncResult.value.data. Para tener acceso a la propiedad de origen de la que proviene la selección, llame a asyncResult.value.sourceProperty, que será body o subject.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: Los datos seleccionados como cadena con formato determinado por coercionType.
    parameters:
    - id: coercionType
      description: Solicita un formato para los datos. Si es Texto, el método devuelve el texto sin formato como cadena, quitando toda etiqueta HTML que hubiera. Si es HTML, el método devuelve el texto seleccionado, ya sea texto sin formato o HTML.
      type:
      - Office.CoercionType
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.loadCustomPropertiesAsync
  summary: >-
    Carga de forma asincrónica las propiedades personalizadas de este complemento en el elemento seleccionado.


    Las propiedades personalizadas se almacenan como pares de clave/valor según la aplicación y el elemento. Este método devuelve un objeto CustomProperties en la devolución de llamada, que proporciona métodos para tener acceso a las propiedades personalizadas específicas del elemento y el complemento actual. Las propiedades personalizadas no están cifradas en el elemento, por lo que no debería usarse como almacenamiento seguro.


    Las propiedades personalizadas se proporcionan como un objeto CustomProperties en la propiedad asyncResult.value. Este objeto puede usarse para obtener, establecer y quitar las propiedades personalizadas del elemento, y guardar los cambios en la propiedad personalizada que se vuelve a establecer en el servidor.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: Opcional. Los desarrolladores pueden proporcionar cualquier objeto al que quieran obtener acceso en la función de devolución de llamada. Se puede obtener acceso a este objeto mediante la propiedad asyncResult. asyncContext en la función de devolución de llamada.
      type:
      - any
- uid: Outlook_1_2.Office.AppointmentCompose.removeAttachmentAsync
  summary: >-
    Quita los datos adjuntos de un mensaje o cita.


    El método removeAttachmentAsync quita los datos adjuntos con el identificador especificado del elemento. Como práctica recomendada, debe usar el identificador de datos adjuntos para quitar datos adjuntos solo si la misma aplicación de correo ha agregado los datos adjuntos en la misma sesión. En Outlook Web App y Outlook Web App para dispositivos, el identificador de datos adjuntos solo es válido en la misma sesión. Una sesión finaliza cuando el usuario cierra la aplicación, o bien si el usuario empieza a redactar en un formulario insertado y, después, se extrae el formulario en línea para continuar en una ventana independiente.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr> </table>

    ####Incluyen


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: El identificador de los datos adjuntos para quitar.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se produce un error en la eliminación de los datos adjuntos, la propiedad asyncResult. error contendrá un código de error con el motivo del error.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.removeAttachmentAsync_1
  summary: >-
    Quita los datos adjuntos de un mensaje o cita.


    El método removeAttachmentAsync quita los datos adjuntos con el identificador especificado del elemento. Como práctica recomendada, debe usar el identificador de datos adjuntos para quitar datos adjuntos solo si la misma aplicación de correo ha agregado los datos adjuntos en la misma sesión. En Outlook Web App y Outlook Web App para dispositivos, el identificador de datos adjuntos solo es válido en la misma sesión. Una sesión finaliza cuando el usuario cierra la aplicación, o bien si el usuario empieza a redactar en un formulario insertado y, después, se extrae el formulario en línea para continuar en una ventana independiente.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: '<table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr> </table>'
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: El identificador de los datos adjuntos para quitar.
      type:
      - string
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se produce un error en la eliminación de los datos adjuntos, la propiedad asyncResult. error contendrá un código de error con el motivo del error.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.setSelectedDataAsync
  summary: >-
    Inserta asincrónicamente datos en el cuerpo o el asunto de un mensaje.


    El método setSelectedDataAsync inserta la cadena especificada en la ubicación del cursor en el asunto o el cuerpo del elemento, o bien, si se selecciona texto en el editor, reemplaza el texto seleccionado. Si el cursor no está en el campo Body o Subject, se devuelve un error. Después de insertarlo, el cursor se coloca al final del contenido insertado.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr> </table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Los datos que se insertarán. Los datos no deben superar el 1 000 000 de caracteres. Si se pasan más de 1 000 000 de caracteres, se produce una excepción ArgumentOutOfRange.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada. coercionType: si Text, el estilo actual se aplica en Outlook Web App y Outlook. Si el campo es un editor de HTML, se insertan solo los datos de texto, aunque los datos sean HTML. Si HTML y el campo admiten HTML (el asunto no), se aplica el estilo actual en Outlook Web App y se aplica el estilo predeterminado en Outlook. Si el campo es un campo de texto, se devuelve un error InvalidDataFormat. Si no se estableció coercionType, el resultado depende del campo: si el campo es HTML, se usa HTML; si el campo es de texto, se usa texto sin formato.'
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.setSelectedDataAsync_1
  summary: >-
    Inserta asincrónicamente datos en el cuerpo o el asunto de un mensaje.


    El método setSelectedDataAsync inserta la cadena especificada en la ubicación del cursor en el asunto o el cuerpo del elemento, o bien, si se selecciona texto en el editor, reemplaza el texto seleccionado. Si el cursor no está en el campo Body o Subject, se devuelve un error. Después de insertarlo, el cursor se coloca al final del contenido insertado.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr> </table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Los datos que se insertarán. Los datos no deben superar el 1 000 000 de caracteres. Si se pasan más de 1 000 000 de caracteres, se produce una excepción ArgumentOutOfRange.
      type:
      - string
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_2.Office.AppointmentCompose.body
  summary: >-
    Obtiene un objeto que proporciona métodos para manipular el cuerpo de un elemento.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    // This example gets the body of the message as plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of an object that is passed as the result parameter to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_2.Office.AppointmentCompose.end
  summary: >-
    Obtiene o establece la fecha y la hora de finalización de la cita.


    La propiedad end es un objeto [Office. Time](xref:Outlook_1_2.Office.Time) expresado como un valor de fecha y hora de la hora universal coordinada (UTC). Puede usar el método convertToLocalClientTime para convertir el valor de la propiedad end en la fecha y hora local del cliente.


    Si usa el método Time.setAsync para establecer la hora de finalización, use el método convertToUtcClientTime para convertir la hora local del cliente en un valor UTC para el servidor.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    // The following example sets the end time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var endTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.end.setAsync(endTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("End Time " + result.asyncContext.verb);
        }
    });

    ```
  name: end
  fullName: end
  langs:
  - typeScript
  type: property
  syntax:
    content: 'end: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_2.Office.AppointmentCompose.itemType
  summary: >-
    Obtiene el tipo de elemento que representa una instancia.


    La propiedad itemType devuelve uno de los valores de enumeración de ItemType, lo que indica si la instancia del objeto item es un mensaje o una cita.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Appointment) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_2.Office.AppointmentCompose.location
  summary: >-
    Obtiene o establece la [oficina. ubicación](xref:Outlook_1_2.Office.Location) de una cita. La propiedad location devuelve un objeto Location que proporciona métodos para obtener y establecer la ubicación de la cita.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  name: location
  fullName: location
  langs:
  - typeScript
  type: property
  syntax:
    content: 'location: Location;'
    return:
      type:
      - Location
- uid: Outlook_1_2.Office.AppointmentCompose.optionalAttendees
  summary: >-
    Proporciona acceso a los asistentes opcionales de un evento. El tipo de objeto y el nivel de acceso dependen del modo del elemento actual. La propiedad optionalAttendees devuelve un objeto [Office. Recipients](xref:Outlook_1_2.Office.Recipients) que proporciona métodos para obtener o actualizar los asistentes opcionales para una reunión.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfOptionalAttendeesRecipients = asyncResult.value;
    }

    ```
  name: optionalAttendees
  fullName: optionalAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'optionalAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_2.Office.AppointmentCompose.requiredAttendees
  summary: >-
    Proporciona acceso a los asistentes necesarios de un evento. El tipo de objeto y el nivel de acceso dependen del modo del elemento actual. La propiedad requiredAttendees devuelve un objeto [Office. Recipients](xref:Outlook_1_2.Office.Recipients) que proporciona métodos para obtener o actualizar los asistentes necesarios para una reunión.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfRequiredAttendeesRecipients = asyncResult.value;
        console.log(JSON.stringify(arrayOfRequiredAttendeesRecipients));
    }

    ```
  name: requiredAttendees
  fullName: requiredAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requiredAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_2.Office.AppointmentCompose.start
  summary: >-
    Obtiene o establece la fecha y la hora de inicio de la cita.


    La propiedad Start es un objeto [Office. Time](xref:Outlook_1_2.Office.Time) expresado como un valor de fecha y hora de la hora universal coordinada (UTC). Puede usar el método convertToLocalClientTime para convertir el valor a la fecha y hora local del cliente.


    Si usa el método Time.setAsync para establecer la hora de inicio, use el método convertToUtcClientTime para convertir la hora local del cliente en un valor UTC para el servidor.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    // The following example sets the start time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: start
  fullName: start
  langs:
  - typeScript
  type: property
  syntax:
    content: 'start: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_2.Office.AppointmentCompose.subject
  summary: >-
    Obtiene o establece la descripción que se muestra en el campo de asunto de un elemento.


    La propiedad subject obtiene o establece el asunto completo del elemento, como lo envió el servidor de correo electrónico.


    La propiedad subject devuelve un objeto Subject que proporciona métodos para obtener y establecer el asunto.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo de Outlook válido](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Organizador de citas</td></tr> </table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
