### YamlMime:UniversalReference
items:
  - uid: outlook.Office.AttachmentContent
    summary: |-
      <span data-ttu-id="8d52c-101">Representa el contenido de datos adjuntos en un elemento de mensaje o cita.</span><span class="sxs-lookup"><span data-stu-id="8d52c-101">Represents the content of an attachment on a message or appointment item.</span></span>

      <span data-ttu-id="8d52c-102">\[[Conjunto de API: vista previa de buzón](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d52c-102">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="8d52c-103">**<!-- --> [Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem</span><span class="sxs-lookup"><span data-stu-id="8d52c-103">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="8d52c-104">**<!-- --> [Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redacción o lectura</span><span class="sxs-lookup"><span data-stu-id="8d52c-104">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    isPreview: true
    name: Office.AttachmentContent
    fullName: Office.AttachmentContent
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.AttachmentContent.content
      - outlook.Office.AttachmentContent.format
  - uid: outlook.Office.AttachmentContent.content
    summary: <span data-ttu-id="8d52c-105">El contenido de los datos adjuntos como una cadena.</span><span class="sxs-lookup"><span data-stu-id="8d52c-105">The content of an attachment as a string.</span></span>
    isPreview: true
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
  - uid: outlook.Office.AttachmentContent.format
    summary: |-
      <span data-ttu-id="8d52c-106">El formato de cadena que se va a usar para el contenido de datos adjuntos.</span><span class="sxs-lookup"><span data-stu-id="8d52c-106">The string format to use for an attachment's content.</span></span>

      <span data-ttu-id="8d52c-107">Para los datos adjuntos de archivo, el formato es una cadena codificada en Base64.</span><span class="sxs-lookup"><span data-stu-id="8d52c-107">For file attachments, the formatting is a base64-encoded string.</span></span>

      <span data-ttu-id="8d52c-108">Para los datos adjuntos de elemento que representan mensajes, el formato es una cadena que representa un archivo con formato. eml.</span><span class="sxs-lookup"><span data-stu-id="8d52c-108">For item attachments that represent messages, the formatting is a string representing an .eml formatted file.</span></span>

      <span data-ttu-id="8d52c-109">Para los datos adjuntos de elemento que representan elementos de calendario, el formato es una cadena que representa un archivo. iCalendar.</span><span class="sxs-lookup"><span data-stu-id="8d52c-109">For item attachments that represent calendar items, the formatting is a string representing an .icalendar file.</span></span>

      <span data-ttu-id="8d52c-110">Para los datos adjuntos de la nube, el formato es una cadena de dirección URL.</span><span class="sxs-lookup"><span data-stu-id="8d52c-110">For cloud attachments, the formatting is a URL string.</span></span>
    isPreview: true
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format: MailboxEnums.AttachmentContentFormat | string;'
      return:
        type:
          - MailboxEnums.AttachmentContentFormat | string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8d52c-111">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8d52c-111">Examples</span></span>

          ```javascript
          var item = Office.context.mailbox.item;
          var listOfAttachments = [];
          var options = {asyncContext: {currentItem: item}};
          item.getAttachmentsAsync(options, callback);

          function callback(result) {
              if (result.value.length > 0) {
                  for (i = 0 ; i < result.value.length ; i++) {
                      result.asyncContext.currentItem.getAttachmentContentAsync(result.value[i].id, handleAttachmentsCallback);
                  }
              }
          }

          function handleAttachmentsCallback(result) {
              // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
              if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
                  // Handle file attachment.
              } else if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
                  // Handle email item attachment.
              } else if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
                  // Handle .icalender attachment.
              } else if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
                  // Handle cloud attachment.
              } else {
                  // Handle attachment formats that are not supported.
              }
          }
          ```