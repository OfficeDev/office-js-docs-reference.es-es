### YamlMime:UniversalReference
ms.openlocfilehash: b32dc89c1ec83bb3659ebac26fdebf6daa0f06bc
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 10/10/2018
ms.locfileid: "25457924"
items:
- uid: outlook.Office.Recipients
  summary: '\[[Conjunto de API: buzón 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]'
  remarks: >-
    <table><tr><td>[Nivel de permiso mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción</td></tr></table>
  name: Office.Recipients
  fullName: outlook.Office.Recipients
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.Recipients.addAsync
  - outlook.Office.Recipients.getAsync
  - outlook.Office.Recipients.setAsync
- uid: outlook.Office.Recipients.addAsync
  summary: >-
    Agrega una lista de destinatarios a los destinatarios existentes de un mensaje o una cita.


    El parámetro recipients puede ser una matriz de uno de los elementos siguientes:


    - Cadenas que contienen direcciones de correo electrónico SMTP


    - objetos EmailUser


    - objetos EmailAddressDetails


    \[[Conjunto de API: buzón 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permiso mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción</td></tr>


    <tr><td>Errores</td><td>NumberOfRecipientsExceeded - el número de destinatarios supera las 100 entradas.</td></tr></table>


    Además de esta firma, este método también tiene las siguientes firmas:


    `addAsync(recipients: (string | EmailUser | EmailAddressDetails)[]): void;`


    `addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions): void;`


    `addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (result: AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example creates an array of EmailUser objects

    // and adds them to the To recipients of the message.

    var newRecipients = [
        {
            "displayName": "Allie Bellew",
            "emailAddress": "allieb@contoso.com"
        },
        {
            "displayName": "Alex Darrow",
            "emailAddress": "alexd@contoso.com"
        }
    ];


    Office.context.mailbox.item.to.addAsync(newRecipients, function(result) {
        if (result.error) {
            showMessage(result.error);
        } else {
            showMessage("Recipients added");
        }
    });

    ```
  name: addAsync(recipients, options, callback)
  fullName: outlook.Office.Recipients.addAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Destinatarios que se deben agregar a la lista de destinatarios.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto que desean tener acceso en el método de devolución de llamada.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Cuando finaliza el método, se llama a la función que se pasa en el parámetro de devolución de llamada con un parámetro único de tipo Office.AsyncResult. Si se produce un error en la adición de los destinatarios, la propiedad asyncResult.error contendrá un código de error.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: outlook.Office.Recipients.getAsync
  summary: >-
    Obtiene una lista de destinatarios para un mensaje o una cita.


    Cuando finalice la llamada, la propiedad asyncResult.value contiene una matriz de objetos de [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) .


    \[[Conjunto de API: buzón 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permiso mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción</td></tr></table>


    Además de esta firma, este método también tiene la siguiente firma:


    `getAsync(callback: (result: AsyncResult<Office.EmailAddressDetails[]>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example gets the optional attendees of a meeting.

    Office.context.mailbox.item.optionalAttendees.getAsync(function(result) {
        if (result.error) {
            showMessage(result.error);
        } else {
            var msg = "";
            result.value.forEach(function(recip, index) {
                msg = msg + recip.displayName + " (" + recip.emailAddress + ");";
            });
            showMessage(msg);
        }
    });

    ```
  name: getAsync(options, callback)
  fullName: outlook.Office.Recipients.getAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: AsyncResult<Office.EmailAddressDetails[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto que desean tener acceso en el método de devolución de llamada.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Cuando finaliza el método, se llama a la función que se pasa en el parámetro de devolución de llamada con un parámetro único de tipo Office.AsyncResult. El `value` (propiedad) del resultado es una matriz de objetos EmailAddressDetails.
      type:
      - '(result: AsyncResult<Office.EmailAddressDetails[]>) => void'
- uid: outlook.Office.Recipients.setAsync
  summary: >-
    Establece una lista de destinatarios para una cita o un mensaje.


    El método setAsync sobrescribe la lista de destinatarios actual.


    El parámetro recipients puede ser una matriz de uno de los elementos siguientes:


    - Cadenas que contienen direcciones de correo electrónico SMTP


    - Objetos [Office.EmailUser](xref:outlook.Office.EmailUser)


    - Objetos [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails)


    \[[Conjunto de API: buzón 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permiso mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redacción</td></tr>


    <tr><td>Errores</td><td>NumberOfRecipientsExceeded - el número de destinatarios supera las 100 entradas.</td></tr></table>


    Además de esta firma, este método también tiene las siguientes firmas:


    `setAsync(recipients: (string | EmailUser | EmailAddressDetails)[]): void;`


    `setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions): void;`


    `setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (result: AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example creates an array of EmailUser objects and

    // replaces the CC recipients of the message with the array.

    var newRecipients = [
        {
            "displayName": "Allie Bellew",
            "emailAddress": "allieb@contoso.com"
        },
        {
            "displayName": "Alex Darrow",
            "emailAddress": "alexd@contoso.com"
        }
    ];


    Office.context.mailbox.item.cc.setAsync(newRecipients, function(result) {
        if (result.error) {
            showMessage(result.error);
        } else {
            showMessage("Recipients overwritten");
        }
    });

    ```
  name: setAsync(recipients, options, callback)
  fullName: outlook.Office.Recipients.setAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Destinatarios que se deben agregar a la lista de destinatarios.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto que desean tener acceso en el método de devolución de llamada.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Opcional. Cuando finaliza el método, se llama a la función que se pasa en el parámetro de devolución de llamada con un parámetro único de tipo Office.AsyncResult. Si se produce un error a los destinatarios establecer la propiedad asyncResult.error contendrá un código que indica los errores que se ha producido durante la adición de los datos.
      type:
      - '(result: AsyncResult<void>) => void'
