### YamlMime:UniversalReference
items:
  - uid: outlook.Office.AttachmentContent
    summary: |-
      Representa el contenido de datos adjuntos en un elemento de mensaje o cita.

      \[[Conjunto de API: vista previa de buzón](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redacción o lectura
    isPreview: true
    name: Office.AttachmentContent
    fullName: Office.AttachmentContent
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.AttachmentContent.content
      - outlook.Office.AttachmentContent.format
  - uid: outlook.Office.AttachmentContent.content
    summary: El contenido de los datos adjuntos como una cadena.
    isPreview: true
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
  - uid: outlook.Office.AttachmentContent.format
    summary: |-
      El formato de cadena que se va a usar para el contenido de datos adjuntos.

      Para los datos adjuntos de archivo, el formato es una cadena codificada en Base64.

      Para los datos adjuntos de elemento que representan mensajes, el formato es una cadena que representa un archivo con formato. eml.

      Para los datos adjuntos de elemento que representan elementos de calendario, el formato es una cadena que representa un archivo. iCalendar.

      Para los datos adjuntos de la nube, el formato es una cadena de dirección URL.
    isPreview: true
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format: MailboxEnums.AttachmentContentFormat | string;'
      return:
        type:
          - MailboxEnums.AttachmentContentFormat | string
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          var item = Office.context.mailbox.item;
          var listOfAttachments = [];
          item.getAttachmentsAsync(callback);

          function callback(result) {
              if (result.value.length > 0) {
                  for (i = 0 ; i < result.value.length ; i++) {
                      var options = {asyncContext: {type: result.value[i].attachmentType}};
                      getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);
                  }
              }
          }

          function handleAttachmentsCallback(result) {
              // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
              if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
                  // Handle file attachment.
              } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
                  // Handle email item attachment.
              } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
                  // Handle .icalender attachment.
              } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
                  // Handle cloud attachment.
              } else {
                  // Handle attachment formats that are not supported.
              }
          }
          ```