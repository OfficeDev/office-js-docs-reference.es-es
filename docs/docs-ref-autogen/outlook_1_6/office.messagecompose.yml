### YamlMime:UniversalReference
ms.openlocfilehash: ca88c847db50db5c5b43ea83a7932b56d2ce6821
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055447"
items:
- uid: Outlook_1_6.Office.MessageCompose
  summary: >-
    El modo de redacción de mensaje de [Office. Context. Mailbox. Item](xref:Outlook_1_6.Office.Item)<!-- -->.


    **Importante**: se trata de un objeto interno de Outlook, que no se expone directamente a través de las interfaces existentes. Debe tratarlo como un modo de Office. Context. Mailbox. Item. Consulte la página del [modelo de objetos](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.6/office.context.mailbox.item) para obtener más información.
  name: Office.MessageCompose
  fullName: Office.MessageCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Message
  - 'ItemCompose '
  package: Outlook_1_6
  children:
  - Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync
  - Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync_1
  - Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync_2
  - Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync_3
  - Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync
  - Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync_1
  - Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync_2
  - Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync_3
  - Outlook_1_6.Office.MessageCompose.close
  - Outlook_1_6.Office.MessageCompose.getSelectedDataAsync
  - Outlook_1_6.Office.MessageCompose.getSelectedDataAsync_1
  - Outlook_1_6.Office.MessageCompose.loadCustomPropertiesAsync
  - Outlook_1_6.Office.MessageCompose.removeAttachmentAsync
  - Outlook_1_6.Office.MessageCompose.removeAttachmentAsync_1
  - Outlook_1_6.Office.MessageCompose.removeAttachmentAsync_2
  - Outlook_1_6.Office.MessageCompose.removeAttachmentAsync_3
  - Outlook_1_6.Office.MessageCompose.saveAsync
  - Outlook_1_6.Office.MessageCompose.saveAsync_1
  - Outlook_1_6.Office.MessageCompose.saveAsync_2
  - Outlook_1_6.Office.MessageCompose.saveAsync_3
  - Outlook_1_6.Office.MessageCompose.setSelectedDataAsync
  - Outlook_1_6.Office.MessageCompose.setSelectedDataAsync_1
  - Outlook_1_6.Office.MessageCompose.setSelectedDataAsync_2
  - Outlook_1_6.Office.MessageCompose.setSelectedDataAsync_3
  - Outlook_1_6.Office.MessageCompose.bcc
  - Outlook_1_6.Office.MessageCompose.body
  - Outlook_1_6.Office.MessageCompose.cc
  - Outlook_1_6.Office.MessageCompose.conversationId
  - Outlook_1_6.Office.MessageCompose.itemType
  - Outlook_1_6.Office.MessageCompose.notificationMessages
  - Outlook_1_6.Office.MessageCompose.subject
  - Outlook_1_6.Office.MessageCompose.to
- uid: Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync
  summary: >-
    Agrega un archivo a un mensaje o cita como datos adjuntos.


    El método addFileAttachmentAsync carga el archivo en el URI especificado y lo asocia al elemento en el formulario de redacción.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>AttachmentSizeExceeded: los datos adjuntos son más grandes de lo permitidos.</td></tr><tr><td></td><td>FileTypeNotSupported: los datos adjuntos tienen una extensión no permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>


    Además de esta firma, el método también tiene las siguientes firmas:


    `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, options: AsyncContextOptions): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```

    ```javascript

    // The following example adds an image file as an inline attachment and

    // references the attachment in the message body.

    Office.context.mailbox.item.addFileAttachmentAsync(
        "http://i.imgur.com/WJXklif.png",
        "cute_bird.png",
        {
            isInline: true
        },
        function (asyncResult) {
            Office.context.mailbox.item.body.setAsync(
                "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                {
                    "coercionType": "html"
                },
                function (asyncResult) {
                    // Do something here.
                });
        });
    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: El URI que proporciona la ubicación del archivo que se va a adjuntar al mensaje o a la cita. La longitud máxima es de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada. isInline: si es true, indica que los datos adjuntos se mostrarán en línea en el cuerpo del mensaje y no deben mostrarse en la lista de datos adjuntos.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si la carga de los datos adjuntos no se completa correctamente, el objeto asyncResult contendrá un objeto Error que proporcionará una descripción del error.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync_1
  summary: >-
    Agrega un archivo a un mensaje o cita como datos adjuntos.


    El método addFileAttachmentAsync carga el archivo en el URI especificado y lo asocia al elemento en el formulario de redacción.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>AttachmentSizeExceeded: los datos adjuntos son más grandes de lo permitidos.</td></tr><tr><td></td><td>FileTypeNotSupported: los datos adjuntos tienen una extensión no permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName)
  fullName: addFileAttachmentAsync(uri, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: El URI que proporciona la ubicación del archivo que se va a adjuntar al mensaje o a la cita. La longitud máxima es de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
- uid: Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync_2
  summary: >-
    Agrega un archivo a un mensaje o cita como datos adjuntos.


    El método addFileAttachmentAsync carga el archivo en el URI especificado y lo asocia al elemento en el formulario de redacción.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>AttachmentSizeExceeded: los datos adjuntos son más grandes de lo permitidos.</td></tr><tr><td></td><td>FileTypeNotSupported: los datos adjuntos tienen una extensión no permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, options)
  fullName: addFileAttachmentAsync(uri, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: El URI que proporciona la ubicación del archivo que se va a adjuntar al mensaje o a la cita. La longitud máxima es de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada. isInline: si es true, indica que los datos adjuntos se mostrarán en línea en el cuerpo del mensaje y no deben mostrarse en la lista de datos adjuntos.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_6.Office.MessageCompose.addFileAttachmentAsync_3
  summary: >-
    Agrega un archivo a un mensaje o cita como datos adjuntos.


    El método addFileAttachmentAsync carga el archivo en el URI especificado y lo asocia al elemento en el formulario de redacción.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>AttachmentSizeExceeded: los datos adjuntos son más grandes de lo permitidos.</td></tr><tr><td></td><td>FileTypeNotSupported: los datos adjuntos tienen una extensión no permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: El URI que proporciona la ubicación del archivo que se va a adjuntar al mensaje o a la cita. La longitud máxima es de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si la carga de los datos adjuntos no se completa correctamente, el objeto asyncResult contendrá un objeto Error que proporcionará una descripción del error.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync
  summary: >-
    Agrega un elemento de Exchange (por ejemplo, un mensaje) como datos adjuntos al mensaje o a la cita.


    El método addItemAttachmentAsync adjunta el elemento con el identificador de Exchange especificado al elemento del formulario de redacción. Si especifica un método de devolución de llamada, se llamará a este con un parámetro, asyncResult, que contiene el identificador de datos adjuntos o un código que indica cualquier error que se haya generado al adjuntar el elemento. Con el parámetro options, puede pasar información de estado al método de devolución de llamada, si lo considera necesario.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    Si el complemento para Office se ejecuta en Outlook Web App, el método addItemAttachmentAsync puede adjuntar elementos a otros elementos distintos del elemento que quiere editar. No obstante, esta acción no es compatible y no se recomienda.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>


    Además de esta firma, este método también tiene las siguientes firmas:


    `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: El identificador de Exchange del elemento que debe adjuntarse. La longitud máxima es de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si se produce un error al agregar los datos adjuntos, el objeto asyncResult contendrá un objeto error que proporciona una descripción del error.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync_1
  summary: >-
    Agrega un elemento de Exchange (por ejemplo, un mensaje) como datos adjuntos al mensaje o a la cita.


    El método addItemAttachmentAsync adjunta el elemento con el identificador de Exchange especificado al elemento del formulario de redacción. Si especifica un método de devolución de llamada, se llamará a este con un parámetro, asyncResult, que contiene el identificador de datos adjuntos o un código que indica cualquier error que se haya generado al adjuntar el elemento. Con el parámetro options, puede pasar información de estado al método de devolución de llamada, si lo considera necesario.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    Si el complemento para Office se ejecuta en Outlook Web App, el método addItemAttachmentAsync puede adjuntar elementos a otros elementos distintos del elemento que quiere editar. No obstante, esta acción no es compatible y no se recomienda.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName)
  fullName: addItemAttachmentAsync(itemId, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: El identificador de Exchange del elemento que debe adjuntarse. La longitud máxima es de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
- uid: Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync_2
  summary: >-
    Agrega un elemento de Exchange (por ejemplo, un mensaje) como datos adjuntos al mensaje o a la cita.


    El método addItemAttachmentAsync adjunta el elemento con el identificador de Exchange especificado al elemento del formulario de redacción. Si especifica un método de devolución de llamada, se llamará a este con un parámetro, asyncResult, que contiene el identificador de datos adjuntos o un código que indica cualquier error que se haya generado al adjuntar el elemento. Con el parámetro options, puede pasar información de estado al método de devolución de llamada, si lo considera necesario.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    Si el complemento para Office se ejecuta en Outlook Web App, el método addItemAttachmentAsync puede adjuntar elementos a otros elementos distintos del elemento que quiere editar. No obstante, esta acción no es compatible y no se recomienda.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, options)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: El identificador de Exchange del elemento que debe adjuntarse. La longitud máxima es de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_6.Office.MessageCompose.addItemAttachmentAsync_3
  summary: >-
    Agrega un elemento de Exchange (por ejemplo, un mensaje) como datos adjuntos al mensaje o a la cita.


    El método addItemAttachmentAsync adjunta el elemento con el identificador de Exchange especificado al elemento del formulario de redacción. Si especifica un método de devolución de llamada, se llamará a este con un parámetro, asyncResult, que contiene el identificador de datos adjuntos o un código que indica cualquier error que se haya generado al adjuntar el elemento. Con el parámetro options, puede pasar información de estado al método de devolución de llamada, si lo considera necesario.


    A continuación, puede usar el identificador con el método removeAttachmentAsync para quitar los datos adjuntos en la misma sesión.


    Si el complemento para Office se ejecuta en Outlook Web App, el método addItemAttachmentAsync puede adjuntar elementos a otros elementos distintos del elemento que quiere editar. No obstante, esta acción no es compatible y no se recomienda.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>NumberOfAttachmentsExceeded: el mensaje o la cita tiene demasiados datos adjuntos.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: El identificador de Exchange del elemento que debe adjuntarse. La longitud máxima es de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: El nombre de los datos adjuntos que se muestra mientras estos se cargan. La longitud máxima es de 255 caracteres.
      type:
      - string
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se realiza correctamente, se proporcionará el identificador de datos adjuntos en la propiedad asyncResult. Value. Si se produce un error al agregar los datos adjuntos, el objeto asyncResult contendrá un objeto error que proporciona una descripción del error.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_6.Office.MessageCompose.close
  summary: >-
    Cierra el elemento actual que se está redactando


    Los comportamientos del método Close dependen del estado actual del elemento que se está redactando. Si el elemento tiene cambios sin guardar, el cliente solicita al usuario que guarde, descarte o cierre la acción.


    En el cliente de escritorio de Outlook, si el mensaje es una respuesta directa, el método close no tiene ningún efecto.


    **Nota**: en Outlook en la web, si el elemento es una cita y se ha guardado anteriormente con saveAsync, se pide al usuario que guarde, descarte o cancele incluso si no se han producido cambios desde la última vez que se guardó el elemento.


    \[[Conjunto de API: buzón de correo 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restringido</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>
  name: close()
  fullName: close()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_6.Office.MessageCompose.getSelectedDataAsync
  summary: >-
    Devuelve asincrónicamente datos seleccionados desde el asunto o el cuerpo de un mensaje.


    Si no hay ninguna selección, pero el cursor está en el cuerpo o el asunto, el método devuelve el valor NULL para los datos seleccionados. Si se selecciona un campo que no sea el asunto o el cuerpo, el método devuelve el error InvalidSelection.


    Para tener acceso a los datos seleccionados desde el método de devolución de llamada, llame a asyncResult.value.data. Para tener acceso a la propiedad de origen de la que proviene la selección, llame a asyncResult.value.sourceProperty, que será body o subject.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (result: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: Los datos seleccionados como cadena con formato determinado por coercionType.
    parameters:
    - id: coercionType
      description: Solicita un formato para los datos. Si es Text, el método devuelve el texto sin formato como una cadena, quitando las etiquetas HTML presentes. Si es HTML, el método devuelve el texto seleccionado, ya sea texto sin formato o HTML.
      type:
      - Office.CoercionType
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<any>) => void'
- uid: Outlook_1_6.Office.MessageCompose.getSelectedDataAsync_1
  summary: >-
    Devuelve asincrónicamente datos seleccionados desde el asunto o el cuerpo de un mensaje.


    Si no hay ninguna selección, pero el cursor está en el cuerpo o el asunto, el método devuelve el valor NULL para los datos seleccionados. Si se selecciona un campo que no sea el asunto o el cuerpo, el método devuelve el error InvalidSelection.


    Para tener acceso a los datos seleccionados desde el método de devolución de llamada, llame a asyncResult.value.data. Para tener acceso a la propiedad de origen de la que proviene la selección, llame a asyncResult.value.sourceProperty, que será body o subject.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (result: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: Los datos seleccionados como cadena con formato determinado por coercionType.
    parameters:
    - id: coercionType
      description: Solicita un formato para los datos. Si es Text, el método devuelve el texto sin formato como una cadena, quitando las etiquetas HTML presentes. Si es HTML, el método devuelve el texto seleccionado, ya sea texto sin formato o HTML.
      type:
      - Office.CoercionType
    - id: options
      description: 'Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<any>) => void'
- uid: Outlook_1_6.Office.MessageCompose.loadCustomPropertiesAsync
  summary: >-
    Carga de forma asincrónica las propiedades personalizadas de este complemento en el elemento seleccionado.


    Las propiedades personalizadas se almacenan como pares de clave/valor según la aplicación y el elemento. Este método devuelve un objeto CustomProperties en la devolución de llamada, que proporciona métodos para tener acceso a las propiedades personalizadas específicas del elemento y el complemento actual. Las propiedades personalizadas no están cifradas en el elemento, por lo que no debería usarse como almacenamiento seguro.


    Las propiedades personalizadas se proporcionan como un objeto CustomProperties en la propiedad asyncResult.value. Este objeto puede usarse para obtener, establecer y quitar las propiedades personalizadas del elemento, y guardar los cambios en la propiedad personalizada que se vuelve a establecer en el servidor.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: Opcional. Los desarrolladores pueden proporcionar cualquier objeto al que quieran obtener acceso en la función de devolución de llamada. Se puede obtener acceso a este objeto mediante la propiedad asyncResult. asyncContext en la función de devolución de llamada.
      type:
      - any
- uid: Outlook_1_6.Office.MessageCompose.removeAttachmentAsync
  summary: >-
    Quita los datos adjuntos de un mensaje o cita.


    El método removeAttachmentAsync quita los datos adjuntos con el identificador especificado del elemento. Como práctica recomendada, debe usar el identificador de datos adjuntos para quitar datos adjuntos solo si la misma aplicación de correo ha agregado los datos adjuntos en la misma sesión. En Outlook Web App y Outlook Web App para dispositivos, el identificador de datos adjuntos solo es válido en la misma sesión. Una sesión finaliza cuando el usuario cierra la aplicación, o bien si el usuario empieza a redactar en un formulario insertado y, después, se extrae el formulario en línea para continuar en una ventana independiente.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>


    Además de esta firma, el método también tiene las siguientes firmas:


    `removeAttachmentAsync(attachmentId: string): void;`


    `removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;`


    `removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: El identificador de los datos adjuntos para quitar.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se produce un error en la eliminación de los datos adjuntos, la propiedad asyncResult. error contendrá un código de error con el motivo del error.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_6.Office.MessageCompose.removeAttachmentAsync_1
  summary: >-
    Quita los datos adjuntos de un mensaje o cita.


    El método removeAttachmentAsync quita los datos adjuntos con el identificador especificado del elemento. Como práctica recomendada, debe usar el identificador de datos adjuntos para quitar datos adjuntos solo si la misma aplicación de correo ha agregado los datos adjuntos en la misma sesión. En Outlook Web App y Outlook Web App para dispositivos, el identificador de datos adjuntos solo es válido en la misma sesión. Una sesión finaliza cuando el usuario cierra la aplicación, o bien si el usuario empieza a redactar en un formulario insertado y, después, se extrae el formulario en línea para continuar en una ventana independiente.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: removeAttachmentAsync(attachmentId)
  fullName: removeAttachmentAsync(attachmentId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: El identificador de los datos adjuntos para quitar.
      type:
      - string
- uid: Outlook_1_6.Office.MessageCompose.removeAttachmentAsync_2
  summary: >-
    Quita los datos adjuntos de un mensaje o cita.


    El método removeAttachmentAsync quita los datos adjuntos con el identificador especificado del elemento. Como práctica recomendada, debe usar el identificador de datos adjuntos para quitar datos adjuntos solo si la misma aplicación de correo ha agregado los datos adjuntos en la misma sesión. En Outlook Web App y Outlook Web App para dispositivos, el identificador de datos adjuntos solo es válido en la misma sesión. Una sesión finaliza cuando el usuario cierra la aplicación, o bien si el usuario empieza a redactar en un formulario insertado y, después, se extrae el formulario en línea para continuar en una ventana independiente.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: removeAttachmentAsync(attachmentId, options)
  fullName: removeAttachmentAsync(attachmentId, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: El identificador de los datos adjuntos para quitar.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_6.Office.MessageCompose.removeAttachmentAsync_3
  summary: >-
    Quita los datos adjuntos de un mensaje o cita.


    El método removeAttachmentAsync quita los datos adjuntos con el identificador especificado del elemento. Como práctica recomendada, debe usar el identificador de datos adjuntos para quitar datos adjuntos solo si la misma aplicación de correo ha agregado los datos adjuntos en la misma sesión. En Outlook Web App y Outlook Web App para dispositivos, el identificador de datos adjuntos solo es válido en la misma sesión. Una sesión finaliza cuando el usuario cierra la aplicación, o bien si el usuario empieza a redactar en un formulario insertado y, después, se extrae el formulario en línea para continuar en una ventana independiente.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: El identificador de los datos adjuntos para quitar.
      type:
      - string
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult. Si se produce un error en la eliminación de los datos adjuntos, la propiedad asyncResult. error contendrá un código de error con el motivo del error.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_6.Office.MessageCompose.saveAsync
  summary: >-
    Guarda un elemento de forma asincrónica.


    Cuando se invoca, este método guarda el mensaje actual como un borrador y devuelve el identificador de elemento a través del método de devolución de llamada. En el modo en línea de Outlook Web App o Outlook, el elemento se guarda en el servidor. En modo en caché de Outlook, se guarda el elemento en la caché local.


    Dado que las citas no tienen el estado de borrador, si se llama a saveAsync en una cita en modo de redacción, el elemento se guardará como una cita normal en el calendario del usuario. Para las citas nuevas que no se han guardado antes, no se enviará ninguna invitación. Al guardar una cita existente, se enviará una actualización a los asistentes agregados o eliminados.


    **Nota**: Si el complemento llama a saveAsync en un elemento en modo de redacción para obtener un Itemid para usar con EWS o la API de REST, tenga en cuenta que cuando Outlook está en modo de almacenamiento en caché, puede tardar algún tiempo antes de que el elemento se sincronice realmente con el servidor. Hasta que el elemento se sincronice, al usar itemId se devolverá un error.


    **Nota**: los siguientes clientes tienen un comportamiento diferente para saveAsync en las citas en el modo de redacción:


    - Mac Outlook no admite saveAsync en una reunión en el modo de redacción. Llamar a saveAsync en una reunión en Mac Outlook devolverá un error.


    - Outlook en la web siempre envía una invitación o actualización cuando se llama al método saveAsync en una cita en el modo redacción.


    \[[Conjunto de API: buzón de correo 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>


    Además de esta firma, el método también tiene las siguientes firmas:


    `saveAsync(): void;`


    `saveAsync(options: Office.AsyncContextOptions): void;`


    `saveAsync(callback: (result: Office.AsyncResult<void>) => void): void;`
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_6.Office.MessageCompose.saveAsync_1
  summary: >-
    Guarda un elemento de forma asincrónica.


    Cuando se invoca, este método guarda el mensaje actual como un borrador y devuelve el identificador de elemento a través del método de devolución de llamada. En el modo en línea de Outlook Web App o Outlook, el elemento se guarda en el servidor. En modo en caché de Outlook, se guarda el elemento en la caché local.


    Dado que las citas no tienen el estado de borrador, si se llama a saveAsync en una cita en modo de redacción, el elemento se guardará como una cita normal en el calendario del usuario. Para las citas nuevas que no se han guardado antes, no se enviará ninguna invitación. Al guardar una cita existente, se enviará una actualización a los asistentes agregados o eliminados.


    **Nota**: Si el complemento llama a saveAsync en un elemento en modo de redacción para obtener un Itemid para usar con EWS o la API de REST, tenga en cuenta que cuando Outlook está en modo de almacenamiento en caché, puede tardar algún tiempo antes de que el elemento se sincronice realmente con el servidor. Hasta que el elemento se sincronice, al usar itemId se devolverá un error.


    **Nota**: los siguientes clientes tienen un comportamiento diferente para saveAsync en las citas en el modo de redacción:


    - Mac Outlook no admite saveAsync en una reunión en el modo de redacción. Llamar a saveAsync en una reunión en Mac Outlook devolverá un error.


    - Outlook en la web siempre envía una invitación o actualización cuando se llama al método saveAsync en una cita en el modo redacción.


    \[[Conjunto de API: buzón de correo 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: saveAsync()
  fullName: saveAsync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_6.Office.MessageCompose.saveAsync_2
  summary: >-
    Guarda un elemento de forma asincrónica.


    Cuando se invoca, este método guarda el mensaje actual como un borrador y devuelve el identificador de elemento a través del método de devolución de llamada. En el modo en línea de Outlook Web App o Outlook, el elemento se guarda en el servidor. En modo en caché de Outlook, se guarda el elemento en la caché local.


    Dado que las citas no tienen el estado de borrador, si se llama a saveAsync en una cita en modo de redacción, el elemento se guardará como una cita normal en el calendario del usuario. Para las citas nuevas que no se han guardado antes, no se enviará ninguna invitación. Al guardar una cita existente, se enviará una actualización a los asistentes agregados o eliminados.


    **Nota**: Si el complemento llama a saveAsync en un elemento en modo de redacción para obtener un Itemid para usar con EWS o la API de REST, tenga en cuenta que cuando Outlook está en modo de almacenamiento en caché, puede tardar algún tiempo antes de que el elemento se sincronice realmente con el servidor. Hasta que el elemento se sincronice, al usar itemId se devolverá un error.


    **Nota**: los siguientes clientes tienen un comportamiento diferente para saveAsync en las citas en el modo de redacción:


    - Mac Outlook no admite saveAsync en una reunión en el modo de redacción. Llamar a saveAsync en una reunión en Mac Outlook devolverá un error.


    - Outlook en la web siempre envía una invitación o actualización cuando se llama al método saveAsync en una cita en el modo redacción.


    \[[Conjunto de API: buzón de correo 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: saveAsync(options)
  fullName: saveAsync(options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_6.Office.MessageCompose.saveAsync_3
  summary: >-
    Guarda un elemento de forma asincrónica.


    Cuando se invoca, este método guarda el mensaje actual como un borrador y devuelve el identificador de elemento a través del método de devolución de llamada. En el modo en línea de Outlook Web App o Outlook, el elemento se guarda en el servidor. En modo en caché de Outlook, se guarda el elemento en la caché local.


    Dado que las citas no tienen el estado de borrador, si se llama a saveAsync en una cita en modo de redacción, el elemento se guardará como una cita normal en el calendario del usuario. Para las citas nuevas que no se han guardado antes, no se enviará ninguna invitación. Al guardar una cita existente, se enviará una actualización a los asistentes agregados o eliminados.


    **Nota**: Si el complemento llama a saveAsync en un elemento en modo de redacción para obtener un Itemid para usar con EWS o la API de REST, tenga en cuenta que cuando Outlook está en modo de almacenamiento en caché, puede tardar algún tiempo antes de que el elemento se sincronice realmente con el servidor. Hasta que el elemento se sincronice, al usar itemId se devolverá un error.


    **Nota**: los siguientes clientes tienen un comportamiento diferente para saveAsync en las citas en el modo de redacción:


    - Mac Outlook no admite saveAsync en una reunión en el modo de redacción. Llamar a saveAsync en una reunión en Mac Outlook devolverá un error.


    - Outlook en la web siempre envía una invitación o actualización cuando se llama al método saveAsync en una cita en el modo redacción.


    \[[Conjunto de API: buzón de correo 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.saveAsync(
        function callback(result) {
            // Process the result.
        });

    // The following is an example of the

    // `result` parameter passed to the

    // callback function. The `value`

    // property contains the item ID of

    // the item.

    {
        "value": "AAMkADI5...AAA=",
        "status": "succeeded"
    }

    ```
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_6.Office.MessageCompose.setSelectedDataAsync
  summary: >-
    Inserta asincrónicamente datos en el cuerpo o el asunto de un mensaje.


    El método setSelectedDataAsync inserta la cadena especificada en la ubicación del cursor en el asunto o el cuerpo del elemento, o bien, si se selecciona texto en el editor, reemplaza el texto seleccionado. Si el cursor no está en el campo Body o Subject, se devuelve un error. Después de insertarlo, el cursor se coloca al final del contenido insertado.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>


    Además de esta firma, el método también tiene las siguientes firmas:


    `setSelectedDataAsync(data: string): void;`


    `setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;`


    `setSelectedDataAsync(data: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Ejemplos


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Los datos que se insertarán. Los datos no deben superar el 1 000 000 de caracteres. Si se pasan más de 1 000 000 de caracteres, se produce una excepción ArgumentOutOfRange.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada. coercionType: si Text, el estilo actual se aplica en Outlook Web App y Outlook. Si el campo es un editor de HTML, se insertan solo los datos de texto, aunque los datos sean HTML. Si HTML y el campo admiten HTML (el asunto no), se aplica el estilo actual en Outlook Web App y se aplica el estilo predeterminado en Outlook. Si el campo es un campo de texto, se devuelve un error InvalidDataFormat. Si no se estableció coercionType, el resultado depende del campo: si el campo es HTML, se usa HTML; si el campo es de texto, se usa texto sin formato.'
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_6.Office.MessageCompose.setSelectedDataAsync_1
  summary: >-
    Inserta asincrónicamente datos en el cuerpo o el asunto de un mensaje.


    El método setSelectedDataAsync inserta la cadena especificada en la ubicación del cursor en el asunto o el cuerpo del elemento, o bien, si se selecciona texto en el editor, reemplaza el texto seleccionado. Si el cursor no está en el campo Body o Subject, se devuelve un error. Después de insertarlo, el cursor se coloca al final del contenido insertado.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: setSelectedDataAsync(data)
  fullName: setSelectedDataAsync(data)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Los datos que se insertarán. Los datos no deben superar el 1 000 000 de caracteres. Si se pasan más de 1 000 000 de caracteres, se produce una excepción ArgumentOutOfRange.
      type:
      - string
- uid: Outlook_1_6.Office.MessageCompose.setSelectedDataAsync_2
  summary: >-
    Inserta asincrónicamente datos en el cuerpo o el asunto de un mensaje.


    El método setSelectedDataAsync inserta la cadena especificada en la ubicación del cursor en el asunto o el cuerpo del elemento, o bien, si se selecciona texto en el editor, reemplaza el texto seleccionado. Si el cursor no está en el campo Body o Subject, se devuelve un error. Después de insertarlo, el cursor se coloca al final del contenido insertado.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options)
  fullName: setSelectedDataAsync(data, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Los datos que se insertarán. Los datos no deben superar el 1 000 000 de caracteres. Si se pasan más de 1 000 000 de caracteres, se produce una excepción ArgumentOutOfRange.
      type:
      - string
    - id: options
      description: 'Opcional. Un objeto literal que contiene una o más de las siguientes propiedades. asyncContext: los desarrolladores pueden proporcionar cualquier objeto al que quieran tener acceso en el método de devolución de llamada. coercionType: si Text, el estilo actual se aplica en Outlook Web App y Outlook. Si el campo es un editor de HTML, se insertan solo los datos de texto, aunque los datos sean HTML. Si HTML y el campo admiten HTML (el asunto no), se aplica el estilo actual en Outlook Web App y se aplica el estilo predeterminado en Outlook. Si el campo es un campo de texto, se devuelve un error InvalidDataFormat. Si no se estableció coercionType, el resultado depende del campo: si el campo es HTML, se usa HTML; si el campo es de texto, se usa texto sin formato.'
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
- uid: Outlook_1_6.Office.MessageCompose.setSelectedDataAsync_3
  summary: >-
    Inserta asincrónicamente datos en el cuerpo o el asunto de un mensaje.


    El método setSelectedDataAsync inserta la cadena especificada en la ubicación del cursor en el asunto o el cuerpo del elemento, o bien, si se selecciona texto en el editor, reemplaza el texto seleccionado. Si el cursor no está en el campo Body o Subject, se devuelve un error. Después de insertarlo, el cursor se coloca al final del contenido insertado.


    \[[Conjunto de API: buzón de correo 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr>


    <tr><td>Errores</td><td>InvalidAttachmentId: el identificador de datos adjuntos no existe.</td></tr></table>
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: Los datos que se insertarán. Los datos no deben superar el 1 000 000 de caracteres. Si se pasan más de 1 000 000 de caracteres, se produce una excepción ArgumentOutOfRange.
      type:
      - string
    - id: callback
      description: Opcional. Cuando el método finaliza, la función que se pasa en el parámetro callback se llama con un único parámetro de tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_6.Office.MessageCompose.bcc
  summary: >-
    Obtiene un objeto que proporciona métodos para obtener o actualizar los destinatarios de la línea CCO (copia carbón oculta) de un mensaje.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.bcc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfBccRecipients = asyncResult.value;
    }

    ```
  name: bcc
  fullName: bcc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bcc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_6.Office.MessageCompose.body
  summary: >-
    Obtiene un objeto que proporciona métodos para manipular el cuerpo de un elemento.


    \[[Conjunto de API: buzón de correo 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_6.Office.MessageCompose.cc
  summary: >-
    Proporciona acceso a los destinatarios CC (en copia) de un mensaje. El tipo de objeto y el nivel de acceso dependen del modo del elemento actual.


    La propiedad CC devuelve un objeto [Office. Recipients](xref:Outlook_1_6.Office.Recipients) que proporciona métodos para obtener o actualizar los destinatarios en la línea CC del mensaje.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.cc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfCcRecipients = asyncResult.value;
    }

    ```
  name: cc
  fullName: cc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_6.Office.MessageCompose.conversationId
  summary: >-
    Obtiene un identificador de la conversación de correo electrónico que contiene un mensaje determinado.


    Puede obtener un entero para esta propiedad si la aplicación de correo se activa en respuestas o formularios de lectura o en formularios de redacción. Si, después, el usuario cambia el asunto del mensaje de respuesta, al enviar dicha respuesta, el Id. de conversación de ese mensaje cambiará y el valor que se obtuvo anteriormente ya no será de aplicación.


    Obtiene un valor NULL para esta propiedad para un nuevo elemento de un formulario de redacción. Si el usuario establece un asunto y guarda el elemento, la propiedad conversationId devolverá un valor.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    var conversationId = Office.context.mailbox.item.conversationId;

    console.log("conversationId: " + conversationId);

    ```
  name: conversationId
  fullName: conversationId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'conversationId: string;'
    return:
      type:
      - string
- uid: Outlook_1_6.Office.MessageCompose.itemType
  summary: >-
    Obtiene el tipo de elemento que representa una instancia.


    La propiedad itemType devuelve uno de los valores de enumeración de ItemType, lo que indica si la instancia del objeto item es un mensaje o una cita.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_6.Office.MessageCompose.notificationMessages
  summary: >-
    Obtiene los mensajes de notificación de un elemento.


    \[[Conjunto de API: buzón de correo 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_6.Office.MessageCompose.subject
  summary: >-
    Obtiene o establece la descripción que se muestra en el campo de asunto de un elemento.


    La propiedad subject obtiene o establece el asunto completo del elemento, como lo envió el servidor de correo electrónico.


    La propiedad subject devuelve un objeto Subject que proporciona métodos para obtener y establecer el asunto.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
- uid: Outlook_1_6.Office.MessageCompose.to
  summary: >-
    Proporciona acceso a los destinatarios en la línea Para de un mensaje. El tipo de objeto y el nivel de acceso dependen del modo del elemento actual.


    La propiedad to devuelve un objeto Recipients que proporciona métodos para obtener o actualizar los destinatarios en la línea para del mensaje.


    \[[Conjunto de API: buzón de correo 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nivel de permisos mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo de Outlook aplicable](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Redactar mensaje</td></tr></table>

    ####Incluyen


    ```javascript

    Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.to.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfToRecipients = asyncResult.value;
    }

    ```
  name: to
  fullName: to
  langs:
  - typeScript
  type: property
  syntax:
    content: 'to: Recipients;'
    return:
      type:
      - Recipients
