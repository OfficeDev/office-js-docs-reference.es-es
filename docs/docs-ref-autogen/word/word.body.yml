### YamlMime:UniversalReference
ms.openlocfilehash: 51f2bf54eeabf0842063daa1bb1bf6bf575df02f
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976639"
items:
- uid: word.Word.Body
  summary: >-
    <span data-ttu-id="1efc1-101">Representa el cuerpo de un documento o una sección.</span><span class="sxs-lookup"><span data-stu-id="1efc1-101">Represents the body of a document or a section.</span></span>


    <span data-ttu-id="1efc1-102">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Body
  fullName: Word.Body
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Body.clear
  - word.Word.Body.contentControls
  - word.Word.Body.context
  - word.Word.Body.font
  - word.Word.Body.getHtml
  - word.Word.Body.getOoxml
  - word.Word.Body.getRange
  - word.Word.Body.getRange_1
  - word.Word.Body.inlinePictures
  - word.Word.Body.insertBreak
  - word.Word.Body.insertBreak_1
  - word.Word.Body.insertContentControl
  - word.Word.Body.insertFileFromBase64
  - word.Word.Body.insertFileFromBase64_1
  - word.Word.Body.insertHtml
  - word.Word.Body.insertHtml_1
  - word.Word.Body.insertInlinePictureFromBase64
  - word.Word.Body.insertInlinePictureFromBase64_1
  - word.Word.Body.insertOoxml
  - word.Word.Body.insertOoxml_1
  - word.Word.Body.insertParagraph
  - word.Word.Body.insertParagraph_1
  - word.Word.Body.insertTable
  - word.Word.Body.insertTable_1
  - word.Word.Body.insertText
  - word.Word.Body.insertText_1
  - word.Word.Body.lists
  - word.Word.Body.load
  - word.Word.Body.load_1
  - word.Word.Body.load_2
  - word.Word.Body.paragraphs
  - word.Word.Body.parentBody
  - word.Word.Body.parentBodyOrNullObject
  - word.Word.Body.parentContentControl
  - word.Word.Body.parentContentControlOrNullObject
  - word.Word.Body.parentSection
  - word.Word.Body.parentSectionOrNullObject
  - word.Word.Body.search
  - word.Word.Body.select
  - word.Word.Body.select_1
  - word.Word.Body.set
  - word.Word.Body.set_1
  - word.Word.Body.style
  - word.Word.Body.styleBuiltIn
  - word.Word.Body.tables
  - word.Word.Body.text
  - word.Word.Body.toJSON
  - word.Word.Body.track
  - word.Word.Body.type
  - word.Word.Body.untrack
- uid: word.Word.Body.clear
  summary: >-
    <span data-ttu-id="1efc1-p101">Borra el contenido del objeto de cuerpo. El usuario puede realizar la operación de deshacer en el contenido borrado.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p101">Clears the contents of the body object. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="1efc1-105">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-106\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-106\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to clear the contents of the body.\n    body.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the body contents.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how the \n// clear method can be used to clear the contents of a document.\n// https://aka.ms/sillystorywordaddin\n```"
- uid: word.Word.Body.contentControls
  summary: >-
    <span data-ttu-id="1efc1-p102">Obtiene la colección de objetos de control de contenido de texto enriquecido en el cuerpo. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p102">Gets the collection of rich text content control objects in the body. Read-only.</span></span>


    <span data-ttu-id="1efc1-109">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Body.context
  summary: <span data-ttu-id="1efc1-110">El contexto de solicitud asociado con el objeto.</span><span class="sxs-lookup"><span data-stu-id="1efc1-110">The request context associated with the object.</span></span> <span data-ttu-id="1efc1-111">Este comando conecta proceso del complemento al proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="1efc1-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.Body.font
  summary: >-
    <span data-ttu-id="1efc1-p104">Obtiene el formato de texto del cuerpo. Úselo para obtener y establecer el nombre de la fuente, el tamaño, el color y otras propiedades. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p104">Gets the text format of the body. Use this to get and set font name, size, color and other properties. Read-only.</span></span>


    <span data-ttu-id="1efc1-115">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-116\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-116\">Examples</span></span>\n\n```javascript\n// Get the style and the font size, font name, and font color properties on the body object.\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to load font and style information for the document body.\n    context.load(body, 'font/size, font/name, font/color, style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        // Show the results of the load method. Here we show the\n        // property values on the body object.\n        var results = 'Font size: ' + body.font.size +\n                      '; Font name: ' + body.font.name +\n                      '; Font color: ' + body.font.color +\n                      '; Body style: ' + body.style;\n\n        console.log(results);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getHtml
  summary: >-
    <span data-ttu-id="1efc1-117">Obtiene una representación HTML del objeto body.</span><span class="sxs-lookup"><span data-stu-id="1efc1-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="1efc1-118">Cuando se representa en una página web o el Visor de HTML, el formato será una coincidencia para cerrar, pero no es exacta, el formato del documento.</span><span class="sxs-lookup"><span data-stu-id="1efc1-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="1efc1-119">Este método no devuelve el mismo HTML exacto para el mismo documento en distintas plataformas (Windows, Mac, Word Online, etcetera.).</span><span class="sxs-lookup"><span data-stu-id="1efc1-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="1efc1-120">Si necesita exacto fidelidad o coherencia entre plataformas, use `Body.getOoxml()` y convertir el XML devuelto a HTML.</span><span class="sxs-lookup"><span data-stu-id="1efc1-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>


    <span data-ttu-id="1efc1-121">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: getHtml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-122\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-122\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the HTML contents of the body.\n    var bodyHTML = body.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body HTML contents: \" + bodyHTML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getOoxml
  summary: >-
    <span data-ttu-id="1efc1-123">Obtiene la representación OOXML (Office Open XML) del objeto de cuerpo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>


    <span data-ttu-id="1efc1-124">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: getOoxml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-125\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-125\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the OOXML contents of the body.\n    var bodyOOXML = body.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body OOXML contents: \" + bodyOOXML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getRange
  summary: >-
    <span data-ttu-id="1efc1-126">Obtiene el cuerpo completo, o el punto de inicio o fin del cuerpo, como un intervalo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-126">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>


    <span data-ttu-id="1efc1-127">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: getRange(rangeLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="1efc1-128">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1efc1-128">Optional.</span></span> <span data-ttu-id="1efc1-129">La ubicación del rango puede ser 'Global', 'Start', 'Finalizar', 'Después' o 'Contenido'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-129">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.Body.getRange_1
  summary: >-
    <span data-ttu-id="1efc1-130">Obtiene el cuerpo completo, o el punto de inicio o fin del cuerpo, como un intervalo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-130">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>


    <span data-ttu-id="1efc1-131">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocationString)
  fullName: getRange(rangeLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocationString
      description: <span data-ttu-id="1efc1-132">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1efc1-132">Optional.</span></span> <span data-ttu-id="1efc1-133">La ubicación del rango puede ser 'Global', 'Start', 'Finalizar', 'Después' o 'Contenido'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-133">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
- uid: word.Word.Body.inlinePictures
  summary: >-
    <span data-ttu-id="1efc1-134">Obtiene la colección de objetos de InlinePicture en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-134">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="1efc1-135">La colección no incluir imágenes flotantes.</span><span class="sxs-lookup"><span data-stu-id="1efc1-135">The collection does not include floating images.</span></span> <span data-ttu-id="1efc1-136">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-136">Read-only.</span></span>


    <span data-ttu-id="1efc1-137">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.Body.insertBreak
  summary: >-
    <span data-ttu-id="1efc1-p109">Inserta un salto en la ubicación especificada del documento principal. El valor insertLocation puede ser "start" (inicio) o "end" (fin).</span><span class="sxs-lookup"><span data-stu-id="1efc1-p109">Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-140">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: insertBreak(breakType, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-141\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-141\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (ctx) {\n\n    // Create a proxy object for the document body.\n    var body = ctx.document.body;\n\n    // Queue a commmand to insert a page break at the start of the document body.\n    body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        console.log('Added a page break at the start of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="1efc1-p110">Necesario. Tipo de salto que se va a agregar al cuerpo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p110">Required. The break type to add to the body.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p111">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p111">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertBreak_1
  summary: >-
    <span data-ttu-id="1efc1-p112">Inserta un salto en la ubicación especificada del documento principal. El valor insertLocation puede ser "start" (inicio) o "end" (fin).</span><span class="sxs-lookup"><span data-stu-id="1efc1-p112">Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-148">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakTypeString, insertLocation)
  fullName: insertBreak(breakTypeString, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: breakTypeString
      description: <span data-ttu-id="1efc1-p113">Necesario. Tipo de salto que se va a agregar al cuerpo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p113">Required. The break type to add to the body.</span></span>
      type:
      - "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p114">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p114">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertContentControl
  summary: >-
    <span data-ttu-id="1efc1-153">Ajusta el objeto de cuerpo con un control de contenido de texto enriquecido.</span><span class="sxs-lookup"><span data-stu-id="1efc1-153">Wraps the body object with a Rich Text content control.</span></span>


    <span data-ttu-id="1efc1-154">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertContentControl()
  fullName: insertContentControl()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-155\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-155\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to wrap the body in a content control.\n    body.insertContentControl();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Wrapped the body in a content control.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.insertFileFromBase64
  summary: >-
    <span data-ttu-id="1efc1-156">Inserta un documento en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="1efc1-157">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-158">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: insertFileFromBase64(base64File, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-159\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-159\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.\n    // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.\n    body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64File
      description: <span data-ttu-id="1efc1-p116">Necesario. Contenido codificado en base64 de un archivo docx.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p116">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p117">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p117">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertFileFromBase64_1
  summary: >-
    <span data-ttu-id="1efc1-164">Inserta un documento en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-164">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="1efc1-165">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-165">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-166">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocationString)
  fullName: insertFileFromBase64(base64File, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="1efc1-p119">Necesario. Contenido codificado en base64 de un archivo docx.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p119">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p120">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p120">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertHtml
  summary: >-
    <span data-ttu-id="1efc1-171">Inserta código HTML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="1efc1-172">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-173">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: insertHtml(html, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-174\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-174\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert HTML in to the beginning of the body.\n    body.insertHtml(\n        '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="1efc1-p122">Necesario. HTML que se va a insertar en el documento.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p122">Required. The HTML to be inserted in the document.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p123">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p123">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertHtml_1
  summary: >-
    <span data-ttu-id="1efc1-179">Inserta código HTML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-179">Inserts HTML at the specified location.</span></span> <span data-ttu-id="1efc1-180">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-181">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocationString)
  fullName: insertHtml(html, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: html
      description: <span data-ttu-id="1efc1-p125">Necesario. HTML que se va a insertar en el documento.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p125">Required. The HTML to be inserted in the document.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p126">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p126">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="1efc1-p127">Inserta una imagen en el cuerpo en la ubicación especificada. El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p127">Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-188">\[[Conjunto de API: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-189\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-189\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert OOXML in to the beginning of the body.\n    body.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="1efc1-p128">Necesario. Imagen codificada en base64 que se va a insertar en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p128">Required. The base64 encoded image to be inserted in the body.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p129">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p129">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertInlinePictureFromBase64_1
  summary: >-
    <span data-ttu-id="1efc1-p130">Inserta una imagen en el cuerpo en la ubicación especificada. El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p130">Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-196">\[[Conjunto de API: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-196">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: ''
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="1efc1-p131">Necesario. Imagen codificada en base64 que se va a insertar en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p131">Required. The base64 encoded image to be inserted in the body.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p132">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p132">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertOoxml
  summary: >-
    <span data-ttu-id="1efc1-201">Inserta OOXML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="1efc1-202">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-203">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: insertOoxml(ooxml, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="1efc1-p134">Necesario. OOXML que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p134">Required. The OOXML to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p135">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p135">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertOoxml_1
  summary: >-
    <span data-ttu-id="1efc1-208">Inserta OOXML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-208">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="1efc1-209">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-209">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-210">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocationString)
  fullName: insertOoxml(ooxml, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="1efc1-p137">Necesario. OOXML que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p137">Required. The OOXML to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p138">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p138">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertParagraph
  summary: >-
    <span data-ttu-id="1efc1-p139">Inserta un párrafo en la ubicación especificada. El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p139">Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-217">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph(paragraphText, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-218\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-218\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert the paragraph at the end of the document body.\n    body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added at the end of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let paragraph = context.document.body.insertParagraph(\"Timeline\", \"End\");\n    paragraph.style = \"Heading 2\";\n    let paragraph2 = context.document.body.insertParagraph(\"The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.\", \"End\");\n    paragraph2.style = \"Normal\";\n    let paragraph3 = context.document.body.insertParagraph(\"Project Costs by Phase\", \"End\");\n    paragraph3.style = \"Heading 2\";\n    // Note a content control with the title of \"ProjectCosts\" is added. Content will be replaced later.\n    let paragraph4 = context.document.body.insertParagraph(\"<Add Project Costs Here>\", \"End\");\n    paragraph4.style = \"Normal\";\n    paragraph4.font.highlightColor = \"#FFFF00\";\n    let contentControl = paragraph4.insertContentControl();\n    contentControl.title = \"ProjectCosts\";\n    let paragraph5 = context.document.body.insertParagraph(\"Project Team\", \"End\");\n    paragraph5.style = \"Heading 2\";\n    paragraph5.font.highlightColor = \"#FFFFFF\";\n    let paragraph6 = context.document.body.insertParagraph(\"Terms of Work\", \"End\");\n    paragraph6.style = \"Heading 1\";\n    let paragraph7 = context.document.body.insertParagraph(\"Contractor shall provide the Services and Deliverable(s) as follows:\", \"End\");\n    paragraph7.style = \"Normal\";\n    let paragraph8 = context.document.body.insertParagraph(\"Out-of-Pocket Expenses / Invoice Procedures\", \"End\");\n    paragraph8.style = \"Heading 2\";\n    let paragraph9 = context.document.body.insertParagraph(\"Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.\", \"End\");\n    paragraph9.style = \"Normal\";\n    // Insert a page break at the end of the document.\n    context.document.body.insertBreak(\"Page\", \"End\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="1efc1-p140">Necesario. Texto de párrafo que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p140">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p141">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p141">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertParagraph_1
  summary: >-
    <span data-ttu-id="1efc1-p142">Inserta un párrafo en la ubicación especificada. El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p142">Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-225">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocationString)
  fullName: insertParagraph(paragraphText, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="1efc1-p143">Necesario. Texto de párrafo que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p143">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p144">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p144">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.insertTable
  summary: >-
    <span data-ttu-id="1efc1-p145">Inserta una tabla con el número especificado de filas y columnas. El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p145">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-232">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-233\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-233\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n  // We need a 2D array to hold the initial table values\n  let data = [\n    [\"Tokyo\", \"Beijing\", \"Seattle\"],\n    [\"Apple\", \"Orange\", \"Pineapple\"]\n  ];\n  let table = context.document.body.insertTable(2, 3, \"Start\", data);\n  table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;\n  table.styleFirstColumn = false;\n\n  await context.sync();\n});\n```"
    parameters:
    - id: rowCount
      description: <span data-ttu-id="1efc1-p146">Necesario. Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p146">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="1efc1-p147">Necesario. Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p147">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p148">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p148">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="1efc1-240">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="1efc1-240">Optional 2D array.</span></span> <span data-ttu-id="1efc1-241">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="1efc1-241">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Body.insertTable_1
  summary: >-
    <span data-ttu-id="1efc1-p150">Inserta una tabla con el número especificado de filas y columnas. El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p150">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="1efc1-244">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-244">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocationString, values)
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="1efc1-p151">Necesario. Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p151">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="1efc1-p152">Necesario. Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p152">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p153">Necesario. El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p153">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: <span data-ttu-id="1efc1-251">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="1efc1-251">Optional 2D array.</span></span> <span data-ttu-id="1efc1-252">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="1efc1-252">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Body.insertText
  summary: >-
    <span data-ttu-id="1efc1-253">Inserta texto en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-253">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="1efc1-254">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-255">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: insertText(text, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-256\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-256\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert text in to the beginning of the body.\n    body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="1efc1-p156">Necesario. Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p156">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="1efc1-p157">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p157">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertText_1
  summary: >-
    <span data-ttu-id="1efc1-261">Inserta texto en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="1efc1-261">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="1efc1-262">El valor de insertLocation puede ser 'Replace', 'Inicio' o 'Final'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="1efc1-263">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocationString)
  fullName: insertText(text, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="1efc1-p159">Necesario. Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p159">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="1efc1-p160">Obligatorio. El valor puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p160">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Body.lists
  summary: >-
    <span data-ttu-id="1efc1-p161">Obtiene la colección de objetos de lista en el cuerpo. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p161">Gets the collection of list objects in the body. Read-only.</span></span>


    <span data-ttu-id="1efc1-270">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lists
  fullName: lists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type:
      - word.Word.ListCollection
- uid: word.Word.Body.load
  summary: <span data-ttu-id="1efc1-271">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="1efc1-271">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1efc1-272">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="1efc1-272">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1efc1-273">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="1efc1-273">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1efc1-274">`load(option?: string | string[]): Word.Body`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="1efc1-274">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1efc1-275">`load(option?: { select?: string; expand?: string; }): Word.Body`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-275">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1efc1-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="1efc1-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="1efc1-277">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="1efc1-277">It is similar to the preceding signature.</span></span> <span data-ttu-id="1efc1-278">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="1efc1-278">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1efc1-279">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="1efc1-279">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1efc1-280">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="1efc1-280">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - word.Word.Interfaces.BodyLoadOptions
- uid: word.Word.Body.load_1
  summary: <span data-ttu-id="1efc1-281">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="1efc1-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1efc1-282">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="1efc1-282">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1efc1-283">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="1efc1-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Body.load_2
  summary: <span data-ttu-id="1efc1-284">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="1efc1-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1efc1-285">Se debe llamar a `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="1efc1-285">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="1efc1-286">Donde propertyNamesAndPaths.select es una cadena delimitada por comas que especifica las propiedades para cargar y propertyNamesAndPaths.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="1efc1-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: word.Word.Body.paragraphs
  summary: >-
    <span data-ttu-id="1efc1-p166">Obtiene la colección de objetos de párrafo en el cuerpo. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p166">Gets the collection of paragraph objects in the body. Read-only.</span></span>


    <span data-ttu-id="1efc1-289">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.Body.parentBody
  summary: >-
    <span data-ttu-id="1efc1-p167">Obtiene el cuerpo primario del cuerpo. Por ejemplo, un cuerpo primario de un cuerpo de celda de tabla podría ser un encabezado. Se produce si no hay un cuerpo primario. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p167">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="1efc1-294">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-294">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentBodyOrNullObject
  summary: >-
    <span data-ttu-id="1efc1-p168">Obtiene el cuerpo primario del cuerpo. Por ejemplo, un cuerpo primario de un cuerpo de celda de tabla podría ser un encabezado. Devuelve un objeto NULL si no hay un cuerpo principal. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p168">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="1efc1-299">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-299">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBodyOrNullObject
  fullName: parentBodyOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBodyOrNullObject: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentContentControl
  summary: >-
    <span data-ttu-id="1efc1-p169">Obtiene el control del contenido que contiene el cuerpo. Se produce si no hay un control del contenido principal. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p169">Gets the content control that contains the body. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="1efc1-303">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-303">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="1efc1-p170">Obtiene el control del contenido que contiene el cuerpo. Devuelve un objeto NULL si no hay un control del contenido principal. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p170">Gets the content control that contains the body. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="1efc1-307">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentSection
  summary: >-
    <span data-ttu-id="1efc1-p171">Obtiene la sección primaria del cuerpo. Se produce si no hay una sección primaria. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p171">Gets the parent section of the body. Throws if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="1efc1-311">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-311">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSection
  fullName: parentSection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSection: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.parentSectionOrNullObject
  summary: >-
    <span data-ttu-id="1efc1-p172">Obtiene la sección primaria del cuerpo. Devuelve un objeto NULL si no hay una sección primaria. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p172">Gets the parent section of the body. Returns a null object if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="1efc1-315">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-315">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSectionOrNullObject
  fullName: parentSectionOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSectionOrNullObject: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.search
  summary: >-
    <span data-ttu-id="1efc1-316">Realiza una búsqueda con la SearchOptions especificado en el ámbito del objeto body.</span><span class="sxs-lookup"><span data-stu-id="1efc1-316">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="1efc1-317">Los resultados de búsqueda son una colección de objetos range.</span><span class="sxs-lookup"><span data-stu-id="1efc1-317">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="1efc1-318">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-318">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: search(searchText, searchOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-319\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-319\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to search the document.\n    var searchResults = context.document.body.search('video', {matchCase: false});\n\n    // Queue a commmand to load the results.\n    context.load(searchResults, 'text, font');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        var results = 'Found count: ' + searchResults.items.length +\n                      '; we highlighted the results.';\n\n        // Queue a command to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n          searchResults.items[i].font.color = '#FF0000'    // Change color to Red\n          searchResults.items[i].font.highlightColor = '#FFFF00';\n          searchResults.items[i].font.bold = true;\n        }\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log(results);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let results = context.document.body.search(\"Online\");\n    results.load(\"font/highlightColor\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"yellow\";\n    }\n\n    await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes (i.e. we are using wildcards).\n    let results = context.document.body.search(\"$*.[0-9][0-9]\", { matchWildcards: true });\n    results.load(\"font/highlightColor, font/color\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"red\";\n        results.items[i].font.color = \"white\";\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: searchText
      description: <span data-ttu-id="1efc1-320">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="1efc1-320">Required.</span></span> <span data-ttu-id="1efc1-321">El texto de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="1efc1-321">The search text.</span></span> <span data-ttu-id="1efc1-322">Puede tener un máximo de 255 caracteres.</span><span class="sxs-lookup"><span data-stu-id="1efc1-322">Can be a maximum of 255 characters.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="1efc1-p175">Opcional. Opciones de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p175">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.Body.select
  summary: >-
    <span data-ttu-id="1efc1-325">Selecciona el cuerpo y se desplaza por la interfaz de usuario de Word hasta él.</span><span class="sxs-lookup"><span data-stu-id="1efc1-325">Selects the body and navigates the Word UI to it.</span></span>


    <span data-ttu-id="1efc1-326">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-326">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: select(selectionMode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-327\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-327\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to select the document body. The Word UI will\n    // move to the selected document body.\n    body.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: selectionMode
      description: <span data-ttu-id="1efc1-p176">Opcional. El modo de selección puede ser 'Select', 'Start' o 'End'. 'Select' es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p176">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - Word.SelectionMode
- uid: word.Word.Body.select_1
  summary: >-
    <span data-ttu-id="1efc1-331">Selecciona el cuerpo y se desplaza por la interfaz de usuario de Word hasta él.</span><span class="sxs-lookup"><span data-stu-id="1efc1-331">Selects the body and navigates the Word UI to it.</span></span>


    <span data-ttu-id="1efc1-332">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-332">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionModeString)
  fullName: select(selectionModeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: selectionModeString
      description: <span data-ttu-id="1efc1-p177">Opcional. El modo de selección puede ser 'Select', 'Start' o 'End'. 'Select' es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p177">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - "\"Select\" | \"Start\" | \"End\""
- uid: word.Word.Body.set
  summary: <span data-ttu-id="1efc1-336">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-336">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1efc1-337">Puede pasar un objeto sin formato con las propiedades adecuadas, o bien otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="1efc1-337">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1efc1-338">Este método no tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="1efc1-338">This method has the following additional signature:</span></span>


    `set(properties: Word.Body): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1efc1-339">Un objeto de JavaScript con propiedades estructuradas isomorphically a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="1efc1-339">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.BodyUpdateData
    - id: options
      description: <span data-ttu-id="1efc1-340">Proporciona una opción para suprimir los errores si intenta usar el objeto de propiedades establecer las propiedades de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-340">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: word.Word.Body.set_1
  summary: <span data-ttu-id="1efc1-341">Establece varias propiedades en el objeto al mismo tiempo, en función de un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="1efc1-341">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Word.Body): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Word.Body
- uid: word.Word.Body.style
  summary: >-
    <span data-ttu-id="1efc1-p179">Obtiene o establece el nombre de estilo del cuerpo. Use esta propiedad para los estilos personalizados y los nombres de estilo localizados. Para usar los estilos integrados portátiles entre configuraciones regionales, consulte la propiedad "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p179">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="1efc1-345">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-345">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.Body.styleBuiltIn
  summary: >-
    <span data-ttu-id="1efc1-p180">Obtiene o establece el nombre del estilo integrado del cuerpo. Use esta propiedad para los estilos integrados que son portátiles entre configuraciones regionales. Para usar estilos personalizados o nombres de estilo localizados, consulte la propiedad "style".</span><span class="sxs-lookup"><span data-stu-id="1efc1-p180">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="1efc1-349">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-349">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.Body.tables
  summary: >-
    <span data-ttu-id="1efc1-p181">Obtiene la colección de objetos de tabla en el cuerpo. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p181">Gets the collection of table objects in the body. Read-only.</span></span>


    <span data-ttu-id="1efc1-352">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-352">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type:
      - Word.TableCollection
- uid: word.Word.Body.text
  summary: >-
    <span data-ttu-id="1efc1-p182">Obtiene el texto del cuerpo. Use el método insertText para insertar texto. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p182">Gets the text of the body. Use the insertText method to insert text. Read-only.</span></span>


    <span data-ttu-id="1efc1-356">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-356">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1efc1-357\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1efc1-357\">Examples</span></span>\n\n```javascript\n// Get the text property on the body object\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to load the text in document body.\n    context.load(body, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body contents: \" + body.text);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.BodyData;'
    return:
      type:
      - word.Word.Interfaces.BodyData
      description: ''
- uid: word.Word.Body.track
  summary: <span data-ttu-id="1efc1-358">Realizar un seguimiento del objeto para el ajuste automático en función de que lo rodea los cambios en el documento.</span><span class="sxs-lookup"><span data-stu-id="1efc1-358">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="1efc1-359">Esta llamada es una forma abreviada para context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1efc1-359">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="1efc1-360">Si va a usar este objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto al objeto marca de revisión colección cuando el objeto se crea por primera vez.</span><span class="sxs-lookup"><span data-stu-id="1efc1-360">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
- uid: word.Word.Body.type
  summary: >-
    <span data-ttu-id="1efc1-p184">Obtiene el tipo del cuerpo. El tipo puede ser 'MainDoc', 'Section', 'Header', 'Footer' o 'TableCell'. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1efc1-p184">Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Read-only.</span></span>


    <span data-ttu-id="1efc1-364">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1efc1-364">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
    return:
      type:
      - Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
- uid: word.Word.Body.untrack
  summary: <span data-ttu-id="1efc1-365">La memoria asociada con este objeto, si lo se anteriormente hace el seguimiento de la versión.</span><span class="sxs-lookup"><span data-stu-id="1efc1-365">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="1efc1-366">Esta llamada es una abreviatura de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1efc1-366">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="1efc1-367">Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="1efc1-367">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="1efc1-368">Debe llamar a "context.sync()" antes de la versión de memoria surta efecto.</span><span class="sxs-lookup"><span data-stu-id="1efc1-368">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
