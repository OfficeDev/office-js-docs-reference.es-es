### YamlMime:UniversalReference
items:
  - uid: word.Word.SearchOptions
    summary: |-
      <span data-ttu-id="859e1-101">Especifica las opciones que se van a incluir en una operación de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="859e1-101">Specifies the options to be included in a search operation.</span></span>

      <span data-ttu-id="859e1-102">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.SearchOptions
    fullName: Word.SearchOptions
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.SearchOptions.context
      - word.Word.SearchOptions.ignorePunct
      - word.Word.SearchOptions.ignoreSpace
      - word.Word.SearchOptions.load
      - word.Word.SearchOptions.load_1
      - word.Word.SearchOptions.load_2
      - word.Word.SearchOptions.matchCase
      - word.Word.SearchOptions.matchPrefix
      - word.Word.SearchOptions.matchSuffix
      - word.Word.SearchOptions.matchWholeWord
      - word.Word.SearchOptions.matchWildcards
      - word.Word.SearchOptions.matchWildCards
      - word.Word.SearchOptions.newObject
      - word.Word.SearchOptions.set
      - word.Word.SearchOptions.set_1
      - word.Word.SearchOptions.toJSON
  - uid: word.Word.SearchOptions.context
    summary: <span data-ttu-id="859e1-103">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="859e1-103">The request context associated with the object.</span></span> <span data-ttu-id="859e1-104">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="859e1-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word.Word.SearchOptions.ignorePunct
    summary: |-
      <span data-ttu-id="859e1-p102">Obtiene o establece un valor que indica si se van a pasar por alto todos los caracteres de puntuación entre las palabras. Corresponde a la casilla Omitir puntuación en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-p102">Gets or sets a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-107">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-107">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: ignorePunct
    fullName: ignorePunct
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignorePunct: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.ignoreSpace
    summary: |-
      <span data-ttu-id="859e1-108">Obtiene o establece un valor que indica si se van a omitir todos los espacios en blanco entre palabras.</span><span class="sxs-lookup"><span data-stu-id="859e1-108">Gets or sets a value that indicates whether to ignore all whitespace between words.</span></span> <span data-ttu-id="859e1-109">Corresponde a la casilla de verificación omitir espacios en blanco del cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-109">Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-110">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: ignoreSpace
    fullName: ignoreSpace
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignoreSpace: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.load
    summary: '<span data-ttu-id="859e1-111">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="859e1-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="859e1-112">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="859e1-112">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="859e1-113">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="859e1-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="859e1-114">`load(option?: string | string[]): Word.SearchOptions`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="859e1-114">`load(option?: string | string[]): Word.SearchOptions` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="859e1-115">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="859e1-115">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="859e1-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="859e1-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions` - Only available on collection types.</span></span> <span data-ttu-id="859e1-117">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="859e1-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="859e1-118">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="859e1-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="859e1-119">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="859e1-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="859e1-120">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="859e1-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="859e1-121">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="859e1-121">Examples</span></span>

      ```javascript
      // Ignore punctuation search
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document and ignore punctuation.
          var searchResults = context.document.body.search('video you', {ignorePunct: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search based on a prefix
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document based on a prefix.
          var searchResults = context.document.body.search('vid', {matchPrefix: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search based on a suffix
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Queue a command to search the document for any string of characters after 'ly'.
          var searchResults = context.document.body.search('ly', {matchSuffix: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'orange';
                  searchResults.items[i].font.highlightColor = 'black';
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search using a wildcard
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document with a wildcard
          // for any string of characters that starts with 'to' and ends with 'n'.
          var searchResults = context.document.body.search('to*n', {matchWildCards: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = 'pink';
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SearchOptionsLoadOptions): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.SearchOptionsLoadOptions
  - uid: word.Word.SearchOptions.load_1
    summary: <span data-ttu-id="859e1-122">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="859e1-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="859e1-123">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="859e1-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="859e1-124">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="859e1-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.SearchOptions.load_2
    summary: <span data-ttu-id="859e1-125">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="859e1-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="859e1-126">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="859e1-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="859e1-127">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="859e1-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.SearchOptions.matchCase
    summary: |-
      <span data-ttu-id="859e1-128">Obtiene o establece un valor que indica si se va a realizar una búsqueda distinguiendo entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="859e1-128">Gets or sets a value that indicates whether to perform a case sensitive search.</span></span> <span data-ttu-id="859e1-129">Corresponde a la casilla de verificación Coincidir mayúsculas y minúsculas del cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-129">Corresponds to the Match case check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-130">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchPrefix
    summary: |-
      <span data-ttu-id="859e1-p109">Obtiene o establece un valor que indica si se van a buscar palabras que empiecen por la cadena de búsqueda. Corresponde a la casilla Coincidir prefijo en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-p109">Gets or sets a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-133">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchPrefix
    fullName: matchPrefix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchPrefix: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchSuffix
    summary: |-
      <span data-ttu-id="859e1-p110">Obtiene o establece un valor que indica si se van a buscar palabras que finalicen por la cadena de búsqueda. Corresponde a la casilla Coincidir sufijo en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-p110">Gets or sets a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-136">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchSuffix
    fullName: matchSuffix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchSuffix: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWholeWord
    summary: |-
      <span data-ttu-id="859e1-p111">Obtiene o establece un valor que indica si se van a buscar solamente palabras completas y no texto que forme parte de una palabra más larga. Corresponde a la casilla Solo palabras completas en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-p111">Gets or sets a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-139">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchWholeWord
    fullName: matchWholeWord
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWholeWord: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWildcards
    summary: |-
      <span data-ttu-id="859e1-p112">Obtiene o establece un valor que indica si la búsqueda se realizará usando operadores de búsqueda especiales. Corresponde a la casilla Usar caracteres comodín en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="859e1-p112">Gets or sets a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="859e1-142">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="859e1-142">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchWildcards
    fullName: matchWildcards
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWildcards: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWildCards
    name: matchWildCards
    fullName: matchWildCards
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWildCards: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.newObject
    summary: <span data-ttu-id="859e1-143">Crear una nueva instancia del objeto Word. SearchOptions</span><span class="sxs-lookup"><span data-stu-id="859e1-143">Create a new instance of Word.SearchOptions object</span></span>
    name: newObject(context)
    fullName: newObject(context)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static newObject(context: OfficeExtension.ClientRequestContext): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: context
          description: ''
          type:
            - office.OfficeExtension.ClientRequestContext
  - uid: word.Word.SearchOptions.set
    summary: '<span data-ttu-id="859e1-144">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="859e1-144">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="859e1-145">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="859e1-145">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="859e1-146">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="859e1-146">This method has the following additional signature:</span></span>

      `set(properties: Word.SearchOptions): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SearchOptionsUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="859e1-147">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="859e1-147">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.SearchOptionsUpdateData
        - id: options
          description: <span data-ttu-id="859e1-148">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="859e1-148">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word.Word.SearchOptions.set_1
    summary: '<span data-ttu-id="859e1-149">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="859e1-149">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.SearchOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.SearchOptions
  - uid: word.Word.SearchOptions.toJSON
    summary: '<span data-ttu-id="859e1-150">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="859e1-150">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="859e1-151">.</span><span class="sxs-lookup"><span data-stu-id="859e1-151"></span></span> <span data-ttu-id="859e1-152">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="859e1-152"></span></span><!-- --><span data-ttu-id="859e1-153">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Word. SearchOptions original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Word.Interfaces.SearchOptionsData`</span><span class="sxs-lookup"><span data-stu-id="859e1-153">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.SearchOptions object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SearchOptionsData`</span></span><!-- --><span data-ttu-id="859e1-154">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="859e1-154">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SearchOptionsData;'
      return:
        type:
          - word.Word.Interfaces.SearchOptionsData
        description: ''