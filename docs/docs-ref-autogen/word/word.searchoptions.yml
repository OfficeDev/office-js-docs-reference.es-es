### YamlMime:UniversalReference
ms.openlocfilehash: f5eb1a7b1ce31ae9b06f88ecc303042d43ef8b80
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 09/28/2018
ms.locfileid: "24054398"
items:
- uid: word.Word.SearchOptions
  summary: >-
    <span data-ttu-id="d7647-101">Especifica las opciones que se van a incluir en una operación de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="d7647-101">Specifies the options to be included in a search operation.</span></span>


    <span data-ttu-id="d7647-102">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-102">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.SearchOptions
  fullName: word.Word.SearchOptions
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.SearchOptions.ignorePunct
  - word.Word.SearchOptions.ignoreSpace
  - word.Word.SearchOptions.load
  - word.Word.SearchOptions.matchCase
  - word.Word.SearchOptions.matchPrefix
  - word.Word.SearchOptions.matchSuffix
  - word.Word.SearchOptions.matchWholeWord
  - word.Word.SearchOptions.matchWildcards
  - word.Word.SearchOptions.matchWildCards
  - word.Word.SearchOptions.newObject
  - word.Word.SearchOptions.toJSON
- uid: word.Word.SearchOptions.ignorePunct
  summary: >-
    <span data-ttu-id="d7647-p101">Obtiene o establece un valor que indica si se van a pasar por alto todos los caracteres de puntuación entre las palabras. Corresponde a la casilla Omitir puntuación en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-p101">Gets or sets a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-105">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-105">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: ignorePunct
  fullName: word.Word.SearchOptions.ignorePunct
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignorePunct: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.ignoreSpace
  summary: >-
    <span data-ttu-id="d7647-p102">Obtiene o establece un valor que indica si se deben omitir todos los espacios en blanco que haya entre palabras. Corresponde a la casilla Omitir espacios en blanco en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-p102">Gets or sets a value that indicates whether to ignore all whitespace between words. Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-108">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-108">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: ignoreSpace
  fullName: word.Word.SearchOptions.ignoreSpace
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreSpace: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.load
  summary: <span data-ttu-id="d7647-109">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="d7647-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d7647-110">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="d7647-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"d7647-111\">Además de esta firma, este método no tiene las siguientes firmas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-111\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"d7647-112\">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-112\">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"d7647-113\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions`-Sólo está disponible en los tipos de colección.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-113\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions` - Only available on collection types.</span></span> <span data-ttu-id=\"d7647-114\">Es similar a la firma precedente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-114\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"d7647-115\">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-115\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"d7647-116\">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-116\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"d7647-117\">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-117\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"d7647-118\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d7647-118\">Examples</span></span>\n\n```javascript\n// Ignore punctuation search\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Queue a command to search the document and ignore punctuation.\n    var searchResults = context.document.body.search('video you', {ignorePunct: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'purple';\n            searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Search based on a prefix\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Queue a command to search the document based on a prefix.\n    var searchResults = context.document.body.search('vid', {matchPrefix: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'purple';\n            searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Search based on a suffix\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to search the document for any string of characters after 'ly'.\n    var searchResults = context.document.body.search('ly', {matchSuffix: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'orange';\n            searchResults.items[i].font.highlightColor = 'black';\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Search using a wildcard\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Queue a command to search the document with a wildcard\n    // for any string of characters that starts with 'to' and ends with 'n'.\n    var searchResults = context.document.body.search('to*n', {matchWildCards: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'purple';\n            searchResults.items[i].font.highlightColor = 'pink';\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: word.Word.SearchOptions.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.SearchOptions;'
    return:
      type:
      - word.Word.SearchOptions
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="d7647-119">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="d7647-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.SearchOptions.matchCase
  summary: >-
    <span data-ttu-id="d7647-120">Obtiene o establece un valor que indica si se debe realizar una búsqueda distingue mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d7647-120">Gets or sets a value that indicates whether to perform a case sensitive search.</span></span> <span data-ttu-id="d7647-121">Corresponde a la casilla de verificación Coincidir mayúsculas y minúsculas en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-121">Corresponds to the Match case check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-122">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-122">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchCase
  fullName: word.Word.SearchOptions.matchCase
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchCase: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchPrefix
  summary: >-
    <span data-ttu-id="d7647-p106">Obtiene o establece un valor que indica si se van a buscar palabras que empiecen por la cadena de búsqueda. Corresponde a la casilla Coincidir prefijo en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-p106">Gets or sets a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-125">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-125">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchPrefix
  fullName: word.Word.SearchOptions.matchPrefix
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchPrefix: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchSuffix
  summary: >-
    <span data-ttu-id="d7647-p107">Obtiene o establece un valor que indica si se van a buscar palabras que finalicen por la cadena de búsqueda. Corresponde a la casilla Coincidir sufijo en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-p107">Gets or sets a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-128">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-128">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchSuffix
  fullName: word.Word.SearchOptions.matchSuffix
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchSuffix: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchWholeWord
  summary: >-
    <span data-ttu-id="d7647-p108">Obtiene o establece un valor que indica si se van a buscar solamente palabras completas y no texto que forme parte de una palabra más larga. Corresponde a la casilla Solo palabras completas en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-p108">Gets or sets a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-131">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-131">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchWholeWord
  fullName: word.Word.SearchOptions.matchWholeWord
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchWholeWord: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchWildcards
  summary: >-
    <span data-ttu-id="d7647-p109">Obtiene o establece un valor que indica si la búsqueda se realizará usando operadores de búsqueda especiales. Corresponde a la casilla Usar caracteres comodín en el cuadro de diálogo Buscar y reemplazar.</span><span class="sxs-lookup"><span data-stu-id="d7647-p109">Gets or sets a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="d7647-134">\[[Conjunto de API: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d7647-134">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchWildcards
  fullName: word.Word.SearchOptions.matchWildcards
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchWildcards: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchWildCards
  name: matchWildCards
  fullName: word.Word.SearchOptions.matchWildCards
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchWildCards: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.newObject
  summary: <span data-ttu-id="d7647-135">Crear una nueva instancia del objeto Word.SearchOptions</span><span class="sxs-lookup"><span data-stu-id="d7647-135">Create a new instance of Word.SearchOptions object</span></span>
  name: newObject(context)
  fullName: word.Word.SearchOptions.newObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'static newObject(context: OfficeExtension.ClientRequestContext): Word.SearchOptions;'
    return:
      type:
      - word.Word.SearchOptions
      description: ''
    parameters:
    - id: context
      description: ''
      type:
      - office.OfficeExtension.ClientRequestContext
- uid: word.Word.SearchOptions.toJSON
  name: toJSON()
  fullName: word.Word.SearchOptions.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.SearchOptionsData;'
    return:
      type:
      - word.Word.Interfaces.SearchOptionsData
      description: ''
