### YamlMime:UniversalReference
ms.openlocfilehash: 3a43db18f25a9b18b64433969b9747c413960303
ms.sourcegitcommit: 4bbd18c863a4140ad456b859f9c0309e153e10b2
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 11/02/2018
ms.locfileid: "25915346"
items:
- uid: word.Word.ContentControlCollection
  summary: >-
    <span data-ttu-id="8f4a3-101">Contiene una colección de objetos [Word.ContentControl](xref:word.Word.ContentControl) .</span><span class="sxs-lookup"><span data-stu-id="8f4a3-101">Contains a collection of [Word.ContentControl](xref:word.Word.ContentControl) objects.</span></span> <span data-ttu-id="8f4a3-102">Los controles de contenido son regiones delimitadas y posiblemente con etiquetas de un documento que funcionan como contenedores para tipos específicos de contenido.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-102">Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content.</span></span> <span data-ttu-id="8f4a3-103">Controles de contenido individuales pueden incluir contenido como imágenes, tablas o párrafos de texto con formato.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-103">Individual content controls may contain contents such as images, tables, or paragraphs of formatted text.</span></span> <span data-ttu-id="8f4a3-104">Actualmente, se admiten sólo controles de contenido de texto enriquecido.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-104">Currently, only rich text content controls are supported.</span></span>


    <span data-ttu-id="8f4a3-105">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.ContentControlCollection
  fullName: word.Word.ContentControlCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.ContentControlCollection.getById
  - word.Word.ContentControlCollection.getByIdOrNullObject
  - word.Word.ContentControlCollection.getByTag
  - word.Word.ContentControlCollection.getByTitle
  - word.Word.ContentControlCollection.getByTypes
  - word.Word.ContentControlCollection.getFirst
  - word.Word.ContentControlCollection.getFirstOrNullObject
  - word.Word.ContentControlCollection.getItem
  - word.Word.ContentControlCollection.items
  - word.Word.ContentControlCollection.load
  - word.Word.ContentControlCollection.toJSON
  - word.Word.ContentControlCollection.track
  - word.Word.ContentControlCollection.untrack
- uid: word.Word.ContentControlCollection.getById
  summary: >-
    <span data-ttu-id="8f4a3-p102">Obtiene un control de contenido mediante su identificador. Se genera si no hay ningún control de contenido con el identificador en esta colección.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p102">Gets a content control by its identifier. Throws if there isn't a content control with the identifier in this collection.</span></span>


    <span data-ttu-id="8f4a3-108">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getById(id)
  fullName: word.Word.ContentControlCollection.getById
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getById(id: number): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8f4a3-109\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f4a3-109\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content control that contains a specific id.\n    var contentControl = context.document.contentControls.getById(30086310);\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The content control with that Id has been found in this document.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content control that contains a specific id.\n    var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControl.isNullObject) {\n            console.log('There is no content control with that ID.')\n        } else {\n            console.log('The content control with that ID has been found in this document.');\n        }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="8f4a3-p103">Necesario. Identificador de un control de contenido.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p103">Required. A content control identifier.</span></span>
      type:
      - number
- uid: word.Word.ContentControlCollection.getByIdOrNullObject
  summary: >-
    <span data-ttu-id="8f4a3-p104">Obtiene un control de contenido mediante su identificador. Devuelve un objeto null si no hay ningún control de contenido con el identificador en esta colección.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p104">Gets a content control by its identifier. Returns a null object if there isn't a content control with the identifier in this collection.</span></span>


    <span data-ttu-id="8f4a3-114">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-114">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByIdOrNullObject(id)
  fullName: word.Word.ContentControlCollection.getByIdOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdOrNullObject(id: number): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8f4a3-115\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f4a3-115\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content control that contains a specific id.\n    var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControl.isNullObject) {\n            console.log('There is no content control with that ID.')\n        } else {\n            console.log('The content control with that ID has been found in this document.');\n        }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="8f4a3-p105">Necesario. Identificador de un control de contenido.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p105">Required. A content control identifier.</span></span>
      type:
      - number
- uid: word.Word.ContentControlCollection.getByTag
  summary: >-
    <span data-ttu-id="8f4a3-118">Obtiene los controles de contenido que tienen la etiqueta especificada.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-118">Gets the content controls that have the specified tag.</span></span>


    <span data-ttu-id="8f4a3-119">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-119">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByTag(tag)
  fullName: word.Word.ContentControlCollection.getByTag
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTag(tag: string): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8f4a3-120\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f4a3-120\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content controls collection that contains a specific tag.\n    var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');\n\n    // Queue a command to load the text property for all of content controls with a specific tag.\n    context.load(contentControlsWithTag, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTag.items.length === 0) {\n            console.log(\"There isn't a content control with a tag of Customer-Address in this document.\");\n        } else {\n            console.log(\n                'The first content control with the tag of Customer-Address has this text: ' + \n                contentControlsWithTag.items[0].text);\n        }\n\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample has another example of using the getByTag method.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let contentControls = context.document.contentControls.getByTag(\"customer\");\n    contentControls.load(\"text\");\n\n    await context.sync();\n\n    for (let i = 0; i < contentControls.items.length; i++) {\n      contentControls.items[i].insertText(\"Fabrikam\", \"Replace\");\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: tag
      description: <span data-ttu-id="8f4a3-p106">Necesario. Etiqueta establecida en un control de contenido.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p106">Required. A tag set on a content control.</span></span>
      type:
      - string
- uid: word.Word.ContentControlCollection.getByTitle
  summary: >-
    <span data-ttu-id="8f4a3-123">Obtiene los controles de contenido que tienen el título especificado.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-123">Gets the content controls that have the specified title.</span></span>


    <span data-ttu-id="8f4a3-124">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByTitle(title)
  fullName: word.Word.ContentControlCollection.getByTitle
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTitle(title: string): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8f4a3-125\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f4a3-125\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content controls collection that contains a specific title.\n    var contentControlsWithTitle = context.document.contentControls.getByTitle('Enter Customer Address Here');\n\n    // Queue a command to load the text property for all of content controls with a specific title.\n    context.load(contentControlsWithTitle, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTitle.items.length === 0) {\n            console.log(\n                \"There isn't a content control with a title of 'Enter Customer Address Here' in this document.\");\n        } else {\n            console.log(\n                \"The first content control with the title of 'Enter Customer Address Here' has this text: \" + \n                contentControlsWithTitle.items[0].text);\n        }\n\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample has another example of using the getByTitle method.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
    parameters:
    - id: title
      description: <span data-ttu-id="8f4a3-p107">Necesario. Título de un control de contenido.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p107">Required. The title of a content control.</span></span>
      type:
      - string
- uid: word.Word.ContentControlCollection.getByTypes
  summary: >-
    <span data-ttu-id="8f4a3-128">Obtiene los controles de contenido que tienen los tipos especificados o subtipos.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-128">Gets the content controls that have the specified types and/or subtypes.</span></span>


    <span data-ttu-id="8f4a3-129">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-129">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByTypes(types)
  fullName: word.Word.ContentControlCollection.getByTypes
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTypes(types: Word.ContentControlType[]): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
    parameters:
    - id: types
      description: <span data-ttu-id="8f4a3-p108">Necesario. Matriz de tipos de control de contenido o subtipos.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p108">Required. An array of content control types and/or subtypes.</span></span>
      type:
      - Word.ContentControlType[]
- uid: word.Word.ContentControlCollection.getFirst
  summary: >-
    <span data-ttu-id="8f4a3-p109">Obtiene el primer control de contenido de esta colección. Se genera si esta colección está vacía.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p109">Gets the first content control in this collection. Throws if this collection is empty.</span></span>


    <span data-ttu-id="8f4a3-134">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-134">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getFirst()
  fullName: word.Word.ContentControlCollection.getFirst
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirst(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8f4a3-135\">Ejemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"8f4a3-135\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the first content control in the document.\n    var contentControl = context.document.contentControls.getFirstOrNullObject();\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControl.isNullObject) {\n            console.log('There are no content controls in this document.')\n        } else {\n            console.log('The first content control has been found in this document.');\n        }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControlCollection.getFirstOrNullObject
  summary: >-
    <span data-ttu-id="8f4a3-p110">Obtiene el primer control de contenido de esta colección. Devuelve un objeto null si esta colección está vacía.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-p110">Gets the first content control in this collection. Returns a null object if this collection is empty.</span></span>


    <span data-ttu-id="8f4a3-138">\[[Conjunto de API: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-138">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getFirstOrNullObject()
  fullName: word.Word.ContentControlCollection.getFirstOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirstOrNullObject(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
- uid: word.Word.ContentControlCollection.getItem
  summary: >-
    <span data-ttu-id="8f4a3-139">Obtiene un control de contenido por su índice en la colección.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-139">Gets a content control by its index in the collection.</span></span>


    <span data-ttu-id="8f4a3-140">\[[Conjunto de API: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f4a3-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: word.Word.ContentControlCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="8f4a3-141">Índice.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-141">The index.</span></span>
      type:
      - number
- uid: word.Word.ContentControlCollection.items
  summary: <span data-ttu-id="8f4a3-142">Obtiene al secundario cargado los elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-142">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: word.Word.ContentControlCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Word.ContentControl[];'
    return:
      type:
      - Word.ContentControl[]
- uid: word.Word.ContentControlCollection.load
  summary: <span data-ttu-id="8f4a3-143">Colas de seguridad de un comando que se va a cargar las propiedades del objeto especificadas.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8f4a3-144">Se debe llamar a "context.sync()" antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-144">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="8f4a3-145">Además de esta firma, este método no tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="8f4a3-145">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="8f4a3-146">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection`-Donde option.select es una cadena delimitada por comas que especifica las propiedades para cargar y options.expand es una cadena delimitada por comas que especifica las propiedades de navegación para cargar.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-146">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="8f4a3-147">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection`-Sólo está disponible en los tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-147">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection` - Only available on collection types.</span></span> <span data-ttu-id="8f4a3-148">Es similar a la firma precedente.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-148">It is similar to the preceding signature.</span></span> <span data-ttu-id="8f4a3-149">Option.Top especifica el número máximo de elementos de la colección que se puede incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-149">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8f4a3-150">Option.Skip especifica el número de elementos que se pasan por alto y no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-150">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8f4a3-151">Si se especifica option.top, se iniciará el conjunto de resultados después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-151">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="8f4a3-152">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="8f4a3-152">Examples</span></span>


    ```javascript

    // Run a batch operation against the Word object model.

    Word.run(function (context) {

        // Create a proxy object for the content controls collection.
        var contentControls = context.document.contentControls;

        // Queue a command to load the id property for all of the content controls.
        context.load(contentControls, 'id');

        // Synchronize the document state by executing the queued commands,
        // and return a promise to indicate task completion.
        return context.sync().then(function () {
            if (contentControls.items.length === 0) {
                console.log('No content control found.');
            }
            else {
                // Queue a command to load the properties on the first content control.
                contentControls.items[0].load(  'appearance,' +
                                                'cannotDelete,' +
                                                'cannotEdit,' +
                                                'id,' +
                                                'placeHolderText,' +
                                                'removeWhenEdited,' +
                                                'title,' +
                                                'text,' +
                                                'type,' +
                                                'style,' +
                                                'tag,' +
                                                'font/size,' +
                                                'font/name,' +
                                                'font/color');

                // Synchronize the document state by executing the queued commands,
                // and return a promise to indicate task completion.
                return context.sync()
                    .then(function () {
                        console.log('Property values of the first content control:' +
                            '   ----- appearance: ' + contentControls.items[0].appearance +
                            '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                            '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                            '   ----- color: ' + contentControls.items[0].color +
                            '   ----- id: ' + contentControls.items[0].id +
                            '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                            '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                            '   ----- title: ' + contentControls.items[0].title +
                            '   ----- text: ' + contentControls.items[0].text +
                            '   ----- type: ' + contentControls.items[0].type +
                            '   ----- style: ' + contentControls.items[0].style +
                            '   ----- tag: ' + contentControls.items[0].tag +
                            '   ----- font size: ' + contentControls.items[0].font.size +
                            '   ----- font name: ' + contentControls.items[0].font.name +
                            '   ----- font color: ' + contentControls.items[0].font.color);
                });
            }
        });
    })

    .catch(function (error) {
        console.log('Error: ' + JSON.stringify(error));
        if (error instanceof OfficeExtension.Error) {
            console.log('Debug info: ' + JSON.stringify(error.debugInfo));
        }
    });


    // The Silly stories add-in sample shows how the load method is used

    // to load the content control collection with the tag and title properties.

    // https://aka.ms/sillystorywordaddin

    ```
  name: load(option)
  fullName: word.Word.ContentControlCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="8f4a3-153">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades de carga.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-153">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.ContentControlCollection.toJSON
  name: toJSON()
  fullName: word.Word.ContentControlCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ContentControlCollectionData;'
    return:
      type:
      - word.Word.Interfaces.ContentControlCollectionData
      description: ''
- uid: word.Word.ContentControlCollection.track
  summary: <span data-ttu-id="8f4a3-154">Realizar un seguimiento del objeto para el ajuste automático en función de que lo rodea los cambios en el documento.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-154">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="8f4a3-155">Esta llamada es una forma abreviada para context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="8f4a3-155">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="8f4a3-156">Si va a usar este objeto a través de llamadas "Sync" y fuera de la ejecución secuencial de un lote de "ésta se ejecute" y obtenga un error de "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, había que ha agregado el objeto al objeto marca de revisión colección cuando el objeto se crea por primera vez.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-156">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: word.Word.ContentControlCollection.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
- uid: word.Word.ContentControlCollection.untrack
  summary: <span data-ttu-id="8f4a3-157">La memoria asociada con este objeto, si lo se anteriormente hace el seguimiento de la versión.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-157">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="8f4a3-158">Esta llamada es una abreviatura de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="8f4a3-158">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="8f4a3-159">Tener muchos objetos de marca de revisión reduce la velocidad de la aplicación host, por lo que no olvide libre de cualquier objeto que agregue, una vez que haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-159">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="8f4a3-160">Debe llamar a "context.sync()" antes de la versión de memoria surta efecto.</span><span class="sxs-lookup"><span data-stu-id="8f4a3-160">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: word.Word.ContentControlCollection.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
