### YamlMime:UniversalReference
items:
  - uid: 'word!Word.ParagraphCollection:class'
    summary: |-
      Contiene una colección de objetos [Word. Paragraph](xref:word!Word.Paragraph:class) .

      \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.ParagraphCollection
    fullName: Word.ParagraphCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.ParagraphCollection#context:member'
      - 'word!Word.ParagraphCollection#getFirst:member(1)'
      - 'word!Word.ParagraphCollection#getFirstOrNullObject:member(1)'
      - 'word!Word.ParagraphCollection#getLast:member(1)'
      - 'word!Word.ParagraphCollection#getLastOrNullObject:member(1)'
      - 'word!Word.ParagraphCollection#items:member'
      - 'word!Word.ParagraphCollection#load:member(1)'
      - 'word!Word.ParagraphCollection#load:member(2)'
      - 'word!Word.ParagraphCollection#load:member(3)'
      - 'word!Word.ParagraphCollection#toJSON:member(1)'
      - 'word!Word.ParagraphCollection#track:member(1)'
      - 'word!Word.ParagraphCollection#untrack:member(1)'
  - uid: 'word!Word.ParagraphCollection#context:member'
    summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.ParagraphCollection#getFirst:member(1)'
    summary: |-
      Obtiene el primer párrafo de esta colección. Produce un error si la colección está vacía.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.ParagraphCollection#getFirstOrNullObject:member(1)'
    summary: |-
      Obtiene el primer párrafo de esta colección. Devuelve un objeto nulo si la colección está vacía.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getFirstOrNullObject()
    fullName: getFirstOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirstOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.ParagraphCollection#getLast:member(1)'
    summary: |-
      Obtiene el último párrafo de esta colección. Produce un error si la colección está vacía.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLast()
    fullName: getLast()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.ParagraphCollection#getLastOrNullObject:member(1)'
    summary: |-
      Obtiene el último párrafo de esta colección. Devuelve un objeto nulo si la colección está vacía.

      \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLastOrNullObject()
    fullName: getLastOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLastOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.ParagraphCollection#items:member'
    summary: Obtiene los elementos secundarios cargados en esta colección.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Paragraph[];'
      return:
        type:
          - 'word!Word.ParagraphCollection#items~0:complex'
  - uid: 'word!Word.ParagraphCollection#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          // This example shows how to get the paragraphs in the Word document
          // along with their text and font size properties.
          // 
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text and font properties.
              // It is best practice to always specify the property set. Otherwise, all properties are
              // returned in on the object.
              context.load(paragraphs, 'text, font/size');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

              // Insert code that works with the paragraphs loaded by context.load().
              })
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: options
          description: Proporciona opciones para las propiedades del objeto que se va a cargar.
          type:
            - 'word!Word.ParagraphCollection#load~0:complex'
  - uid: 'word!Word.ParagraphCollection#load:member(2)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'word!Word.ParagraphCollection#load:member(3)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'word!Word.ParagraphCollection#toJSON:member(1)'
    summary: 'Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el `Word.ParagraphCollection` objeto original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como`Word.Interfaces.ParagraphCollectionData`<!-- -->) que contiene una matriz "items" con copias rasas de las propiedades cargadas de los elementos de la colección.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
      return:
        type:
          - 'word!Word.Interfaces.ParagraphCollectionData:interface'
        description: ''
  - uid: 'word!Word.ParagraphCollection#track:member(1)'
    summary: 'Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento. Esta llamada es una abreviatura de`context.trackedObjects.add(thisObject)`<!-- -->. Si usa este objeto a través `.sync` de llamadas y fuera de la ejecución secuencial de un lote ". Run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, es necesario que haya agregado el objeto a la colección de objetos con seguimiento cuando se creó el objeto por primera vez.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
  - uid: 'word!Word.ParagraphCollection#untrack:member(1)'
    summary: 'Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente. Esta llamada es una forma abreviada de`context.trackedObjects.remove(thisObject)`<!-- -->. Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos. Tendrá que llamar `context.sync()` antes de que la liberación de memoria surta efecto.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.ParagraphCollection#items~0:complex'
    name: 'Word.Paragraph[]'
    fullName: 'Word.Paragraph[]'
    spec.typeScript:
      - uid: 'word!Word.Paragraph:class'
        name: Word.Paragraph
        fullName: Word.Paragraph
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.ParagraphCollection#load~0:complex'
    name: Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    fullName: Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'word!Word.Interfaces.ParagraphCollectionLoadOptions:interface'
        name: Word.Interfaces.ParagraphCollectionLoadOptions
        fullName: Word.Interfaces.ParagraphCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'word!Word.Interfaces.CollectionLoadOptions:interface'
        name: Word.Interfaces.CollectionLoadOptions
        fullName: Word.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'word!Word.Interfaces.ParagraphCollectionData:interface'
    name: Word.Interfaces.ParagraphCollectionData