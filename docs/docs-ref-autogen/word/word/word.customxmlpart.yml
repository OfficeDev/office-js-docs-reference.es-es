### YamlMime:TSType
name: Word.CustomXmlPart
uid: word!Word.CustomXmlPart:class
package: word!
fullName: Word.CustomXmlPart
summary: >-
  Representa un elemento XML personalizado.


  \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: word!Word.CustomXmlPart#context:member
  package: word!
  fullName: context
  summary: Contexto de solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: id
  uid: word!Word.CustomXmlPart#id:member
  package: word!
  fullName: id
  summary: >-
    Obtiene el identificador del elemento XML personalizado. Solo lectura.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: namespaceUri
  uid: word!Word.CustomXmlPart#namespaceUri:member
  package: word!
  fullName: namespaceUri
  summary: >-
    Obtiene el URI del espacio de nombres del elemento XML personalizado. Solo lectura.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly namespaceUri: string;'
    return:
      type: string
methods:
- name: delete()
  uid: word!Word.CustomXmlPart#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Elimina el elemento XML personalizado.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: deleteAttribute(xpath, namespaceMappings, name)
  uid: word!Word.CustomXmlPart#deleteAttribute:member(1)
  package: word!
  fullName: deleteAttribute(xpath, namespaceMappings, name)
  summary: >-
    Elimina un atributo con el nombre dado del elemento identificado por xpath.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteAttribute(xpath: string, namespaceMappings: any, name: string): void;'
    parameters:
    - id: xpath
      description: Necesario. Ruta de acceso absoluta al único elemento de la notación XPath.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    - id: name
      description: Necesario. Nombre del atributo.
      type: string
    return:
      type: void
      description: ''
- name: deleteElement(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#deleteElement:member(1)
  package: word!
  fullName: deleteElement(xpath, namespaceMappings)
  summary: >-
    Elimina el elemento identificado por xpath.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteElement(xpath: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: Necesario. Ruta de acceso absoluta al único elemento de la notación XPath.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    return:
      type: void
      description: ''
- name: getXml()
  uid: word!Word.CustomXmlPart#getXml:member(1)
  package: word!
  fullName: getXml()
  summary: >-
    Obtiene el contenido XML completo del elemento XML personalizado.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getXml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: insertAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#insertAttribute:member(1)
  package: word!
  fullName: insertAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    Inserta un atributo con el nombre y el valor especificados en el elemento identificado por xpath.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: Necesario. Ruta de acceso absoluta al único elemento de la notación XPath.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    - id: name
      description: Necesario. Nombre del atributo.
      type: string
    - id: value
      description: Necesario. Valor del atributo.
      type: string
    return:
      type: void
      description: ''
- name: insertElement(xpath, xml, namespaceMappings, index)
  uid: word!Word.CustomXmlPart#insertElement:member(1)
  package: word!
  fullName: insertElement(xpath, xml, namespaceMappings, index)
  summary: >-
    Inserta el XML especificado en el elemento primario identificado por xpath en el índice de posición secundaria.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertElement(xpath: string, xml: string, namespaceMappings: any, index?: number): void;'
    parameters:
    - id: xpath
      description: Necesario. Ruta de acceso absoluta al elemento primario único en la notación XPath.
      type: string
    - id: xml
      description: Necesario. Contenido XML que se va a insertar.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    - id: index
      description: Opcional. Posición basada en cero en la que se insertará el nuevo XML. Si se omite, el XML se anexará como el último elemento secundario de este elemento primario.
      type: number
    return:
      type: void
      description: ''
- name: load(options)
  uid: word!Word.CustomXmlPart#load:member(1)
  package: word!
  fullName: load(options)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.CustomXmlPartLoadOptions): Word.CustomXmlPart;'
    parameters:
    - id: options
      description: Proporciona opciones para las propiedades del objeto que se cargarán.
      type: <xref uid="word!Word.Interfaces.CustomXmlPartLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.CustomXmlPart#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.CustomXmlPart;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se cargarán.
      type: string | string[]
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.CustomXmlPart#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.CustomXmlPart;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` es una cadena delimitada por comas que especifica las propiedades que se cargarán y es una cadena delimitada por comas que especifica las propiedades de navegación que `propertyNamesAndPaths.expand` se cargarán.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: query(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#query:member(1)
  package: word!
  fullName: query(xpath, namespaceMappings)
  summary: >-
    Consulta el contenido XML del elemento XML personalizado.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'query(xpath: string, namespaceMappings: any): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: xpath
      description: Necesario. Una consulta XPath.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: Matriz en la que cada elemento representa una entrada coincidente con la consulta XPath.
- name: setXml(xml)
  uid: word!Word.CustomXmlPart#setXml:member(1)
  package: word!
  fullName: setXml(xml)
  summary: >-
    Establece el contenido XML completo del elemento XML personalizado.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setXml(xml: string): void;'
    parameters:
    - id: xml
      description: Necesario. Contenido XML que se va a establecer.
      type: string
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.CustomXmlPart#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Invalida el método JavaScript para proporcionar resultados más útiles cuando se pasa un objeto API a `toJSON()``JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama `toJSON` al método del objeto que se pasa a él). Mientras que el objeto Word.CustomXmlPart original es un objeto API, el método devuelve un objeto JavaScript sin formato `toJSON` (con el tipo como `Word.Interfaces.CustomXmlPartData`<!-- -->) que contiene copias superficiales de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.CustomXmlPartData;'
    return:
      type: <xref uid="word!Word.Interfaces.CustomXmlPartData:interface" />
      description: ''
- name: track()
  uid: word!Word.CustomXmlPart#track:member(1)
  package: word!
  fullName: track()
  summary: Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento. Esta llamada es una abreviada para `context.trackedObjects.add(thisObject)`<!-- -->. Si usa este objeto entre llamadas y fuera de la ejecución secuencial de un lote ".run" y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debe haber agregado el objeto a la colección de objetos de seguimiento cuando se creó el objeto por primera `.sync` vez.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'track(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: untrack()
  uid: word!Word.CustomXmlPart#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente. Esta llamada es abreviada para `context.trackedObjects.remove(thisObject)`<!-- -->. Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos. Deberá llamar antes de que `context.sync()` la versión de memoria entre en vigor.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: updateAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#updateAttribute:member(1)
  package: word!
  fullName: updateAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    Actualiza el valor de un atributo con el nombre dado del elemento identificado por xpath.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: Necesario. Ruta de acceso absoluta al único elemento de la notación XPath.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    - id: name
      description: Necesario. Nombre del atributo.
      type: string
    - id: value
      description: Necesario. Nuevo valor del atributo.
      type: string
    return:
      type: void
      description: ''
- name: updateElement(xpath, xml, namespaceMappings)
  uid: word!Word.CustomXmlPart#updateElement:member(1)
  package: word!
  fullName: updateElement(xpath, xml, namespaceMappings)
  summary: >-
    Actualiza el XML del elemento identificado por xpath.


    \[[Conjunto de API: WordApi BETA (SOLO VISTA PREVIA)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 'Si algún elemento del árbol tiene un atributo xmlns (cuyo valor suele ser, pero no siempre, un URI), un alias para ese valor de atributo debe prefijo el nombre del elemento en el parámetro xpath. Por ejemplo, supongamos que el árbol es el siguiente: <Day> <Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"> <Week>algo</Week> </Month> </Day> que xpath debe <Week> ser /<!-- -->Day<!-- -->/<!-- -->greg:Month<!-- -->/<!-- -->Semana, donde Greg es un alias asignado a "http:<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->GregorianCalendar" en el parámetro namespaceMappings.'
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateElement(xpath: string, xml: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: Necesario. Ruta de acceso absoluta al único elemento de la notación XPath.
      type: string
    - id: xml
      description: Necesario. Nuevo contenido XML que se va a almacenar.
      type: string
    - id: namespaceMappings
      description: 'Necesario. Objeto cuyos valores de propiedad son nombres de espacio de nombres y cuyos nombres de propiedad son alias para los espacios de nombres correspondientes. Por ejemplo: `{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. Los nombres de propiedad (como "greg") pueden ser cualquier cadena que no utilice caracteres XPath reservados, como la barra diagonal "/".'
      type: any
    return:
      type: void
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: e5e53dfbbb464a2bb9a6d169cd6e2b6ac23513ad
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51352183"
