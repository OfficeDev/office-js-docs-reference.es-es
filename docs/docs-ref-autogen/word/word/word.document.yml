### YamlMime:TSType
name: Word.Document
uid: word!Word.Document:class
package: word!
fullName: Word.Document
summary: >-
  El objeto Document es el objeto del nivel superior. Un objeto Document contiene una o más secciones, controles de contenido y el cuerpo que contiene el contenido del documento.


  \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: body
  uid: word!Word.Document#body:member
  package: word!
  fullName: body
  summary: >-
    Obtiene el objeto de cuerpo del documento. El cuerpo es el texto excluidos los encabezados, los pies de página, las notas al pie, los cuadros de texto, etc. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly body: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: contentControls
  uid: word!Word.Document#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Obtiene la colección de objetos de control de contenido en el documento. Esto incluye los controles de contenido en el cuerpo de los documentos, los encabezados, los pies de página, los cuadros de texto, etc. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Document#context:member
  package: word!
  fullName: context
  summary: Contexto de la solicitud asociado al objeto. Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: customXmlParts
  uid: word!Word.Document#customXmlParts:member
  package: word!
  fullName: customXmlParts
  summary: >-
    Obtiene los elementos XML personalizados del documento. Solo lectura.


    \[[Conjunto de API: versión beta de WordApi (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly customXmlParts: Word.CustomXmlPartCollection;'
    return:
      type: <xref uid="word!Word.CustomXmlPartCollection:class" />
- name: onContentControlAdded
  uid: word!Word.Document#onContentControlAdded:member
  package: word!
  fullName: onContentControlAdded
  summary: >-
    Se produce cuando se agrega un control de contenido. Ejecute context. Sync () en el controlador para obtener las propiedades del nuevo control de contenido.


    \[[Conjunto de API: versión beta de WordApi (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly onContentControlAdded: OfficeExtension.EventHandlers<Word.ContentControlEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="word!Word.ContentControlEventArgs:interface" />&gt;
- name: properties
  uid: word!Word.Document#properties:member
  package: word!
  fullName: properties
  summary: >-
    Obtiene las propiedades del documento. Solo lectura.


    \[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly properties: Word.DocumentProperties;'
    return:
      type: <xref uid="word!Word.DocumentProperties:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/30-properties/get-built-in-properties.yaml\nawait Word.run(async (context) => {\n    let builtInProperties = context.document.properties;\n    builtInProperties.load(\"*\"); // Let's get all!\n\n    await context.sync();\n    console.log(JSON.stringify(builtInProperties, null, 4));\n});\n```"
- name: saved
  uid: word!Word.Document#saved:member
  package: word!
  fullName: saved
  summary: >-
    Indica si se guardaron los cambios en el documento. Un valor de true indica que el documento no cambió desde que se guardó. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly saved: boolean;'
    return:
      type: boolean
- name: sections
  uid: word!Word.Document#sections:member
  package: word!
  fullName: sections
  summary: >-
    Obtiene la colección de objetos Section del documento. Solo lectura.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly sections: Word.SectionCollection;'
    return:
      type: <xref uid="word!Word.SectionCollection:class" />
- name: settings
  uid: word!Word.Document#settings:member
  package: word!
  fullName: settings
  summary: >-
    Obtiene la configuración del complemento en el documento. Solo lectura.


    \[[Conjunto de API: versión beta de WordApi (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly settings: Word.SettingCollection;'
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
methods:
- name: deleteBookmark(name)
  uid: word!Word.Document#deleteBookmark:member(1)
  package: word!
  fullName: deleteBookmark(name)
  summary: >-
    Elimina del documento un marcador, si existe.


    \[[Conjunto de API: versión beta de WordApi (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteBookmark(name: string): void;'
    parameters:
    - id: name
      description: Obligatorio. Nombre del marcador, que no distingue mayúsculas de minúsculas.
      type: string
    return:
      type: void
      description: ''
- name: getBookmarkRange(name)
  uid: word!Word.Document#getBookmarkRange:member(1)
  package: word!
  fullName: getBookmarkRange(name)
  summary: >-
    Obtiene el intervalo de un marcador. Produce un error si no existe el marcador.


    \[[Conjunto de API: versión beta de WordApi (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getBookmarkRange(name: string): Word.Range;'
    parameters:
    - id: name
      description: Obligatorio. Nombre del marcador, que no distingue mayúsculas de minúsculas.
      type: string
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getBookmarkRangeOrNullObject(name)
  uid: word!Word.Document#getBookmarkRangeOrNullObject:member(1)
  package: word!
  fullName: getBookmarkRangeOrNullObject(name)
  summary: >-
    Obtiene el intervalo de un marcador. Devuelve un objeto nulo si el marcador no existe.


    \[[Conjunto de API: versión beta de WordApi (solo vista previa)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getBookmarkRangeOrNullObject(name: string): Word.Range;'
    parameters:
    - id: name
      description: Obligatorio. Nombre del marcador, que no distingue mayúsculas de minúsculas.
      type: string
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getSelection()
  uid: word!Word.Document#getSelection:member(1)
  package: word!
  fullName: getSelection()
  summary: >-
    Obtiene la selección actual del documento. No se admiten selecciones múltiples.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelection(): Word.Range;'
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    var textSample = 'This is an example of the insert text method. This is a method ' + \n        'which allows users to insert text into a selection. It can insert text into a ' +\n        'relative location or it can overwrite the current selection. Since the ' +\n        'getSelection method returns a range object, look up the range object documentation ' +\n        'for everything you can do with a selection.';\n    \n    // Create a range proxy object for the current selection.\n    var range = context.document.getSelection();\n    \n    // Queue a command to insert text at the end of the selection.\n    range.insertText(textSample, Word.InsertLocation.end);\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Inserted the text at the end of the selection.');\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: word!Word.Document#load:member(1)
  package: word!
  fullName: load(options)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.DocumentLoadOptions): Word.Document;'
    parameters:
    - id: options
      description: Proporciona opciones para las propiedades del objeto que se va a cargar.
      type: <xref uid="word!Word.Interfaces.DocumentLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Document:class" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n    \n    // Queue a command to load content control properties.\n    context.load(thisDocument, 'contentControls/id, contentControls/text, contentControls/tag');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (thisDocument.contentControls.items.length !== 0) {\n            for (var i = 0; i < thisDocument.contentControls.items.length; i++) {\n                console.log(thisDocument.contentControls.items[i].id);\n                console.log(thisDocument.contentControls.items[i].text);\n                console.log(thisDocument.contentControls.items[i].tag);\n            }\n        } else {\n            console.log('No content controls in this document.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNames)
  uid: word!Word.Document#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Document;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Document#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Document;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` es una cadena delimitada por comas que especifica las propiedades que se van a cargar y `propertyNamesAndPaths.expand` es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
- name: save()
  uid: word!Word.Document#save:member(1)
  package: word!
  fullName: save()
  summary: >-
    Guarda el documento. Se utiliza la Convención de nomenclatura de archivos predeterminada de Word si el documento no se ha guardado antes.


    \[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'save(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n\n    // Queue a command to load the document save state (on the saved property).\n    context.load(thisDocument, 'saved');    \n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (thisDocument.saved === false) {\n            // Queue a command to save this document.\n            thisDocument.save();\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Saved the document');\n            });\n        } else {\n            console.log('The document has not changed since the last save.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: set(properties, options)
  uid: word!Word.Document#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Establece varias propiedades de un objeto al mismo tiempo. Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.
  remarks: >-
    Este método tiene la siguiente firma adicional:


    `set(properties: Word.Document): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.
      type: <xref uid="word!Word.Interfaces.DocumentUpdateData:interface" />
    - id: options
      description: Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Document#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Document): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Document:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.Document#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Reemplaza el `toJSON()` método JavaScript para proporcionar un resultado más útil cuando se pasa un objeto API a `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, a su vez, llama al `toJSON` método del objeto que se le pasa.) Mientras que el objeto Word.Document original es un objeto API, el `toJSON` método devuelve un objeto JavaScript sin formato (escrito como `Word.Interfaces.DocumentData`<!-- -->) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.DocumentData;'
    return:
      type: <xref uid="word!Word.Interfaces.DocumentData:interface" />
      description: ''
- name: track()
  uid: word!Word.Document#track:member(1)
  package: word!
  fullName: track()
  summary: Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento. Esta llamada es una abreviatura de `context.trackedObjects.add(thisObject)`<!-- -->. Si usa este objeto a través `.sync` de llamadas y fuera de la ejecución secuencial de un lote ". Run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, es necesario que haya agregado el objeto a la colección de objetos con seguimiento cuando se creó el objeto por primera vez.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Document;'
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
- name: untrack()
  uid: word!Word.Document#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente. Esta llamada es una forma abreviada de `context.trackedObjects.remove(thisObject)`<!-- -->. Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos. Tendrá que llamar `context.sync()` antes de que la liberación de memoria surta efecto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Document;'
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 3ce21b7f4eb2f9e133d7008d984df38e86f53393
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49192924"
