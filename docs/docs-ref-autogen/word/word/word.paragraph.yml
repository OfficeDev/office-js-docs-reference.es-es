### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Paragraph:class'
    summary: |-
      <span data-ttu-id="733c2-101">Representa un solo párrafo de una selección, intervalo, control de contenido o cuerpo del documento.</span><span class="sxs-lookup"><span data-stu-id="733c2-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="733c2-102">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Paragraph#alignment:member'
      - 'word!Word.Paragraph#attachToList:member(1)'
      - 'word!Word.Paragraph#clear:member(1)'
      - 'word!Word.Paragraph#contentControls:member'
      - 'word!Word.Paragraph#context:member'
      - 'word!Word.Paragraph#delete:member(1)'
      - 'word!Word.Paragraph#detachFromList:member(1)'
      - 'word!Word.Paragraph#firstLineIndent:member'
      - 'word!Word.Paragraph#font:member'
      - 'word!Word.Paragraph#getHtml:member(1)'
      - 'word!Word.Paragraph#getNext:member(1)'
      - 'word!Word.Paragraph#getNextOrNullObject:member(1)'
      - 'word!Word.Paragraph#getOoxml:member(1)'
      - 'word!Word.Paragraph#getPrevious:member(1)'
      - 'word!Word.Paragraph#getPreviousOrNullObject:member(1)'
      - 'word!Word.Paragraph#getRange:member(1)'
      - 'word!Word.Paragraph#getRange:member(2)'
      - 'word!Word.Paragraph#getTextRanges:member(1)'
      - 'word!Word.Paragraph#inlinePictures:member'
      - 'word!Word.Paragraph#insertBreak:member(1)'
      - 'word!Word.Paragraph#insertBreak:member(2)'
      - 'word!Word.Paragraph#insertContentControl:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(2)'
      - 'word!Word.Paragraph#insertHtml:member(1)'
      - 'word!Word.Paragraph#insertHtml:member(2)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Paragraph#insertOoxml:member(1)'
      - 'word!Word.Paragraph#insertOoxml:member(2)'
      - 'word!Word.Paragraph#insertParagraph:member(1)'
      - 'word!Word.Paragraph#insertParagraph:member(2)'
      - 'word!Word.Paragraph#insertTable:member(1)'
      - 'word!Word.Paragraph#insertTable:member(2)'
      - 'word!Word.Paragraph#insertText:member(1)'
      - 'word!Word.Paragraph#insertText:member(2)'
      - 'word!Word.Paragraph#isLastParagraph:member'
      - 'word!Word.Paragraph#isListItem:member'
      - 'word!Word.Paragraph#leftIndent:member'
      - 'word!Word.Paragraph#lineSpacing:member'
      - 'word!Word.Paragraph#lineUnitAfter:member'
      - 'word!Word.Paragraph#lineUnitBefore:member'
      - 'word!Word.Paragraph#list:member'
      - 'word!Word.Paragraph#listItem:member'
      - 'word!Word.Paragraph#listItemOrNullObject:member'
      - 'word!Word.Paragraph#listOrNullObject:member'
      - 'word!Word.Paragraph#load:member(1)'
      - 'word!Word.Paragraph#load:member(2)'
      - 'word!Word.Paragraph#load:member(3)'
      - 'word!Word.Paragraph#outlineLevel:member'
      - 'word!Word.Paragraph#parentBody:member'
      - 'word!Word.Paragraph#parentContentControl:member'
      - 'word!Word.Paragraph#parentContentControlOrNullObject:member'
      - 'word!Word.Paragraph#parentTable:member'
      - 'word!Word.Paragraph#parentTableCell:member'
      - 'word!Word.Paragraph#parentTableCellOrNullObject:member'
      - 'word!Word.Paragraph#parentTableOrNullObject:member'
      - 'word!Word.Paragraph#rightIndent:member'
      - 'word!Word.Paragraph#search:member(1)'
      - 'word!Word.Paragraph#select:member(1)'
      - 'word!Word.Paragraph#select:member(2)'
      - 'word!Word.Paragraph#set:member(1)'
      - 'word!Word.Paragraph#set:member(2)'
      - 'word!Word.Paragraph#spaceAfter:member'
      - 'word!Word.Paragraph#spaceBefore:member'
      - 'word!Word.Paragraph#split:member(1)'
      - 'word!Word.Paragraph#startNewList:member(1)'
      - 'word!Word.Paragraph#style:member'
      - 'word!Word.Paragraph#styleBuiltIn:member'
      - 'word!Word.Paragraph#tableNestingLevel:member'
      - 'word!Word.Paragraph#text:member'
      - 'word!Word.Paragraph#toJSON:member(1)'
      - 'word!Word.Paragraph#track:member(1)'
      - 'word!Word.Paragraph#untrack:member(1)'
  - uid: 'word!Word.Paragraph#alignment:member'
    summary: |-
      <span data-ttu-id="733c2-103">Obtiene o establece la alineación de un párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="733c2-104">El valor puede ser 'left', 'centered', 'right' o 'justified'.</span><span class="sxs-lookup"><span data-stu-id="733c2-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="733c2-105">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Paragraph#alignment~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#attachToList:member(1)'
    summary: |-
      <span data-ttu-id="733c2-p102">Permite que el párrafo se una a una lista existente en el nivel especificado. Se produce un error si el párrafo no puede unirse a la lista o si este ya es un elemento de lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-p102">Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.</span></span>

      <span data-ttu-id="733c2-109">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-109">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'attachToList(listId, level)'
    fullName: 'attachToList(listId, level)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'attachToList(listId: number, level: number): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: listId
          description: <span data-ttu-id="733c2-110">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-110">Required.</span></span> <span data-ttu-id="733c2-111">IDENTIFICADOR de una lista existente.</span><span class="sxs-lookup"><span data-stu-id="733c2-111">The ID of an existing list.</span></span>
          type:
            - number
        - id: level
          description: <span data-ttu-id="733c2-112">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-112">Required.</span></span> <span data-ttu-id="733c2-113">El nivel de la lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-113">The level in the list.</span></span>
          type:
            - number
  - uid: 'word!Word.Paragraph#clear:member(1)'
    summary: |-
      <span data-ttu-id="733c2-114">Borra el contenido del objeto de párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-114">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="733c2-115">El usuario puede realizar la operación de deshacer en el contenido borrado.</span><span class="sxs-lookup"><span data-stu-id="733c2-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="733c2-116">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-117">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#contentControls:member'
    summary: |-
      <span data-ttu-id="733c2-118">Obtiene la colección de objetos de control de contenido en el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-118">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="733c2-119">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-119">Read-only.</span></span>

      <span data-ttu-id="733c2-120">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Paragraph#context:member'
    summary: <span data-ttu-id="733c2-121">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="733c2-121">The request context associated with the object.</span></span> <span data-ttu-id="733c2-122">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="733c2-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Paragraph#delete:member(1)'
    summary: |-
      <span data-ttu-id="733c2-123">Elimina el párrafo y su contenido del documento.</span><span class="sxs-lookup"><span data-stu-id="733c2-123">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="733c2-124">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-125">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#detachFromList:member(1)'
    summary: |-
      <span data-ttu-id="733c2-126">Mueve este párrafo fuera de la lista, si este es un elemento de lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-126">Moves this paragraph out of its list, if the paragraph is a list item.</span></span>

      <span data-ttu-id="733c2-127">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: detachFromList()
    fullName: detachFromList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'detachFromList(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'word!Word.Paragraph#firstLineIndent:member'
    summary: |-
      <span data-ttu-id="733c2-p108">Obtiene o establece el valor (en puntos) para una sangría en la primera línea o francesa. Para establecer una sangría en la primera línea se debe usar un valor positivo, para establecer una sangría francesa se debe usar un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="733c2-p108">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="733c2-130">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#font:member'
    summary: |-
      <span data-ttu-id="733c2-131">Obtiene el formato de texto del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-131">Gets the text format of the paragraph.</span></span> <span data-ttu-id="733c2-132">Úselo para obtener y establecer el nombre de la fuente, el tamaño, el color y otras propiedades.</span><span class="sxs-lookup"><span data-stu-id="733c2-132">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="733c2-133">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-133">Read-only.</span></span>

      <span data-ttu-id="733c2-134">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Paragraph#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="733c2-135">Obtiene una representación HTML del objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="733c2-135">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="733c2-136">Cuando se representa en una página web o visor de HTML, el formato será una coincidencia aproximada, pero no exacta, con el formato del documento.</span><span class="sxs-lookup"><span data-stu-id="733c2-136">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="733c2-137">Este método no devuelve el mismo HTML exacto para el mismo documento en diferentes plataformas (Windows, Mac, etc.).</span><span class="sxs-lookup"><span data-stu-id="733c2-137">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="733c2-138">Si necesita fidelidad exacta, o coherencia entre plataformas, use `Paragraph.getOoxml()` y convierta el XML devuelto en HTML.</span><span class="sxs-lookup"><span data-stu-id="733c2-138">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="733c2-139">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-140">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-140">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getNext:member(1)'
    summary: |-
      <span data-ttu-id="733c2-141">Obtiene el párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="733c2-141">Gets the next paragraph.</span></span> <span data-ttu-id="733c2-142">Produce una excepción si el párrafo es el último.</span><span class="sxs-lookup"><span data-stu-id="733c2-142">Throws if the paragraph is the last one.</span></span>

      <span data-ttu-id="733c2-143">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-143">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNext()
    fullName: getNext()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#getNextOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="733c2-144">Obtiene el párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="733c2-144">Gets the next paragraph.</span></span> <span data-ttu-id="733c2-145">Devuelve un objeto nulo si el párrafo es el último.</span><span class="sxs-lookup"><span data-stu-id="733c2-145">Returns a null object if the paragraph is the last one.</span></span>

      <span data-ttu-id="733c2-146">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-146">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject()
    fullName: getNextOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="733c2-147">Obtiene la representación Office Open XML (OOXML) del objeto de párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-147">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="733c2-148">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-149">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getPrevious:member(1)'
    summary: |-
      <span data-ttu-id="733c2-150">Obtiene el párrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="733c2-150">Gets the previous paragraph.</span></span> <span data-ttu-id="733c2-151">Produce una excepción si el párrafo es el primero.</span><span class="sxs-lookup"><span data-stu-id="733c2-151">Throws if the paragraph is the first one.</span></span>

      <span data-ttu-id="733c2-152">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-152">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPrevious()
    fullName: getPrevious()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#getPreviousOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="733c2-153">Obtiene el párrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="733c2-153">Gets the previous paragraph.</span></span> <span data-ttu-id="733c2-154">Devuelve un objeto nulo si el párrafo es el primero.</span><span class="sxs-lookup"><span data-stu-id="733c2-154">Returns a null object if the paragraph is the first one.</span></span>

      <span data-ttu-id="733c2-155">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject()
    fullName: getPreviousOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-156">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-156">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue commands to create a proxy object for the next-to-last paragraph.
                  var indexOfLastParagraph = paragraphs.items.length - 1;
                  var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();

                  // Queue a command to load the text of the preceding paragraph.
                  context.load(precedingParagraph, 'text');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      if (precedingParagraph.isNullObject) {
                          console.log('There are no paragraphs before the current one.');
                      } else {
                          console.log('The preceding paragraph is: ' + precedingParagraph.text);
                      }
                  });
              });
          }).catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getRange:member(1)'
    summary: |-
      <span data-ttu-id="733c2-157">Obtiene el párrafo completo, o el punto de inicio o final del párrafo, como un intervalo.</span><span class="sxs-lookup"><span data-stu-id="733c2-157">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="733c2-158">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-158">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="733c2-159">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-159">Optional.</span></span> <span data-ttu-id="733c2-160">La ubicación del intervalo puede ser "total", "Start", "End", "after" o "Content".</span><span class="sxs-lookup"><span data-stu-id="733c2-160">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - 'word!Word.RangeLocation:enum'
  - uid: 'word!Word.Paragraph#getRange:member(2)'
    summary: |-
      <span data-ttu-id="733c2-161">Obtiene el párrafo completo, o el punto de inicio o final del párrafo, como un intervalo.</span><span class="sxs-lookup"><span data-stu-id="733c2-161">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="733c2-162">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-162">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="733c2-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-163">Optional.</span></span> <span data-ttu-id="733c2-164">La ubicación del intervalo puede ser "total", "Start", "End", "after" o "Content".</span><span class="sxs-lookup"><span data-stu-id="733c2-164">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: 'word!Word.Paragraph#getTextRanges:member(1)'
    summary: |-
      <span data-ttu-id="733c2-165">Obtiene los intervalos de texto del párrafo usando signos de puntuación u otras marcas de fin.</span><span class="sxs-lookup"><span data-stu-id="733c2-165">Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="733c2-166">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-166">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="733c2-167">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-167">Required.</span></span> <span data-ttu-id="733c2-168">Los signos de puntuación u otras marcas de fin como una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="733c2-168">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="733c2-169">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-169">Optional.</span></span> <span data-ttu-id="733c2-170">Indica si se van a recortar los caracteres de espaciado (espacios, tabulaciones, saltos de columna y marcas de fin de párrafo) desde el inicio y el final de los rangos devueltos en la colección Range.</span><span class="sxs-lookup"><span data-stu-id="733c2-170">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="733c2-171">El valor predeterminado es false que indica que los caracteres de espaciado del principio y el final de los intervalos se incluyen en la colección Range.</span><span class="sxs-lookup"><span data-stu-id="733c2-171">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Paragraph#inlinePictures:member'
    summary: |-
      <span data-ttu-id="733c2-172">Obtiene la colección de objetos InlinePicture del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-172">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="733c2-173">La colección no incluye imágenes flotantes.</span><span class="sxs-lookup"><span data-stu-id="733c2-173">The collection does not include floating images.</span></span> <span data-ttu-id="733c2-174">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-174">Read-only.</span></span>

      <span data-ttu-id="733c2-175">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-175">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Paragraph#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="733c2-176">Inserta un salto en la ubicación especificada del documento principal.</span><span class="sxs-lookup"><span data-stu-id="733c2-176">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="733c2-177">El valor de insertLocation puede ser 'Before' o 'After'.</span><span class="sxs-lookup"><span data-stu-id="733c2-177">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="733c2-178">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-178">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-179">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-179">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="733c2-180">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-180">Required.</span></span> <span data-ttu-id="733c2-181">Tipo de salto que se va a agregar al documento.</span><span class="sxs-lookup"><span data-stu-id="733c2-181">The break type to add to the document.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="733c2-182">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-182">Required.</span></span> <span data-ttu-id="733c2-183">El valor puede ser "Before" o "After".</span><span class="sxs-lookup"><span data-stu-id="733c2-183">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="733c2-184">Inserta un salto en la ubicación especificada del documento principal.</span><span class="sxs-lookup"><span data-stu-id="733c2-184">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="733c2-185">El valor de insertLocation puede ser 'Before' o 'After'.</span><span class="sxs-lookup"><span data-stu-id="733c2-185">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="733c2-186">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-187">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-187">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="733c2-188">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-188">Required.</span></span> <span data-ttu-id="733c2-189">Tipo de salto que se va a agregar al documento.</span><span class="sxs-lookup"><span data-stu-id="733c2-189">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="733c2-190">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-190">Required.</span></span> <span data-ttu-id="733c2-191">El valor puede ser "Before" o "After".</span><span class="sxs-lookup"><span data-stu-id="733c2-191">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="733c2-192">Ajusta el objeto de párrafo con un control de contenido de texto enriquecido.</span><span class="sxs-lookup"><span data-stu-id="733c2-192">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="733c2-193">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-194">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-194">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="733c2-195">Inserta un documento en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-195">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-196">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-196">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-197">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-197">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="733c2-198">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-198">Required.</span></span> <span data-ttu-id="733c2-199">El contenido codificado en Base64 de un archivo. docx.</span><span class="sxs-lookup"><span data-stu-id="733c2-199">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="733c2-200">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-200">Required.</span></span> <span data-ttu-id="733c2-201">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-201">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="733c2-202">Inserta un documento en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-202">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-203">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-204">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="733c2-205">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-205">Required.</span></span> <span data-ttu-id="733c2-206">El contenido codificado en Base64 de un archivo. docx.</span><span class="sxs-lookup"><span data-stu-id="733c2-206">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="733c2-207">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-207">Required.</span></span> <span data-ttu-id="733c2-208">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-208">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="733c2-209">Inserta HTML en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-209">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-210">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-210">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-211">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-212">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-212">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="733c2-213">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-213">Required.</span></span> <span data-ttu-id="733c2-214">HTML que se va a insertar en el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-214">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="733c2-215">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-215">Required.</span></span> <span data-ttu-id="733c2-216">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-216">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="733c2-217">Inserta HTML en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-217">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-218">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-218">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-219">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="733c2-220">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-220">Required.</span></span> <span data-ttu-id="733c2-221">HTML que se va a insertar en el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-221">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="733c2-222">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-222">Required.</span></span> <span data-ttu-id="733c2-223">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-223">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="733c2-224">Inserta una imagen en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-224">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-225">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-225">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-226">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-227">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-227">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="733c2-228">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-228">Required.</span></span> <span data-ttu-id="733c2-229">La imagen codificada en Base64 que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="733c2-229">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="733c2-230">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-230">Required.</span></span> <span data-ttu-id="733c2-231">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-231">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="733c2-232">Inserta una imagen en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-232">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-233">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-233">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-234">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-234">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="733c2-235">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-235">Required.</span></span> <span data-ttu-id="733c2-236">La imagen codificada en Base64 que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="733c2-236">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="733c2-237">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-237">Required.</span></span> <span data-ttu-id="733c2-238">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-238">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="733c2-239">Inserta OOXML en el párrafo, en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-239">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-240">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-240">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-241">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-241">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="733c2-242">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-242">Required.</span></span> <span data-ttu-id="733c2-243">OOXML que se va a insertar en el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-243">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="733c2-244">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-244">Required.</span></span> <span data-ttu-id="733c2-245">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-245">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="733c2-246">Inserta OOXML en el párrafo, en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-246">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-247">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-247">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-248">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-248">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="733c2-249">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-249">Required.</span></span> <span data-ttu-id="733c2-250">OOXML que se va a insertar en el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-250">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="733c2-251">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-251">Required.</span></span> <span data-ttu-id="733c2-252">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-252">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="733c2-253">Inserta un párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-253">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="733c2-254">El valor insertLocation puede ser 'Before' o 'After'.</span><span class="sxs-lookup"><span data-stu-id="733c2-254">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="733c2-255">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-256">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="733c2-257">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-257">Required.</span></span> <span data-ttu-id="733c2-258">Texto de párrafo que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="733c2-258">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="733c2-259">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-259">Required.</span></span> <span data-ttu-id="733c2-260">El valor puede ser "Before" o "After".</span><span class="sxs-lookup"><span data-stu-id="733c2-260">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="733c2-261">Inserta un párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-261">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="733c2-262">El valor insertLocation puede ser 'Before' o 'After'.</span><span class="sxs-lookup"><span data-stu-id="733c2-262">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="733c2-263">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="733c2-264">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-264">Required.</span></span> <span data-ttu-id="733c2-265">Texto de párrafo que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="733c2-265">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="733c2-266">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-266">Required.</span></span> <span data-ttu-id="733c2-267">El valor puede ser "Before" o "After".</span><span class="sxs-lookup"><span data-stu-id="733c2-267">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertTable:member(1)'
    summary: |-
      <span data-ttu-id="733c2-268">Inserta una tabla con el número especificado de filas y columnas.</span><span class="sxs-lookup"><span data-stu-id="733c2-268">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="733c2-269">El valor insertLocation puede ser 'Before' o 'After'.</span><span class="sxs-lookup"><span data-stu-id="733c2-269">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="733c2-270">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="733c2-271">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-271">Required.</span></span> <span data-ttu-id="733c2-272">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-272">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="733c2-273">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-273">Required.</span></span> <span data-ttu-id="733c2-274">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-274">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="733c2-275">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-275">Required.</span></span> <span data-ttu-id="733c2-276">El valor puede ser "Before" o "After".</span><span class="sxs-lookup"><span data-stu-id="733c2-276">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
        - id: values
          description: '<span data-ttu-id="733c2-277">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-277">Optional 2D array.</span></span> <span data-ttu-id="733c2-278">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="733c2-278">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'word!Word.Paragraph#insertTable:member(2)'
    summary: |-
      <span data-ttu-id="733c2-279">Inserta una tabla con el número especificado de filas y columnas.</span><span class="sxs-lookup"><span data-stu-id="733c2-279">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="733c2-280">El valor insertLocation puede ser 'Before' o 'After'.</span><span class="sxs-lookup"><span data-stu-id="733c2-280">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="733c2-281">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-281">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="733c2-282">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-282">Required.</span></span> <span data-ttu-id="733c2-283">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-283">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="733c2-284">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-284">Required.</span></span> <span data-ttu-id="733c2-285">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-285">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="733c2-286">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-286">Required.</span></span> <span data-ttu-id="733c2-287">El valor puede ser "Before" o "After".</span><span class="sxs-lookup"><span data-stu-id="733c2-287">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: '<span data-ttu-id="733c2-288">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-288">Optional 2D array.</span></span> <span data-ttu-id="733c2-289">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="733c2-289">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'word!Word.Paragraph#insertText:member(1)'
    summary: |-
      <span data-ttu-id="733c2-290">Inserta texto en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-290">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-291">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-291">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-292">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-292">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-293">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-293">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="733c2-294">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-294">Required.</span></span> <span data-ttu-id="733c2-295">Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="733c2-295">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="733c2-296">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-296">Required.</span></span> <span data-ttu-id="733c2-297">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-297">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertText:member(2)'
    summary: |-
      <span data-ttu-id="733c2-298">Inserta texto en el párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="733c2-298">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="733c2-299">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="733c2-299">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="733c2-300">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-300">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="733c2-301">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-301">Required.</span></span> <span data-ttu-id="733c2-302">Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="733c2-302">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="733c2-303">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="733c2-303">Required.</span></span> <span data-ttu-id="733c2-304">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-304">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#isLastParagraph:member'
    summary: |-
      <span data-ttu-id="733c2-305">Indica el párrafo que es el último dentro de su cuerpo primario.</span><span class="sxs-lookup"><span data-stu-id="733c2-305">Indicates the paragraph is the last one inside its parent body.</span></span> <span data-ttu-id="733c2-306">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-306">Read-only.</span></span>

      <span data-ttu-id="733c2-307">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isLastParagraph
    fullName: isLastParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLastParagraph: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Paragraph#isListItem:member'
    summary: |-
      <span data-ttu-id="733c2-308">Comprueba si el párrafo es un elemento de lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-308">Checks whether the paragraph is a list item.</span></span> <span data-ttu-id="733c2-309">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-309">Read-only.</span></span>

      <span data-ttu-id="733c2-310">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-310">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isListItem
    fullName: isListItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isListItem: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Paragraph#leftIndent:member'
    summary: |-
      <span data-ttu-id="733c2-311">Obtiene o establece el valor de sangría izquierda (en puntos) del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-311">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="733c2-312">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-312">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-313">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-313">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineSpacing:member'
    summary: |-
      <span data-ttu-id="733c2-314">Obtiene o establece el espaciado de línea (en puntos) del párrafo especificado.</span><span class="sxs-lookup"><span data-stu-id="733c2-314">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="733c2-315">En la interfaz de usuario de Word, este valor se divide entre 12.</span><span class="sxs-lookup"><span data-stu-id="733c2-315">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="733c2-316">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-316">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-317">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-317">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineUnitAfter:member'
    summary: |-
      <span data-ttu-id="733c2-318">Obtiene o establece la cantidad de espaciado, en líneas de cuadrícula, detrás del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-318">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="733c2-319">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#lineUnitBefore:member'
    summary: |-
      <span data-ttu-id="733c2-320">Obtiene o establece la cantidad de espaciado (en líneas de cuadrícula) antes del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-320">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="733c2-321">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-321">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#list:member'
    summary: |-
      <span data-ttu-id="733c2-322">Obtiene la lista a la que pertenece este párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-322">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="733c2-323">Produce una excepción si el párrafo no está en una lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-323">Throws if the paragraph is not in a list.</span></span> <span data-ttu-id="733c2-324">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-324">Read-only.</span></span>

      <span data-ttu-id="733c2-325">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-325">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: list
    fullName: list
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly list: Word.List;'
      return:
        type:
          - 'word!Word.List:class'
  - uid: 'word!Word.Paragraph#listItem:member'
    summary: |-
      <span data-ttu-id="733c2-326">Obtiene ListItem para el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-326">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="733c2-327">Produce una excepción si el párrafo no forma parte de una lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-327">Throws if the paragraph is not part of a list.</span></span> <span data-ttu-id="733c2-328">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-328">Read-only.</span></span>

      <span data-ttu-id="733c2-329">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-329">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItem
    fullName: listItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItem: Word.ListItem;'
      return:
        type:
          - 'word!Word.ListItem:class'
  - uid: 'word!Word.Paragraph#listItemOrNullObject:member'
    summary: |-
      <span data-ttu-id="733c2-330">Obtiene ListItem para el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-330">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="733c2-331">Devuelve un objeto NULL si el párrafo no forma parte de una lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-331">Returns a null object if the paragraph is not part of a list.</span></span> <span data-ttu-id="733c2-332">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-332">Read-only.</span></span>

      <span data-ttu-id="733c2-333">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-333">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItemOrNullObject
    fullName: listItemOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItemOrNullObject: Word.ListItem;'
      return:
        type:
          - 'word!Word.ListItem:class'
  - uid: 'word!Word.Paragraph#listOrNullObject:member'
    summary: |-
      <span data-ttu-id="733c2-334">Obtiene la lista a la que pertenece este párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-334">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="733c2-335">Devuelve un objeto NULL si el párrafo no está en una lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-335">Returns a null object if the paragraph is not in a list.</span></span> <span data-ttu-id="733c2-336">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-336">Read-only.</span></span>

      <span data-ttu-id="733c2-337">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-337">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listOrNullObject
    fullName: listOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listOrNullObject: Word.List;'
      return:
        type:
          - 'word!Word.List:class'
  - uid: 'word!Word.Paragraph#load:member(1)'
    summary: '<span data-ttu-id="733c2-338">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="733c2-338">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="733c2-339">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="733c2-339">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="733c2-340">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="733c2-340">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="733c2-341">`load(option?: string | string[]): Word.Paragraph`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="733c2-341">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="733c2-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="733c2-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="733c2-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="733c2-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="733c2-344">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="733c2-344">It is similar to the preceding signature.</span></span> <span data-ttu-id="733c2-345">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="733c2-345">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="733c2-346">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="733c2-346">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="733c2-347">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="733c2-347">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ParagraphLoadOptions:interface'
  - uid: 'word!Word.Paragraph#load:member(2)'
    summary: <span data-ttu-id="733c2-348">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="733c2-348">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="733c2-349">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="733c2-349">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="733c2-350">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="733c2-350">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Paragraph#load:member(3)'
    summary: <span data-ttu-id="733c2-351">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="733c2-351">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="733c2-352">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="733c2-352">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="733c2-353">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="733c2-353">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Paragraph#outlineLevel:member'
    summary: |-
      <span data-ttu-id="733c2-354">Obtiene o establece el nivel de esquema del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-354">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="733c2-355">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-355">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#parentBody:member'
    summary: |-
      <span data-ttu-id="733c2-356">Obtiene el cuerpo primario del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-356">Gets the parent body of the paragraph.</span></span> <span data-ttu-id="733c2-357">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-357">Read-only.</span></span>

      <span data-ttu-id="733c2-358">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Paragraph#parentContentControl:member'
    summary: |-
      <span data-ttu-id="733c2-359">Obtiene el control de contenido que contiene el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-359">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="733c2-360">Produce una excepción si no hay un control de contenido primario.</span><span class="sxs-lookup"><span data-stu-id="733c2-360">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="733c2-361">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-361">Read-only.</span></span>

      <span data-ttu-id="733c2-362">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-362">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#parentContentControlOrNullObject:member'
    summary: |-
      <span data-ttu-id="733c2-363">Obtiene el control de contenido que contiene el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-363">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="733c2-364">Devuelve un objeto nulo si no hay un control de contenido primario.</span><span class="sxs-lookup"><span data-stu-id="733c2-364">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="733c2-365">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-365">Read-only.</span></span>

      <span data-ttu-id="733c2-366">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-366">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#parentTable:member'
    summary: |-
      <span data-ttu-id="733c2-367">Obtiene la tabla que contiene el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-367">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="733c2-368">Produce una excepción si no está incluida en una tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-368">Throws if it is not contained in a table.</span></span> <span data-ttu-id="733c2-369">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-369">Read-only.</span></span>

      <span data-ttu-id="733c2-370">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Paragraph#parentTableCell:member'
    summary: |-
      <span data-ttu-id="733c2-371">Obtiene la celda de tabla que contiene el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-371">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="733c2-372">Produce una excepción si no está incluida en una celda de tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-372">Throws if it is not contained in a table cell.</span></span> <span data-ttu-id="733c2-373">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-373">Read-only.</span></span>

      <span data-ttu-id="733c2-374">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-374">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Paragraph#parentTableCellOrNullObject:member'
    summary: |-
      <span data-ttu-id="733c2-375">Obtiene la celda de tabla que contiene el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-375">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="733c2-376">Devuelve un objeto NULL si no se incluye en una celda de tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-376">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="733c2-377">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-377">Read-only.</span></span>

      <span data-ttu-id="733c2-378">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-378">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Paragraph#parentTableOrNullObject:member'
    summary: |-
      <span data-ttu-id="733c2-379">Obtiene la tabla que contiene el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-379">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="733c2-380">Devuelve un objeto NULL si este no se incluye en una tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-380">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="733c2-381">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-381">Read-only.</span></span>

      <span data-ttu-id="733c2-382">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-382">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Paragraph#rightIndent:member'
    summary: |-
      <span data-ttu-id="733c2-383">Obtiene o establece el valor de sangría derecha (en puntos) del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-383">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="733c2-384">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-384">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#search:member(1)'
    summary: |-
      <span data-ttu-id="733c2-385">Realiza una búsqueda con el SearchOptions especificado en el ámbito del objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="733c2-385">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="733c2-386">Los resultados de la búsqueda son una colección de objetos de intervalo.</span><span class="sxs-lookup"><span data-stu-id="733c2-386">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="733c2-387">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-387">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="733c2-388">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-388">Required.</span></span> <span data-ttu-id="733c2-389">Texto de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="733c2-389">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="733c2-390">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-390">Optional.</span></span> <span data-ttu-id="733c2-391">Opciones de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="733c2-391">Options for the search.</span></span>
          type:
            - 'word!Word.Paragraph#search~0:complex'
  - uid: 'word!Word.Paragraph#select:member(1)'
    summary: |-
      <span data-ttu-id="733c2-392">Selecciona y se desplaza por la interfaz de usuario de Word hasta el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-392">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="733c2-393">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-393">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-394">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-394">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="733c2-395">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-395">Optional.</span></span> <span data-ttu-id="733c2-396">El modo de selección puede ser ''Select'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-396">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="733c2-397">''Select'' es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="733c2-397">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Paragraph#select:member(2)'
    summary: |-
      <span data-ttu-id="733c2-398">Selecciona y se desplaza por la interfaz de usuario de Word hasta el párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-398">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="733c2-399">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-399">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="733c2-400">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-400">Optional.</span></span> <span data-ttu-id="733c2-401">El modo de selección puede ser ''Select'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="733c2-401">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="733c2-402">''Select'' es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="733c2-402">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Paragraph#set:member(1)'
    summary: '<span data-ttu-id="733c2-403">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="733c2-403">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="733c2-404">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="733c2-404">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="733c2-405">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="733c2-405">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="733c2-406">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-406">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="733c2-407">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="733c2-407">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.ParagraphUpdateData:interface'
        - id: options
          description: <span data-ttu-id="733c2-408">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-408">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Paragraph#set:member(2)'
    summary: '<span data-ttu-id="733c2-409">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="733c2-409">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Paragraph:class'
  - uid: 'word!Word.Paragraph#spaceAfter:member'
    summary: |-
      <span data-ttu-id="733c2-410">Obtiene o establece el espaciado (en puntos) después del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-410">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="733c2-411">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-411">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-412">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-412">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#spaceBefore:member'
    summary: |-
      <span data-ttu-id="733c2-413">Obtiene o establece el espaciado (en puntos) antes del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-413">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="733c2-414">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-414">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#split:member(1)'
    summary: |-
      <span data-ttu-id="733c2-415">Divide el párrafo en intervalos secundarios mediante delimitadores.</span><span class="sxs-lookup"><span data-stu-id="733c2-415">Splits the paragraph into child ranges by using delimiters.</span></span>

      <span data-ttu-id="733c2-416">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-416">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-417">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-417">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraph = context.document.body.paragraphs.getFirst();
            let words = paragraph.split([" "], true /* trimDelimiters*/, true /* trimSpaces */);
            words.load("text");

            await context.sync();

            for (let i = 0; i < words.items.length; i++) {
              if (i >= 1) {
                words.items[i - 1].font.highlightColor = "#FFFFFF";
              }
              words.items[i].font.highlightColor = "#FFFF00";

              await context.sync();
              await pause(200);
            }
          });
          ```
      parameters:
        - id: delimiters
          description: <span data-ttu-id="733c2-418">Necesario.</span><span class="sxs-lookup"><span data-stu-id="733c2-418">Required.</span></span> <span data-ttu-id="733c2-419">Los delimitadores como una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="733c2-419">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimDelimiters
          description: '<span data-ttu-id="733c2-420">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-420">Optional.</span></span> <span data-ttu-id="733c2-421">Indica si se van a recortar los delimitadores de los rangos de la colección de intervalos.</span><span class="sxs-lookup"><span data-stu-id="733c2-421">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="733c2-422">El valor predeterminado es false, que indica que los delimitadores se incluyen en los rangos devueltos en la colección Range.</span><span class="sxs-lookup"><span data-stu-id="733c2-422">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>'
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="733c2-423">Opcional.</span><span class="sxs-lookup"><span data-stu-id="733c2-423">Optional.</span></span> <span data-ttu-id="733c2-424">Indica si se van a recortar los caracteres de espaciado (espacios, tabulaciones, saltos de columna y marcas de fin de párrafo) desde el inicio y el final de los rangos devueltos en la colección Range.</span><span class="sxs-lookup"><span data-stu-id="733c2-424">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="733c2-425">El valor predeterminado es false que indica que los caracteres de espaciado del principio y el final de los intervalos se incluyen en la colección Range.</span><span class="sxs-lookup"><span data-stu-id="733c2-425">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Paragraph#startNewList:member(1)'
    summary: |-
      <span data-ttu-id="733c2-426">Inicia una nueva lista con este párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-426">Starts a new list with this paragraph.</span></span> <span data-ttu-id="733c2-427">Se produce un error si el párrafo ya es un elemento de lista.</span><span class="sxs-lookup"><span data-stu-id="733c2-427">Fails if the paragraph is already a list item.</span></span>

      <span data-ttu-id="733c2-428">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-428">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: startNewList()
    fullName: startNewList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startNewList(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-429">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-429">Examples</span></span>

          ```typescript
          // This example starts a new list stating with the second paragraph.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // No properties needed.

            await context.sync();

            var list = paragraphs.items[1].startNewList(); // Indicates new list to be started in the second paragraph.
            list.load("$none"); // No properties needed.

            await context.sync();

            // To add new items to the list use start/end on the insert location parameter.
            list.insertParagraph("New list item on top of the list", "Start");
            let paragraph = list.insertParagraph("New list item at the end of the list (4th level)", "End");
            paragraph.listItem.level = 4; // Sets up list level for the lsit item.
            // To add paragraphs outside the list use before/after:
            list.insertParagraph("New paragraph goes after (not part of the list)", "After");

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#style:member'
    summary: |-
      <span data-ttu-id="733c2-430">Obtiene o establece el nombre de estilo del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-430">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="733c2-431">Use esta propiedad para los estilos personalizados y los nombres de estilo localizados.</span><span class="sxs-lookup"><span data-stu-id="733c2-431">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="733c2-432">Para usar los estilos integrados portátiles entre configuraciones regionales, consulte la propiedad "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="733c2-432">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="733c2-433">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-433">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Paragraph#styleBuiltIn:member'
    summary: |-
      <span data-ttu-id="733c2-p201">Obtiene o establece el nombre del estilo integrado del párrafo. Use esta propiedad para los estilos integrados que son portátiles entre configuraciones regionales. Para usar estilos personalizados o nombres de estilo localizados, consulte la propiedad "style".</span><span class="sxs-lookup"><span data-stu-id="733c2-p201">Gets or sets the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="733c2-437">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-437">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - 'word!Word.Paragraph#styleBuiltIn~0:complex'
  - uid: 'word!Word.Paragraph#tableNestingLevel:member'
    summary: |-
      <span data-ttu-id="733c2-438">Obtiene el nivel de la tabla del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-438">Gets the level of the paragraph's table.</span></span> <span data-ttu-id="733c2-439">Devuelve 0 si el párrafo no está en una tabla.</span><span class="sxs-lookup"><span data-stu-id="733c2-439">It returns 0 if the paragraph is not in a table.</span></span> <span data-ttu-id="733c2-440">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-440">Read-only.</span></span>

      <span data-ttu-id="733c2-441">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-441">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tableNestingLevel
    fullName: tableNestingLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableNestingLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#text:member'
    summary: |-
      <span data-ttu-id="733c2-442">Obtiene el texto del párrafo.</span><span class="sxs-lookup"><span data-stu-id="733c2-442">Gets the text of the paragraph.</span></span> <span data-ttu-id="733c2-443">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="733c2-443">Read-only.</span></span>

      <span data-ttu-id="733c2-444">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="733c2-444">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="733c2-445">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="733c2-445">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: 'word!Word.Paragraph#toJSON:member(1)'
    summary: '<span data-ttu-id="733c2-446">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="733c2-446">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="733c2-447">.</span><span class="sxs-lookup"><span data-stu-id="733c2-447"></span></span> <span data-ttu-id="733c2-448">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="733c2-448"></span></span><!-- --><span data-ttu-id="733c2-449">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Word. Paragraph original es un objeto API `toJSON` , el método devuelve un objeto JavaScript sin formato (escrito como`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="733c2-449">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="733c2-450">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="733c2-450">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - 'word!Word.Interfaces.ParagraphData:interface'
        description: ''
  - uid: 'word!Word.Paragraph#track:member(1)'
    summary: '<span data-ttu-id="733c2-451">Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento.</span><span class="sxs-lookup"><span data-stu-id="733c2-451">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="733c2-452">Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="733c2-452">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="733c2-453">Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="733c2-453">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#untrack:member(1)'
    summary: '<span data-ttu-id="733c2-454">Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente.</span><span class="sxs-lookup"><span data-stu-id="733c2-454">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="733c2-455">Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="733c2-455">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="733c2-456">Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="733c2-456">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="733c2-457">Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.</span><span class="sxs-lookup"><span data-stu-id="733c2-457">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Paragraph#alignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.List:class'
    name: Word.List
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Paragraph#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Paragraph#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.RangeLocation:enum'
    name: Word.RangeLocation
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Table:class'
    name: Word.Table
  - uid: 'word!Word.ListItem:class'
    name: Word.ListItem
  - uid: 'word!Word.Interfaces.ParagraphLoadOptions:interface'
    name: Word.Interfaces.ParagraphLoadOptions
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.TableCell:class'
    name: Word.TableCell
  - uid: 'word!Word.Paragraph#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ParagraphUpdateData:interface'
    name: Interfaces.ParagraphUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Paragraph#styleBuiltIn~0:complex'
    name: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    fullName: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    spec.typeScript:
      - uid: 'word!Word.Style:enum'
        name: Word.Style
        fullName: Word.Style
      - name: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
        fullName: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
  - uid: 'word!Word.Interfaces.ParagraphData:interface'
    name: Word.Interfaces.ParagraphData