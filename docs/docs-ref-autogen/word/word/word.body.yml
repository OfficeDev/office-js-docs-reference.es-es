### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Body:class'
    summary: |-
      <span data-ttu-id="03709-101">Representa el cuerpo de un documento o una sección.</span><span class="sxs-lookup"><span data-stu-id="03709-101">Represents the body of a document or a section.</span></span>

      <span data-ttu-id="03709-102">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Body
    fullName: Word.Body
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Body#clear:member(1)'
      - 'word!Word.Body#contentControls:member'
      - 'word!Word.Body#context:member'
      - 'word!Word.Body#font:member'
      - 'word!Word.Body#getHtml:member(1)'
      - 'word!Word.Body#getOoxml:member(1)'
      - 'word!Word.Body#getRange:member(1)'
      - 'word!Word.Body#getRange:member(2)'
      - 'word!Word.Body#inlinePictures:member'
      - 'word!Word.Body#insertBreak:member(1)'
      - 'word!Word.Body#insertBreak:member(2)'
      - 'word!Word.Body#insertContentControl:member(1)'
      - 'word!Word.Body#insertFileFromBase64:member(1)'
      - 'word!Word.Body#insertFileFromBase64:member(2)'
      - 'word!Word.Body#insertHtml:member(1)'
      - 'word!Word.Body#insertHtml:member(2)'
      - 'word!Word.Body#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Body#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Body#insertOoxml:member(1)'
      - 'word!Word.Body#insertOoxml:member(2)'
      - 'word!Word.Body#insertParagraph:member(1)'
      - 'word!Word.Body#insertParagraph:member(2)'
      - 'word!Word.Body#insertTable:member(1)'
      - 'word!Word.Body#insertTable:member(2)'
      - 'word!Word.Body#insertText:member(1)'
      - 'word!Word.Body#insertText:member(2)'
      - 'word!Word.Body#lists:member'
      - 'word!Word.Body#load:member(1)'
      - 'word!Word.Body#load:member(2)'
      - 'word!Word.Body#load:member(3)'
      - 'word!Word.Body#paragraphs:member'
      - 'word!Word.Body#parentBody:member'
      - 'word!Word.Body#parentBodyOrNullObject:member'
      - 'word!Word.Body#parentContentControl:member'
      - 'word!Word.Body#parentContentControlOrNullObject:member'
      - 'word!Word.Body#parentSection:member'
      - 'word!Word.Body#parentSectionOrNullObject:member'
      - 'word!Word.Body#search:member(1)'
      - 'word!Word.Body#select:member(1)'
      - 'word!Word.Body#select:member(2)'
      - 'word!Word.Body#set:member(1)'
      - 'word!Word.Body#set:member(2)'
      - 'word!Word.Body#style:member'
      - 'word!Word.Body#styleBuiltIn:member'
      - 'word!Word.Body#tables:member'
      - 'word!Word.Body#text:member'
      - 'word!Word.Body#toJSON:member(1)'
      - 'word!Word.Body#track:member(1)'
      - 'word!Word.Body#type:member'
      - 'word!Word.Body#untrack:member(1)'
  - uid: 'word!Word.Body#clear:member(1)'
    summary: |-
      <span data-ttu-id="03709-103">Borra el contenido del objeto de cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-103">Clears the contents of the body object.</span></span> <span data-ttu-id="03709-104">El usuario puede realizar la operación de deshacer en el contenido borrado.</span><span class="sxs-lookup"><span data-stu-id="03709-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="03709-105">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-106">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to clear the contents of the body.
              body.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the body contents.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how the 
          // clear method can be used to clear the contents of a document.
          // https://aka.ms/sillystorywordaddin
          ```
  - uid: 'word!Word.Body#contentControls:member'
    summary: |-
      <span data-ttu-id="03709-107">Obtiene la colección de objetos de control de contenido de texto enriquecido en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-107">Gets the collection of rich text content control objects in the body.</span></span> <span data-ttu-id="03709-108">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-108">Read-only.</span></span>

      <span data-ttu-id="03709-109">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Body#context:member'
    summary: <span data-ttu-id="03709-110">Contexto de la solicitud asociado al objeto.</span><span class="sxs-lookup"><span data-stu-id="03709-110">The request context associated with the object.</span></span> <span data-ttu-id="03709-111">Esto conecta el proceso del complemento con el proceso de la aplicación host de Office.</span><span class="sxs-lookup"><span data-stu-id="03709-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Body#font:member'
    summary: |-
      <span data-ttu-id="03709-112">Obtiene el formato de texto del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-112">Gets the text format of the body.</span></span> <span data-ttu-id="03709-113">Use esta para obtener y establecer el nombre, el tamaño, el color y otras propiedades de la fuente.</span><span class="sxs-lookup"><span data-stu-id="03709-113">Use this to get and set font name, size, color and other properties.</span></span> <span data-ttu-id="03709-114">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-114">Read-only.</span></span>

      <span data-ttu-id="03709-115">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-116">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-116">Examples</span></span>

          ```javascript
          // Get the style and the font size, font name, and font color properties on the body object.
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to load font and style information for the document body.
              context.load(body, 'font/size, font/name, font/color, style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  // Show the results of the load method. Here we show the
                  // property values on the body object.
                  var results = 'Font size: ' + body.font.size +
                                '; Font name: ' + body.font.name +
                                '; Font color: ' + body.font.color +
                                '; Body style: ' + body.style;

                  console.log(results);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="03709-117">Obtiene una representación HTML del objeto Body.</span><span class="sxs-lookup"><span data-stu-id="03709-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="03709-118">Cuando se representa en una página web o visor de HTML, el formato será una coincidencia aproximada, pero no exacta, con el formato del documento.</span><span class="sxs-lookup"><span data-stu-id="03709-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="03709-119">Este método no devuelve el mismo HTML exacto para el mismo documento en diferentes plataformas (Windows, Mac, etc.).</span><span class="sxs-lookup"><span data-stu-id="03709-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="03709-120">Si necesita fidelidad exacta, o coherencia entre plataformas, use `Body.getOoxml()` y convierta el XML devuelto en HTML.</span><span class="sxs-lookup"><span data-stu-id="03709-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="03709-121">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Body#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-122">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to get the HTML contents of the body.
              var bodyHTML = body.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body HTML contents: " + bodyHTML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="03709-123">Obtiene la representación OOXML (Office Open XML) del objeto de cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>

      <span data-ttu-id="03709-124">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Body#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-125">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to get the OOXML contents of the body.
              var bodyOOXML = body.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body OOXML contents: " + bodyOOXML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getRange:member(1)'
    summary: |-
      <span data-ttu-id="03709-126">Obtiene el cuerpo completo, o el punto de inicio o fin del cuerpo, como un intervalo.</span><span class="sxs-lookup"><span data-stu-id="03709-126">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="03709-127">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="03709-128">Opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-128">Optional.</span></span> <span data-ttu-id="03709-129">La ubicación del intervalo puede ser "total", "Start", "End", "after" o "Content".</span><span class="sxs-lookup"><span data-stu-id="03709-129">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - 'word!Word.RangeLocation:enum'
  - uid: 'word!Word.Body#getRange:member(2)'
    summary: |-
      <span data-ttu-id="03709-130">Obtiene el cuerpo completo, o el punto de inicio o fin del cuerpo, como un intervalo.</span><span class="sxs-lookup"><span data-stu-id="03709-130">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="03709-131">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="03709-132">Opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-132">Optional.</span></span> <span data-ttu-id="03709-133">La ubicación del intervalo puede ser "total", "Start", "End", "after" o "Content".</span><span class="sxs-lookup"><span data-stu-id="03709-133">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: 'word!Word.Body#inlinePictures:member'
    summary: |-
      <span data-ttu-id="03709-134">Obtiene la colección de objetos InlinePicture en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-134">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="03709-135">La colección no incluye imágenes flotantes.</span><span class="sxs-lookup"><span data-stu-id="03709-135">The collection does not include floating images.</span></span> <span data-ttu-id="03709-136">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-136">Read-only.</span></span>

      <span data-ttu-id="03709-137">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Body#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="03709-138">Inserta un salto en la ubicación especificada del documento principal.</span><span class="sxs-lookup"><span data-stu-id="03709-138">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="03709-139">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-139">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-140">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-141">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-141">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (ctx) {

              // Create a proxy object for the document body.
              var body = ctx.document.body;

              // Queue a command to insert a page break at the start of the document body.
              body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  console.log('Added a page break at the start of the document body.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="03709-142">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-142">Required.</span></span> <span data-ttu-id="03709-143">Tipo de salto que se va a agregar al cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-143">The break type to add to the body.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="03709-144">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-144">Required.</span></span> <span data-ttu-id="03709-145">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-145">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="03709-146">Inserta un salto en la ubicación especificada del documento principal.</span><span class="sxs-lookup"><span data-stu-id="03709-146">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="03709-147">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-147">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-148">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="03709-149">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-149">Required.</span></span> <span data-ttu-id="03709-150">Tipo de salto que se va a agregar al cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-150">The break type to add to the body.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="03709-151">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-151">Required.</span></span> <span data-ttu-id="03709-152">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-152">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="03709-153">Ajusta el objeto de cuerpo con un control de contenido de texto enriquecido.</span><span class="sxs-lookup"><span data-stu-id="03709-153">Wraps the body object with a Rich Text content control.</span></span>

      <span data-ttu-id="03709-154">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-155">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-155">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to wrap the body in a content control.
              body.insertContentControl();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped the body in a content control.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="03709-156">Inserta un documento en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="03709-157">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-158">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-159">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-159">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert base64 encoded .docx at the beginning of the content body.
              // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.
              body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="03709-160">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-160">Required.</span></span> <span data-ttu-id="03709-161">El contenido codificado en Base64 de un archivo. docx.</span><span class="sxs-lookup"><span data-stu-id="03709-161">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="03709-162">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-162">Required.</span></span> <span data-ttu-id="03709-163">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-163">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="03709-164">Inserta un documento en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-164">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="03709-165">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-165">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-166">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="03709-167">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-167">Required.</span></span> <span data-ttu-id="03709-168">El contenido codificado en Base64 de un archivo. docx.</span><span class="sxs-lookup"><span data-stu-id="03709-168">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="03709-169">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-169">Required.</span></span> <span data-ttu-id="03709-170">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-170">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="03709-171">Inserta HTML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="03709-172">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-173">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-174">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-174">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert HTML in to the beginning of the body.
              body.insertHtml(
                  '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="03709-175">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-175">Required.</span></span> <span data-ttu-id="03709-176">HTML que se va a insertar en el documento.</span><span class="sxs-lookup"><span data-stu-id="03709-176">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="03709-177">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-177">Required.</span></span> <span data-ttu-id="03709-178">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-178">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="03709-179">Inserta HTML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-179">Inserts HTML at the specified location.</span></span> <span data-ttu-id="03709-180">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-181">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="03709-182">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-182">Required.</span></span> <span data-ttu-id="03709-183">HTML que se va a insertar en el documento.</span><span class="sxs-lookup"><span data-stu-id="03709-183">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="03709-184">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-184">Required.</span></span> <span data-ttu-id="03709-185">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-185">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="03709-186">Inserta una imagen en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-186">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="03709-187">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-187">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-188">\[[Conjunto de API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-189">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-189">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert OOXML in to the beginning of the body.
              body.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml

          // The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="03709-190">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-190">Required.</span></span> <span data-ttu-id="03709-191">Imagen codificada en base64 que se va a insertar en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-191">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="03709-192">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-192">Required.</span></span> <span data-ttu-id="03709-193">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-193">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="03709-194">Inserta una imagen en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-194">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="03709-195">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-195">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-196">\[[Conjunto de API: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-196">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="03709-197">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-197">Required.</span></span> <span data-ttu-id="03709-198">Imagen codificada en base64 que se va a insertar en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-198">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="03709-199">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-199">Required.</span></span> <span data-ttu-id="03709-200">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-200">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="03709-201">Inserta OOXML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="03709-202">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-203">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="03709-204">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-204">Required.</span></span> <span data-ttu-id="03709-205">OOXML que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="03709-205">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="03709-206">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-206">Required.</span></span> <span data-ttu-id="03709-207">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-207">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="03709-208">Inserta OOXML en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-208">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="03709-209">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-209">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-210">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="03709-211">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-211">Required.</span></span> <span data-ttu-id="03709-212">OOXML que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="03709-212">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="03709-213">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-213">Required.</span></span> <span data-ttu-id="03709-214">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-214">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="03709-215">Inserta un párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-215">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="03709-216">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-216">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-217">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-218">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-218">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert the paragraph at the end of the document body.
              body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added at the end of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let paragraph = context.document.body.insertParagraph("Timeline", "End");
              paragraph.style = "Heading 2";
              let paragraph2 = context.document.body.insertParagraph("The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.", "End");
              paragraph2.style = "Normal";
              let paragraph3 = context.document.body.insertParagraph("Project Costs by Phase", "End");
              paragraph3.style = "Heading 2";
              // Note a content control with the title of "ProjectCosts" is added. Content will be replaced later.
              let paragraph4 = context.document.body.insertParagraph("<Add Project Costs Here>", "End");
              paragraph4.style = "Normal";
              paragraph4.font.highlightColor = "#FFFF00";
              let contentControl = paragraph4.insertContentControl();
              contentControl.title = "ProjectCosts";
              let paragraph5 = context.document.body.insertParagraph("Project Team", "End");
              paragraph5.style = "Heading 2";
              paragraph5.font.highlightColor = "#FFFFFF";
              let paragraph6 = context.document.body.insertParagraph("Terms of Work", "End");
              paragraph6.style = "Heading 1";
              let paragraph7 = context.document.body.insertParagraph("Contractor shall provide the Services and Deliverable(s) as follows:", "End");
              paragraph7.style = "Normal";
              let paragraph8 = context.document.body.insertParagraph("Out-of-Pocket Expenses / Invoice Procedures", "End");
              paragraph8.style = "Heading 2";
              let paragraph9 = context.document.body.insertParagraph("Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.", "End");
              paragraph9.style = "Normal";
              // Insert a page break at the end of the document.
              context.document.body.insertBreak("Page", "End");

              await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="03709-219">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-219">Required.</span></span> <span data-ttu-id="03709-220">Texto de párrafo que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="03709-220">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="03709-221">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-221">Required.</span></span> <span data-ttu-id="03709-222">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-222">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="03709-223">Inserta un párrafo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-223">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="03709-224">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-224">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-225">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="03709-226">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-226">Required.</span></span> <span data-ttu-id="03709-227">Texto de párrafo que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="03709-227">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="03709-228">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-228">Required.</span></span> <span data-ttu-id="03709-229">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-229">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertTable:member(1)'
    summary: |-
      <span data-ttu-id="03709-230">Inserta una tabla con el número especificado de filas y columnas.</span><span class="sxs-lookup"><span data-stu-id="03709-230">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="03709-231">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-231">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-232">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-233">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-233">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Use a two-dimensional array to hold the initial table values.
            let data = [
              ["Tokyo", "Beijing", "Seattle"],
              ["Apple", "Orange", "Pineapple"]
            ];
            let table = context.document.body.insertTable(2, 3, "Start", data);
            table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;
            table.styleFirstColumn = false;

            await context.sync();
          });
          ```
      parameters:
        - id: rowCount
          description: <span data-ttu-id="03709-234">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-234">Required.</span></span> <span data-ttu-id="03709-235">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="03709-235">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="03709-236">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-236">Required.</span></span> <span data-ttu-id="03709-237">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="03709-237">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="03709-238">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-238">Required.</span></span> <span data-ttu-id="03709-239">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-239">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
        - id: values
          description: '<span data-ttu-id="03709-240">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-240">Optional 2D array.</span></span> <span data-ttu-id="03709-241">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="03709-241">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'word!Word.Body#insertTable:member(2)'
    summary: |-
      <span data-ttu-id="03709-242">Inserta una tabla con el número especificado de filas y columnas.</span><span class="sxs-lookup"><span data-stu-id="03709-242">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="03709-243">El valor insertLocation puede ser 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-243">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="03709-244">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-244">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="03709-245">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-245">Required.</span></span> <span data-ttu-id="03709-246">Número de filas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="03709-246">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="03709-247">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-247">Required.</span></span> <span data-ttu-id="03709-248">Número de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="03709-248">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="03709-249">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-249">Required.</span></span> <span data-ttu-id="03709-250">El valor puede ser "Start" o "End".</span><span class="sxs-lookup"><span data-stu-id="03709-250">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: '<span data-ttu-id="03709-251">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-251">Optional 2D array.</span></span> <span data-ttu-id="03709-252">Si se especifican las cadenas correspondientes en la matriz, se rellenan las celdas.</span><span class="sxs-lookup"><span data-stu-id="03709-252">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: 'word!Word.Body#insertText:member(1)'
    summary: |-
      <span data-ttu-id="03709-253">Inserta texto en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-253">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="03709-254">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-255">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-256">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert text in to the beginning of the body.
              body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="03709-257">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-257">Required.</span></span> <span data-ttu-id="03709-258">Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="03709-258">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="03709-259">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-259">Required.</span></span> <span data-ttu-id="03709-260">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-260">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertText:member(2)'
    summary: |-
      <span data-ttu-id="03709-261">Inserta texto en el cuerpo en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="03709-261">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="03709-262">El valor insertLocation puede ser 'Replace', 'Start' o 'End'.</span><span class="sxs-lookup"><span data-stu-id="03709-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="03709-263">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="03709-264">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-264">Required.</span></span> <span data-ttu-id="03709-265">Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="03709-265">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="03709-266">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="03709-266">Required.</span></span> <span data-ttu-id="03709-267">El valor puede ser ''Replace'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-267">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#lists:member'
    summary: |-
      <span data-ttu-id="03709-268">Obtiene la colección de objetos de lista en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-268">Gets the collection of list objects in the body.</span></span> <span data-ttu-id="03709-269">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-269">Read-only.</span></span>

      <span data-ttu-id="03709-270">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - 'word!Word.ListCollection:class'
  - uid: 'word!Word.Body#load:member(1)'
    summary: '<span data-ttu-id="03709-271">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="03709-271">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03709-272">Antes de leer las propiedades, debe llamar a "context.sync()".</span><span class="sxs-lookup"><span data-stu-id="03709-272">You must call "context.sync()" before reading the properties.</span></span>'
    remarks: |-
      <span data-ttu-id="03709-273">Además de esta firma, este método tiene las siguientes firmas:</span><span class="sxs-lookup"><span data-stu-id="03709-273">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="03709-274">`load(option?: string | string[]): Word.Body`-Donde opción es una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="03709-274">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="03709-275">`load(option?: { select?: string; expand?: string; }): Word.Body`-Where opción. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y Options. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="03709-275">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="03709-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-Solo disponible en tipos de colección.</span><span class="sxs-lookup"><span data-stu-id="03709-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="03709-277">Es similar a la firma anterior.</span><span class="sxs-lookup"><span data-stu-id="03709-277">It is similar to the preceding signature.</span></span> <span data-ttu-id="03709-278">Option. Top especifica el número máximo de elementos de colección que se pueden incluir en el resultado.</span><span class="sxs-lookup"><span data-stu-id="03709-278">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="03709-279">La opción. SKIP especifica el número de elementos que se deben omitir y que no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="03709-279">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="03709-280">Si se especifica Option. Top, el conjunto de resultados se iniciará después de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="03709-280">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.BodyLoadOptions:interface'
  - uid: 'word!Word.Body#load:member(2)'
    summary: <span data-ttu-id="03709-281">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="03709-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03709-282">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="03709-282">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="03709-283">Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.</span><span class="sxs-lookup"><span data-stu-id="03709-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Body#load:member(3)'
    summary: <span data-ttu-id="03709-284">Pone en cola un comando para cargar las propiedades especificadas del objeto.</span><span class="sxs-lookup"><span data-stu-id="03709-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03709-285">Debe llamar `context.sync()` antes de leer las propiedades.</span><span class="sxs-lookup"><span data-stu-id="03709-285">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="03709-286">Donde propertyNamesAndPaths. Select es una cadena delimitada por comas que especifica las propiedades que se van a cargar y propertyNamesAndPaths. Expand es una cadena delimitada por comas que especifica las propiedades de navegación que se deben cargar.</span><span class="sxs-lookup"><span data-stu-id="03709-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Body#paragraphs:member'
    summary: |-
      <span data-ttu-id="03709-287">Obtiene la colección de objetos Paragraph en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-287">Gets the collection of paragraph objects in the body.</span></span> <span data-ttu-id="03709-288">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-288">Read-only.</span></span>

      <span data-ttu-id="03709-289">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-290">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-290">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
  - uid: 'word!Word.Body#parentBody:member'
    summary: |-
      <span data-ttu-id="03709-p167">Obtiene el cuerpo primario del cuerpo. Por ejemplo, un cuerpo primario de un cuerpo de celda de tabla podría ser un encabezado. Se produce si no hay un cuerpo primario. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-p167">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="03709-295">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-295">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Body#parentBodyOrNullObject:member'
    summary: |-
      <span data-ttu-id="03709-p168">Obtiene el cuerpo primario del cuerpo. Por ejemplo, un cuerpo primario de un cuerpo de celda de tabla podría ser un encabezado. Devuelve un objeto NULL si no hay un cuerpo principal. Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-p168">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="03709-300">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-300">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBodyOrNullObject
    fullName: parentBodyOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBodyOrNullObject: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Body#parentContentControl:member'
    summary: |-
      <span data-ttu-id="03709-301">Obtiene el control de contenido que contiene el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-301">Gets the content control that contains the body.</span></span> <span data-ttu-id="03709-302">Produce una excepción si no hay un control de contenido primario.</span><span class="sxs-lookup"><span data-stu-id="03709-302">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="03709-303">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-303">Read-only.</span></span>

      <span data-ttu-id="03709-304">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-304">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Body#parentContentControlOrNullObject:member'
    summary: |-
      <span data-ttu-id="03709-305">Obtiene el control de contenido que contiene el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-305">Gets the content control that contains the body.</span></span> <span data-ttu-id="03709-306">Devuelve un objeto nulo si no hay un control de contenido primario.</span><span class="sxs-lookup"><span data-stu-id="03709-306">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="03709-307">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-307">Read-only.</span></span>

      <span data-ttu-id="03709-308">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-308">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Body#parentSection:member'
    summary: |-
      <span data-ttu-id="03709-309">Obtiene la sección primaria del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-309">Gets the parent section of the body.</span></span> <span data-ttu-id="03709-310">Produce una excepción si no hay una sección principal.</span><span class="sxs-lookup"><span data-stu-id="03709-310">Throws if there isn't a parent section.</span></span> <span data-ttu-id="03709-311">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-311">Read-only.</span></span>

      <span data-ttu-id="03709-312">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-312">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSection
    fullName: parentSection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSection: Word.Section;'
      return:
        type:
          - 'word!Word.Section:class'
  - uid: 'word!Word.Body#parentSectionOrNullObject:member'
    summary: |-
      <span data-ttu-id="03709-313">Obtiene la sección primaria del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-313">Gets the parent section of the body.</span></span> <span data-ttu-id="03709-314">Devuelve un objeto nulo si no hay una sección principal.</span><span class="sxs-lookup"><span data-stu-id="03709-314">Returns a null object if there isn't a parent section.</span></span> <span data-ttu-id="03709-315">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-315">Read-only.</span></span>

      <span data-ttu-id="03709-316">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-316">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSectionOrNullObject
    fullName: parentSectionOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionOrNullObject: Word.Section;'
      return:
        type:
          - 'word!Word.Section:class'
  - uid: 'word!Word.Body#search:member(1)'
    summary: |-
      <span data-ttu-id="03709-317">Realiza una búsqueda con el SearchOptions especificado en el ámbito del objeto de cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-317">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="03709-318">Los resultados de la búsqueda son una colección de objetos de intervalo.</span><span class="sxs-lookup"><span data-stu-id="03709-318">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="03709-319">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-320">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-320">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to search the document.
              var searchResults = context.document.body.search('video', {matchCase: false});

              // Queue a command to load the results.
              context.load(searchResults, 'text, font');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  var results = 'Found count: ' + searchResults.items.length +
                                '; we highlighted the results.';

                  // Queue a command to change the font for each found item.
                  for (var i = 0; i < searchResults.items.length; i++) {
                    searchResults.items[i].font.color = '#FF0000'    // Change color to Red
                    searchResults.items[i].font.highlightColor = '#FFFF00';
                    searchResults.items[i].font.bold = true;
                  }

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log(results);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
            let results = context.document.body.search("Online");
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "yellow";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes
            // (i.e. use wildcards).
            let results = context.document.body.search("$*.[0-9][0-9]", { matchWildcards: true });
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "red";
              results.items[i].font.color = "white";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="03709-321">Necesario.</span><span class="sxs-lookup"><span data-stu-id="03709-321">Required.</span></span> <span data-ttu-id="03709-322">Texto de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="03709-322">The search text.</span></span> <span data-ttu-id="03709-323">Puede tener un máximo de 255 caracteres.</span><span class="sxs-lookup"><span data-stu-id="03709-323">Can be a maximum of 255 characters.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="03709-324">Opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-324">Optional.</span></span> <span data-ttu-id="03709-325">Opciones de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="03709-325">Options for the search.</span></span>
          type:
            - 'word!Word.Body#search~0:complex'
  - uid: 'word!Word.Body#select:member(1)'
    summary: |-
      <span data-ttu-id="03709-326">Selecciona el cuerpo y se desplaza por la interfaz de usuario de Word hasta él.</span><span class="sxs-lookup"><span data-stu-id="03709-326">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="03709-327">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-327">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-328">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-328">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to select the document body. The Word UI will
              // move to the selected document body.
              body.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="03709-329">Opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-329">Optional.</span></span> <span data-ttu-id="03709-330">El modo de selección puede ser ''Select'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-330">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="03709-331">''Select'' es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="03709-331">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Body#select:member(2)'
    summary: |-
      <span data-ttu-id="03709-332">Selecciona el cuerpo y se desplaza por la interfaz de usuario de Word hasta él.</span><span class="sxs-lookup"><span data-stu-id="03709-332">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="03709-333">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-333">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="03709-334">Opcional.</span><span class="sxs-lookup"><span data-stu-id="03709-334">Optional.</span></span> <span data-ttu-id="03709-335">El modo de selección puede ser ''Select'', ''Start'' o ''End''.</span><span class="sxs-lookup"><span data-stu-id="03709-335">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="03709-336">''Select'' es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="03709-336">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Body#set:member(1)'
    summary: '<span data-ttu-id="03709-337">Establece varias propiedades de un objeto al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="03709-337">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="03709-338">Puede pasar un objeto sin formato con las propiedades apropiadas o cualquier otro objeto de la API del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="03709-338">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="03709-339">Este método tiene la siguiente firma adicional:</span><span class="sxs-lookup"><span data-stu-id="03709-339">This method has the following additional signature:</span></span>

      `set(properties: Word.Body): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="03709-340">Objeto de JavaScript con propiedades que se estructuran de forma isomórfico a las propiedades del objeto en el que se llama al método.</span><span class="sxs-lookup"><span data-stu-id="03709-340">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.BodyUpdateData:interface'
        - id: options
          description: <span data-ttu-id="03709-341">Proporciona una opción para suprimir errores si el objeto Properties intenta establecer propiedades de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-341">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Body#set:member(2)'
    summary: '<span data-ttu-id="03709-342">Establece varias propiedades en el objeto al mismo tiempo, basándose en un objeto cargado existente.</span><span class="sxs-lookup"><span data-stu-id="03709-342">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Body): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Body:class'
  - uid: 'word!Word.Body#style:member'
    summary: |-
      <span data-ttu-id="03709-p179">Obtiene o establece el nombre de estilo del cuerpo. Use esta propiedad para los estilos personalizados y los nombres de estilo localizados. Para usar los estilos integrados portátiles entre configuraciones regionales, consulte la propiedad "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="03709-p179">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="03709-346">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-346">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Body#styleBuiltIn:member'
    summary: |-
      <span data-ttu-id="03709-p180">Obtiene o establece el nombre del estilo integrado del cuerpo. Use esta propiedad para los estilos integrados que son portátiles entre configuraciones regionales. Para usar estilos personalizados o nombres de estilo localizados, consulte la propiedad "style".</span><span class="sxs-lookup"><span data-stu-id="03709-p180">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="03709-350">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - 'word!Word.Body#styleBuiltIn~0:complex'
  - uid: 'word!Word.Body#tables:member'
    summary: |-
      <span data-ttu-id="03709-351">Obtiene la colección de objetos de tabla en el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-351">Gets the collection of table objects in the body.</span></span> <span data-ttu-id="03709-352">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-352">Read-only.</span></span>

      <span data-ttu-id="03709-353">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-353">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - 'word!Word.TableCollection:class'
  - uid: 'word!Word.Body#text:member'
    summary: |-
      <span data-ttu-id="03709-354">Obtiene el texto del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-354">Gets the text of the body.</span></span> <span data-ttu-id="03709-355">Use el método insertText para insertar texto.</span><span class="sxs-lookup"><span data-stu-id="03709-355">Use the insertText method to insert text.</span></span> <span data-ttu-id="03709-356">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-356">Read-only.</span></span>

      <span data-ttu-id="03709-357">\[[Conjunto de API: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-357">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03709-358">Ejemplos</span><span class="sxs-lookup"><span data-stu-id="03709-358">Examples</span></span>

          ```javascript
          // Get the text property on the body object
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to load the text in document body.
              context.load(body, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body contents: " + body.text);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#toJSON:member(1)'
    summary: '<span data-ttu-id="03709-359">Reemplaza el método JavaScript `toJSON()` para proporcionar un resultado más útil cuando se pasa un objeto API a`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="03709-359">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="03709-360">.</span><span class="sxs-lookup"><span data-stu-id="03709-360"></span></span> <span data-ttu-id="03709-361">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="03709-361"></span></span><!-- --><span data-ttu-id="03709-362">, a su vez, llama `toJSON` al método del objeto que se le pasa.) Mientras que el objeto Word. Body original es un objeto API, `toJSON` el método devuelve un objeto JavaScript sin formato (escrito como`Word.Interfaces.BodyData`</span><span class="sxs-lookup"><span data-stu-id="03709-362">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Body object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`</span></span><!-- --><span data-ttu-id="03709-363">) que contiene copias rasas de las propiedades secundarias cargadas del objeto original.</span><span class="sxs-lookup"><span data-stu-id="03709-363">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.BodyData;'
      return:
        type:
          - 'word!Word.Interfaces.BodyData:interface'
        description: ''
  - uid: 'word!Word.Body#track:member(1)'
    summary: '<span data-ttu-id="03709-364">Realiza un seguimiento del objeto de ajuste automático según cambios adyacentes en el documento.</span><span class="sxs-lookup"><span data-stu-id="03709-364">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="03709-365">Esta llamada es una forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="03709-365">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="03709-366">Si usa este objeto en llamadas ".sync" y fuera de la ejecución secuencial de un lote de ".run", y obtiene un error "InvalidObjectPath" al establecer una propiedad o invocar un método en el objeto, debería haber agregado el objeto a la colección de objetos de la que realiza un seguimiento cuando se creó el objeto.</span><span class="sxs-lookup"><span data-stu-id="03709-366">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
  - uid: 'word!Word.Body#type:member'
    summary: |-
      <span data-ttu-id="03709-367">Obtiene el tipo del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="03709-367">Gets the type of the body.</span></span> <span data-ttu-id="03709-368">El tipo puede ser 'MainDoc', 'Section', 'Header', 'Footer' o 'TableCell'.</span><span class="sxs-lookup"><span data-stu-id="03709-368">The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'.</span></span> <span data-ttu-id="03709-369">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="03709-369">Read-only.</span></span>

      <span data-ttu-id="03709-370">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03709-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
      return:
        type:
          - 'word!Word.Body#type~0:complex'
  - uid: 'word!Word.Body#untrack:member(1)'
    summary: '<span data-ttu-id="03709-371">Libere la memoria asociada a este objeto, si se ha realizado un seguimiento de él anteriormente.</span><span class="sxs-lookup"><span data-stu-id="03709-371">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="03709-372">Esta llamada es una forma abreviada de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="03709-372">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="03709-373">Tener muchos objetos marcados ralentiza la aplicación host, así que debe recordar liberar los objetos que agregue cuando haya terminado con ellos.</span><span class="sxs-lookup"><span data-stu-id="03709-373">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="03709-374">Debe llamar a "context.sync()" antes de que surta efecto la liberación de memoria.</span><span class="sxs-lookup"><span data-stu-id="03709-374">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Body#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Body#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.RangeLocation:enum'
    name: Word.RangeLocation
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Table:class'
    name: Word.Table
  - uid: 'word!Word.ListCollection:class'
    name: Word.ListCollection
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.Interfaces.BodyLoadOptions:interface'
    name: Word.Interfaces.BodyLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.Section:class'
    name: Word.Section
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Body#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.BodyUpdateData:interface'
    name: Interfaces.BodyUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Body#styleBuiltIn~0:complex'
    name: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    fullName: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    spec.typeScript:
      - uid: 'word!Word.Style:enum'
        name: Word.Style
        fullName: Word.Style
      - name: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
        fullName: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
  - uid: 'word!Word.TableCollection:class'
    name: Word.TableCollection
  - uid: 'word!Word.Interfaces.BodyData:interface'
    name: Word.Interfaces.BodyData
  - uid: 'word!Word.Body#type~0:complex'
    name: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
    fullName: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
    spec.typeScript:
      - uid: 'word!Word.BodyType:enum'
        name: Word.BodyType
        fullName: Word.BodyType
      - name: ' | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"'
        fullName: ' | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"'