### YamlMime:UniversalReference
items:
  - uid: word.Word.Interfaces.CustomPropertyData
    summary: <span data-ttu-id="bec3a-101">Una interfaz que describe los datos devueltos al llamar a "customProperty. toJSON ()".</span><span class="sxs-lookup"><span data-stu-id="bec3a-101">An interface describing the data returned by calling "customProperty.toJSON()".</span></span>
    name: Word.Interfaces.CustomPropertyData
    fullName: Word.Interfaces.CustomPropertyData
    langs:
      - typeScript
    type: interface
    package: word
    children:
      - word.Word.Interfaces.CustomPropertyData.key
      - word.Word.Interfaces.CustomPropertyData.type
      - word.Word.Interfaces.CustomPropertyData.value
  - uid: word.Word.Interfaces.CustomPropertyData.key
    summary: |-
      <span data-ttu-id="bec3a-102">Obtiene la clave de la propiedad personalizada.</span><span class="sxs-lookup"><span data-stu-id="bec3a-102">Gets the key of the custom property.</span></span> <span data-ttu-id="bec3a-103">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="bec3a-103">Read only.</span></span>

      <span data-ttu-id="bec3a-104">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bec3a-104">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key?: string;'
      return:
        type:
          - string
  - uid: word.Word.Interfaces.CustomPropertyData.type
    summary: |-
      <span data-ttu-id="bec3a-105">Obtiene el tipo de valor de la propiedad personalizada.</span><span class="sxs-lookup"><span data-stu-id="bec3a-105">Gets the value type of the custom property.</span></span> <span data-ttu-id="bec3a-106">Los valores posibles son: String, Number, Date, Boolean.</span><span class="sxs-lookup"><span data-stu-id="bec3a-106">Possible values are: String, Number, Date, Boolean.</span></span> <span data-ttu-id="bec3a-107">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="bec3a-107">Read only.</span></span>

      <span data-ttu-id="bec3a-108">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bec3a-108">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type?: Word.DocumentPropertyType | "String" | "Number" | "Date" | "Boolean";'
      return:
        type:
          - Word.DocumentPropertyType | "String" | "Number" | "Date" | "Boolean"
  - uid: word.Word.Interfaces.CustomPropertyData.value
    summary: |-
      <span data-ttu-id="bec3a-109">Obtiene o establece el valor de la propiedad personalizada.</span><span class="sxs-lookup"><span data-stu-id="bec3a-109">Gets or sets the value of the custom property.</span></span> <span data-ttu-id="bec3a-110">Tenga en cuenta que aunque el formato de archivo de Word en la web y DOCX permite que estas propiedades sean arbitrariamente largas, la versión de escritorio de Word truncará los valores de cadena a caracteres de 255 16 bits (posiblemente creando Unicode no válido dividiendo un par suplente).</span><span class="sxs-lookup"><span data-stu-id="bec3a-110">Note that even though Word on the web and the docx file format allow these properties to be arbitrarily long, the desktop version of Word will truncate string values to 255 16-bit chars (possibly creating invalid unicode by breaking up a surrogate pair).</span></span>

      <span data-ttu-id="bec3a-111">\[[Conjunto de API: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bec3a-111">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: any;'
      return:
        type:
          - any