### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.Storage
    summary: '<span data-ttu-id="89af4-101">Almacenamiento de valor clave asincrónico, global y persistente.</span><span class="sxs-lookup"><span data-stu-id="89af4-101">Asynchronous, global, and persistent key-value storage.</span></span>'
    remarks: '<span data-ttu-id="89af4-102">El límite de almacenamiento es de 10 MB por dominio, que puede ser compartido por varios complementos.</span><span class="sxs-lookup"><span data-stu-id="89af4-102">Storage limit is 10 MB per domain, which may be shared by multiple add-ins.</span></span>'
    name: OfficeRuntime.Storage
    fullName: OfficeRuntime.Storage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.Storage.getItem
      - office-runtime.OfficeRuntime.Storage.getItems
      - office-runtime.OfficeRuntime.Storage.getKeys
      - office-runtime.OfficeRuntime.Storage.removeItem
      - office-runtime.OfficeRuntime.Storage.removeItems
      - office-runtime.OfficeRuntime.Storage.setItem
      - office-runtime.OfficeRuntime.Storage.setItems
  - uid: office-runtime.OfficeRuntime.Storage.getItem
    summary: '<span data-ttu-id="89af4-103">Recupera un elemento del almacenamiento en función de su clave.</span><span class="sxs-lookup"><span data-stu-id="89af4-103">Retrieves an item from storage based on its key.</span></span> <span data-ttu-id="89af4-104">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-104">Returns a Promise.</span></span> <span data-ttu-id="89af4-105">En caso de que la promesa no se resuelva, devuelve NULL.</span><span class="sxs-lookup"><span data-stu-id="89af4-105">In the event the Promise does not resolve, returns null.</span></span>'
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Promise<string | null>;'
      return:
        type:
          - Promise<string | null>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="89af4-106">Clave del elemento que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="89af4-106">Key of item to be retrieved.</span></span> <span data-ttu-id="89af4-107">Debe ser una cadena.</span><span class="sxs-lookup"><span data-stu-id="89af4-107">Must be a string.</span></span>
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.getItems
    summary: '<span data-ttu-id="89af4-108">Recupera varios elementos del almacenamiento en función de su clave.</span><span class="sxs-lookup"><span data-stu-id="89af4-108">Retrieves multiple items from storage based on their key.</span></span> <span data-ttu-id="89af4-109">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-109">Returns a Promise.</span></span> <span data-ttu-id="89af4-110">En caso de que la promesa no se resuelva, devuelve NULL.</span><span class="sxs-lookup"><span data-stu-id="89af4-110">In the event the Promise does not resolve, returns null.</span></span>'
    name: getItems(keys)
    fullName: getItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItems(keys: string[]): Promise<{ [key: string]: string | null }>;'
      return:
        type:
          - 'Promise<{ [key: string]: string | null }>'
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="89af4-111">Claves de los elementos que se van a quitar.</span><span class="sxs-lookup"><span data-stu-id="89af4-111">Keys of items to be removed.</span></span> <span data-ttu-id="89af4-112">Debe ser una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="89af4-112">Must be an array of strings.</span></span>
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.getKeys
    summary: <span data-ttu-id="89af4-113">Recupera una matriz de todas las claves del almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="89af4-113">Retrieves an array of all keys from storage.</span></span> <span data-ttu-id="89af4-114">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-114">Returns a Promise.</span></span>
    name: getKeys()
    fullName: getKeys()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getKeys(): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
  - uid: office-runtime.OfficeRuntime.Storage.removeItem
    summary: <span data-ttu-id="89af4-115">Quita un elemento del almacenamiento en función de su clave.</span><span class="sxs-lookup"><span data-stu-id="89af4-115">Removes an item from storage based on its key.</span></span> <span data-ttu-id="89af4-116">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-116">Returns a Promise.</span></span>
    name: removeItem(key)
    fullName: removeItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="89af4-117">Clave del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="89af4-117">Key of item to be removed.</span></span> <span data-ttu-id="89af4-118">Debe ser una cadena.</span><span class="sxs-lookup"><span data-stu-id="89af4-118">Must be a string.</span></span>
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.removeItems
    summary: <span data-ttu-id="89af4-119">Quita varios elementos del almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="89af4-119">Removes multiple items from storage.</span></span> <span data-ttu-id="89af4-120">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-120">Returns a Promise.</span></span>
    name: removeItems(keys)
    fullName: removeItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItems(keys: string[]): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="89af4-121">Claves de los elementos que se van a quitar.</span><span class="sxs-lookup"><span data-stu-id="89af4-121">Keys of items to be removed.</span></span> <span data-ttu-id="89af4-122">Debe ser una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="89af4-122">Must be an array of strings.</span></span>
          type:
            - 'string[]'
  - uid: office-runtime.OfficeRuntime.Storage.setItem
    summary: <span data-ttu-id="89af4-123">Establece un par clave-valor en almacenamiento o actualiza un par clave-valor existente.</span><span class="sxs-lookup"><span data-stu-id="89af4-123">Sets a key-value pair into storage or updates an existing key-value pair.</span></span> <span data-ttu-id="89af4-124">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-124">Returns a Promise.</span></span>
    name: 'setItem(key, value)'
    fullName: 'setItem(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="89af4-125">Clave del elemento que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="89af4-125">Key of item to be set.</span></span> <span data-ttu-id="89af4-126">Debe ser una cadena.</span><span class="sxs-lookup"><span data-stu-id="89af4-126">Must be a string.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="89af4-127">Debe ser una cadena.</span><span class="sxs-lookup"><span data-stu-id="89af4-127">Must be a string.</span></span>
          type:
            - string
  - uid: office-runtime.OfficeRuntime.Storage.setItems
    summary: <span data-ttu-id="89af4-128">Establece varios elementos en el almacenamiento o actualiza varios elementos dentro del almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="89af4-128">Sets multiple items into storage or updates multiple items within storage.</span></span> <span data-ttu-id="89af4-129">Devuelve una promesa.</span><span class="sxs-lookup"><span data-stu-id="89af4-129">Returns a Promise.</span></span>
    name: setItems(keyValues)
    fullName: setItems(keyValues)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItems(keyValues: { [key: string]: string }): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValues
          description: <span data-ttu-id="89af4-130">Pares clave-valor que se van a establecer.</span><span class="sxs-lookup"><span data-stu-id="89af4-130">Key-value pairs to be set.</span></span> <span data-ttu-id="89af4-131">Deben ser cadenas.</span><span class="sxs-lookup"><span data-stu-id="89af4-131">Must be strings.</span></span>
          type:
            - '{ [key: string]: string }'